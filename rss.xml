<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="/custom/css/rss2.xsl" ?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>酥米的小站</title>
    <link>https://www.sumi233.top/</link>
    
    <image>
      <url>https://www.gravatar.com/avatar/46b6b3e8468d1458aecd06fa3b9081fb</url>
      <title>酥米的小站</title>
      <link>https://www.sumi233.top/</link>
    </image>
    
    <atom:link href="https://www.sumi233.top/rss.xml" rel="self" type="application/rss+xml"/>
    
    <description>酥米的技术和生活分享地，这里分享前沿技术文章、开发实践心得，以及科技与日常交织的思考。从代码实现到生活洞察，用简洁的文字记录成长轨迹，搭建起技术与人文之间的桥梁。</description>
    <pubDate>Mon, 13 Oct 2025 16:13:14 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>酥米小站微信小程序即将上线</title>
      <link>https://www.sumi233.top/%E5%85%B6%E4%BB%96/sumiblogappsup/</link>
      <guid>https://www.sumi233.top/%E5%85%B6%E4%BB%96/sumiblogappsup/</guid>
      <pubDate>Mon, 13 Oct 2025 16:00:13 GMT</pubDate>
      
      <description>基于Vant-weapp制作的Hexo静态博客微信小程序《酥米小站》即将上线</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>最近看到彬红茶大佬更新了博客App，突发奇想（其实是眼馋了🌚），也想做一个属于Hexo的静态博客软件。</p><p>静态博客最被人诟病的是页面的刷新不及时，获取信息的速度没有动态博客快，于是我选择了ryanuo大佬的hexo-wx-api项目，通过直接抓取hexo-generator-restful生成的json文件，这样小程序里的文章更新就会比博客网站及时。俺选择微信小程序的原因是方便，不需要特别的打理，也不需要考虑多端适配，只需要打开微信搜索小程序就行了，方便了开发者也方便了用户。</p><h1 id="启动！开干！"><a href="#启动！开干！" class="headerlink" title="启动！开干！"></a>启动！开干！</h1><p>于是我花了大概8hours+，基于ryanuo大佬的hexo-wx-api项目，制作出了这个博客。修改了原项目70%+的代码，目前实现了基础功能</p><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/wx-1.jpg"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/wx-2.jpg"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/wx-3.jpg"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/wx-4.jpg"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/wx-5.jpg"></p><h1 id="进度"><a href="#进度" class="headerlink" title="进度"></a>进度</h1><h2 id="目前可以使用的功能"><a href="#目前可以使用的功能" class="headerlink" title="目前可以使用的功能"></a>目前可以使用的功能</h2><ul><li>文章阅读</li><li>留言板</li><li>分类功能</li><li>博客实时刷新</li></ul><h2 id="未来完成的功能"><a href="#未来完成的功能" class="headerlink" title="未来完成的功能"></a>未来完成的功能</h2><ul><li><input disabled type="checkbox"> 暗色模式适配</li><li><input disabled type="checkbox"> Twikoo评论区</li><li><input disabled type="checkbox"> 友链页面</li><li><input disabled type="checkbox"> 文章界面优化</li><li><input checked disabled type="checkbox"> 添加登录功能（已经通过微信登录实现）</li><li><input disabled type="checkbox"> 微信文章通知（不知道静态博客可不可以实现，想试试）</li><li><input disabled type="checkbox"> 博客文章分享</li><li><input disabled type="checkbox"> 搜索功能（目前是半废状态，所以去除了）</li></ul><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ul><li>有部分功能尚未完工，正在抓紧补全</li><li>部分ui出现拉伸情况，正在修复</li><li>搜索半废（去掉了）</li></ul><h1 id="遗憾"><a href="#遗憾" class="headerlink" title="遗憾"></a>遗憾</h1><p>本人差半个月成年，暂时无法进行小程序的发布，所以发布日期会在月底至下个月，大家敬请期待哦~</p><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p>感谢ryanuo大佬编写的hexo-wx-api项目，让静态博客小程序化成为了可能，谢谢您！</p><p>原项目：</p><div calss="anzhiyu-tag-link"><a class="tag-Link" target="_blank" href="https://github.com/ryanuo/hexo-wx-api">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style>          <i class="anzhiyufont anzhiyu-icon-link" style></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">ryanuo/hexo-wx-api</div>            <div class="tag-link-sitename">GitHub</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E5%85%B6%E4%BB%96/">其他</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E5%8D%9A%E5%AE%A2/">博客</category>
      
      
      <comments>https://www.sumi233.top/%E5%85%B6%E4%BB%96/sumiblogappsup/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Windows 11 Insider Preview Build 26220.6780 更新日志：AI助手与拖拽托盘升级</title>
      <link>https://www.sumi233.top/Windows/win11dev4/</link>
      <guid>https://www.sumi233.top/Windows/win11dev4/</guid>
      <pubDate>Sat, 11 Oct 2025 13:58:00 GMT</pubDate>
      
      <description>Windows 11 Insider Preview Build 26220.6780预览版的更新内容</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h1><p>系统版本：Windows 11 25H2</p><p>内核版本：26220.6780</p><p>频道：Dev Channel</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/1-5.jpg"></p><blockquote><p>微软于2025年10月11日面向Dev频道推送了Windows 11 Insider Preview Build 26220.6780 (KB5067103) 版本更新，此次更新重点强化了设置应用的AI助手能力，并为拖拽托盘带来多项实用改进。</p></blockquote><hr><h1 id="AI助手与设置优化"><a href="#AI助手与设置优化" class="headerlink" title="AI助手与设置优化"></a>AI助手与设置优化</h1><p>本次更新中，设置应用新增了AI助手功能。这一功能目前<strong>仅限于Copilot+PC</strong>，能够根据用户的操作习惯，<strong>推荐个性化的设置选项</strong>，帮助用户快速修改最近调整过的设置项。</p><p>设置应用的搜索功能也得到了增强。搜索界面会显示更多结果，方便用户更快找到并修改设置项。如果某些设置无法进一步调整，系统会弹出对话框说明原因，并提供相应的修改选项。</p><h1 id="拖拽托盘与Click-to-Do功能升级"><a href="#拖拽托盘与Click-to-Do功能升级" class="headerlink" title="拖拽托盘与Click to Do功能升级"></a>拖拽托盘与Click to Do功能升级</h1><p>拖拽托盘功能获得了多项实用改进：</p><ul><li><strong>多文件支持</strong>：用户现在可以<strong>拖拽多个文件</strong>到托盘中，并作为一个整体进行移动或分享</li><li><strong>智能应用推荐</strong>：托盘会<strong>更智能地推荐相关应用</strong>，提高目标应用（如邮件、Teams、Slack、OneDrive等）的显示优先级</li><li><strong>无缝文件夹移动</strong>：将文件拖到拖拽托盘后选择文件夹，会执行<strong>直接移动操作</strong>，无需额外的复制&#x2F;确认步骤</li></ul><p>同时，Click to Do（预览版）也进行了改进，在启动时，系统会通过<strong>视觉提示高亮显示关键实体</strong>，点击这些元素即可触发智能操作。</p><h1 id="系统稳定性与Bug修复"><a href="#系统稳定性与Bug修复" class="headerlink" title="系统稳定性与Bug修复"></a>系统稳定性与Bug修复</h1><p>除了新功能的加入，本次更新还修复了多个Bug，涵盖了任务栏、文件资源管理器、开始菜单、搜索以及部分应用崩溃等问题。</p><p>例如，修复了<strong>按下Win+&#96;键无法切换应用窗口的问题</strong>，以及上个版本中导致部分预览体验成员频繁崩溃的问题。</p><p><strong>管理员保护功能</strong>也得到了重新启用，用户可以在Windows安全中心 &gt; 帐户保护中重新启用该功能，增强了系统的安全性。</p><h1 id="深色模式与未来展望"><a href="#深色模式与未来展望" class="headerlink" title="深色模式与未来展望"></a>深色模式与未来展望</h1><p>微软为”运行”功能<strong>启用了深色模式</strong>，但目前<strong>仅限于少数Windows预览体验成员可见</strong>，未来将扩大推送范围。</p><h1 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h1><p>微软正在调查此版本中存在的以下问题：</p><ul><li><strong>Click to Do</strong>：通过右边缘手势在主显示器上启动Click to Do会导致滑动视觉效果显示在错误的显示器上</li><li><strong>锁定和登录屏幕</strong>：此版本中锁定屏幕上可能不显示媒体控件</li><li><strong>任务栏</strong>：由于问题，任务栏预览的新动画已被暂时禁用</li></ul><h1 id="更新提示"><a href="#更新提示" class="headerlink" title="更新提示"></a>更新提示</h1><p>该版本通过<strong>受控功能推送 (CFR)</strong> 方式分发。建议Dev频道用户在”设置” &gt; “Windows更新”中<strong>开启”在最新更新可用时立即获取”</strong> 切换开关，以逐步体验到所有新功能。</p><div class="note warning flat"><p>此版本为开发预览版，<strong>稳定性无法与正式版相比</strong>，不建议在生产环境中使用。部分新功能可能需要特定硬件支持，且推送范围可能受地区限制。</p></div><p><strong>【本文基于微软官方博客更新日志编写，具体功能体验可能因设备配置和区域设置而有所不同】</strong></p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>本文章使用Deepseek V3基于微软官方更新日志润色编写而成，具体功能体验可能因设备配置和区域设置而有所不同，如有错误，请指出，酥米将会及时更改。</p>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E7%B3%BB%E7%BB%9F%E7%B1%BB/">系统类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%B3%BB%E7%BB%9F/">系统</category>
      
      <category domain="https://www.sumi233.top/tags/Windows/">Windows</category>
      
      
      <comments>https://www.sumi233.top/Windows/win11dev4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>自动备份你的Hexo博客</title>
      <link>https://www.sumi233.top/%E6%95%99%E7%A8%8B/blogbackup/</link>
      <guid>https://www.sumi233.top/%E6%95%99%E7%A8%8B/blogbackup/</guid>
      <pubDate>Fri, 10 Oct 2025 07:55:13 GMT</pubDate>
      
      <description>给你的Hexo博客添加github仓库备份</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>最近十分难绷，为了搞code-server远程编辑博客，把博客的依赖给刷掉了，还好之前有备份逃过一劫，这也让我萌生了一个想法，可不可以把hexo源代码备份到github仓库上面呢？于是我在万能的度娘寻找答案，还真给我找到了一个方法。</p><h1 id="原文章地址"><a href="#原文章地址" class="headerlink" title="原文章地址"></a>原文章地址</h1><div calss="anzhiyu-tag-link"><a class="tag-Link" target="_blank" href="https://blog.cyida.com/2023/32DJ476.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style>          <i class="anzhiyufont anzhiyu-icon-link" style></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">自动备份 Hexo 博客源文件</div>            <div class="tag-link-sitename">AISYUN's Blog</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p>感谢AISYUN大佬提供的方案，此文章只做记录留档，如侵犯到您的权利，请联系我下架此文章，谢谢~</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="将Hexo目录加入到Git仓库中"><a href="#将Hexo目录加入到Git仓库中" class="headerlink" title="将Hexo目录加入到Git仓库中"></a>将Hexo目录加入到Git仓库中</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin git@github.com:Github用户名/项目名字.git</span><br><span class="line">git pull origin main # 原教程中为Master，现已替换为main</span><br></pre></td></tr></table></figure><p>建议在博客根目录中写入<code>.gitignore</code> 文件，填入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public/</span><br><span class="line">.deploy</span><br><span class="line">.deploy_git/</span><br><span class="line">*.log</span><br></pre></td></tr></table></figure><p>这样可以防止编译过的网页以及log文件被上传到仓库里，提升备份速度</p><p>然后再执行以下命令，手动将源代码首次推送至Github仓库中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;备份hexo源码文件&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h2 id="自动化实现"><a href="#自动化实现" class="headerlink" title="自动化实现"></a>自动化实现</h2><p>首先安装shelljs</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save shelljs</span><br></pre></td></tr></table></figure><p>然后在博客根目录&#x2F;scripts（如果没有此文件夹，就创建一个）文件夹里，创建一个名为<code>auto_backup.js</code>的脚本</p><p>并且填入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">require(&#x27;shelljs/global&#x27;);</span><br><span class="line">try &#123;</span><br><span class="line">    hexo.on(&#x27;deployAfter&#x27;, function() &#123;//当deploy完成后执行备份</span><br><span class="line">        run();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125; catch (e) &#123;</span><br><span class="line">    console.log(&quot;产生了一个错误啊&lt;(￣3￣)&gt; !，错误详情为：&quot; + e.toString());</span><br><span class="line">&#125;</span><br><span class="line">function run() &#123;</span><br><span class="line">    if (!which(&#x27;git&#x27;)) &#123;</span><br><span class="line">        echo(&#x27;Sorry, this script requires git&#x27;);</span><br><span class="line">        exit(1);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo(&quot;======================Auto Backup Begin===========================&quot;);</span><br><span class="line">        cd(&#x27;Your Blog Folder&#x27;);    //此处修改为Hexo根目录路径</span><br><span class="line">        if (exec(&#x27;git add --all&#x27;).code !== 0) &#123;</span><br><span class="line">            echo(&#x27;Error: Git add failed&#x27;);</span><br><span class="line">            exit(1);</span><br><span class="line">        &#125;</span><br><span class="line">        if (exec(&#x27;git commit -am &quot;blog auto backup script\&#x27;s commit&quot;&#x27;).code !== 0) &#123;</span><br><span class="line">            echo(&#x27;Error: Git commit failed&#x27;);</span><br><span class="line">            exit(1);</span><br><span class="line">        &#125;</span><br><span class="line">        if (exec(&#x27;git push origin main&#x27;).code !== 0) &#123;</span><br><span class="line">            echo(&#x27;Error: Git push failed&#x27;);</span><br><span class="line">            exit(1);</span><br><span class="line">        &#125;</span><br><span class="line">        echo(&quot;==================Auto Backup Complete============================&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>Your Blog Folder处请改成自己博客的<strong>绝对</strong>目录路径如：D:&#x2F;blog&#x2F;</li><li>如果你的仓库名称不是默认origin和分支不是main的话，需改成自己的仓库和相应分支名</li></ul><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>保存好脚本，在博客目录执行<code>hexo deploy</code>命令，在博客常规推送之后，会出现以下输出：</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ht3-1.png"></p><p>就证明博客代码推送成功啦~</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ht3-2.png"></p><p>此时查看Github仓库上也有相应的博客代码啦！</p>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%95%99%E7%A8%8B%E7%B1%BB/">教程类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E5%8D%9A%E5%AE%A2/">博客</category>
      
      <category domain="https://www.sumi233.top/tags/%E6%95%99%E7%A8%8B/">教程</category>
      
      
      <comments>https://www.sumi233.top/%E6%95%99%E7%A8%8B/blogbackup/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>番禺市桥游记：老城区的辉煌，从未落幕</title>
      <link>https://www.sumi233.top/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E7%95%AA%E7%A6%BA%E5%B8%82%E6%A1%A5%E6%B8%B8%E8%AE%B0/</link>
      <guid>https://www.sumi233.top/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E7%95%AA%E7%A6%BA%E5%B8%82%E6%A1%A5%E6%B8%B8%E8%AE%B0/</guid>
      <pubDate>Wed, 08 Oct 2025 06:20:00 GMT</pubDate>
      
      <description>酥米的番禺市桥游记</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>其实这也是酥米第二次去市桥啦🌚~ 我骑着电动车，驶入这片土地，开始了一场探寻之旅，想看看这座承载着岁月记忆的市桥老城区，是否如一些人所说，辉煌已不再。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/pysq-6.jpg"></p><p>在禺山市场后面充电，这里的充电桩有单次充电，而且太阳晒不到😂，离各个市桥著名的地方都不远，骑车推荐来这充电。</p><h1 id="在旅途中"><a href="#在旅途中" class="headerlink" title="在旅途中"></a>在旅途中</h1><h2 id="繁华与古韵交织的街景"><a href="#繁华与古韵交织的街景" class="headerlink" title="繁华与古韵交织的街景"></a>繁华与古韵交织的街景</h2><p>阳光透过澄澈的蓝天，洒在桥兴大道和大北路的街道上，给这座老城区镀上了一层温暖的光晕。</p><p>走在市桥的主干道桥兴大道与大北路Y字口的天桥上，目光所及，是新旧建筑交织的独特画面。一侧是现代化的高楼大厦，玻璃幕墙在阳光下反射出耀眼的光芒，彰显着城市发展的蓬勃力量。像那矗立着的写字楼，外立面光洁如新，进出的人流行色匆匆，透着都市的快节奏。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/pysq-1.jpg"></p><p>而另一侧，是带着岁月痕迹的老建筑。墙体有些斑驳，却有着别样的韵味。骑楼式的结构，仿佛在静静诉说着过往的商业繁华。沿街的商铺里，既有“百果园”这样连锁的新鲜水果店，色彩缤纷的水果整齐摆放，散发着诱人的香气；也有当地老字号的小店，卖着传统的小吃，那氤氲的热气里，满是熟悉的老味道。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/pysq-4.jpg"></p><p>街道上车水马龙，秩序井然。轿车、电动车穿梭往来，却并不显得拥挤。路旁的绿化带里，树木郁郁葱葱，尤其是那盛放的三角梅，一簇簇、一丛丛，紫的、粉的，热烈地绽放在天桥上、街角旁，像是给城市披上了绚丽的花衣，为略显沉稳的老城区增添了几分活泼与烂漫。站在那座被三角梅簇拥的天桥上，俯瞰下方的车水马龙和周围的建筑，我能感受到一种时光的交融，新与旧在这里和谐共生，并非一方取代另一方，而是共同构成市桥独特的城市风貌。</p><h2 id="钻汇广场里的热闹烟火气"><a href="#钻汇广场里的热闹烟火气" class="headerlink" title="钻汇广场里的热闹烟火气"></a>钻汇广场里的热闹烟火气</h2><p>走进钻汇广场，内部的景象更是让我感受到市桥的活力。色彩斑斓的彩色玻璃窗，有着欧式建筑的浪漫风情，阳光透过玻璃，在地面投下梦幻的光斑。</p><p>广场内店铺林立，“诺蒂娜”等品牌店装修精致，吸引着年轻的消费者驻足挑选。而一些售卖本地特色小商品的摊位前，更是人头攒动。摊主热情地招呼着，介绍着那些充满巧思的小物件。孩子们被可爱的玩偶吸引，拉着家长的手不肯离去；年轻人则在潮流饰品店前，精心挑选着搭配衣物的配饰。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/pysq-8.jpg"></p><p>耳边是此起彼伏的交谈声、欢笑声，还有店铺里传来的轻柔音乐，交织成一首充满烟火气的城市乐章。这里没有老城区的暮气，反而充满了生机与活力，是人们休闲、社交、消费的好去处，见证着市桥商业的持续繁荣。</p><h2 id="番禺老牌宾馆的岁月故事"><a href="#番禺老牌宾馆的岁月故事" class="headerlink" title="番禺老牌宾馆的岁月故事"></a>番禺老牌宾馆的岁月故事</h2><p>“番禺宾馆”几个醒目的大字，在阳光下格外耀眼。这座老牌宾馆，坐落在市桥中轴大北路旁边。作为市桥的老牌宾馆，它承载了太多人的记忆。那具有特色的建筑外观，虽历经岁月，却依然端庄大气。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/pysq-3.jpg"></p><p>想象着过去，这里曾是市桥乃至番禺的重要接待场所，见证了无数的迎来送往，见证了城市发展的重要时刻。如今，它依然在运营，以一种沉稳的姿态，继续为往来的人们提供服务。或许，它的设施不再是最新潮的，但那份历史的厚重感，那份属于老城区的独特韵味，是新建的豪华酒店所无法替代的。它就像一位老者，默默守护着市桥，讲述着那些关于辉煌过往的故事，也见证着当下的平稳与发展。 </p><h2 id="老城区的辉煌，是持续的生长"><a href="#老城区的辉煌，是持续的生长" class="headerlink" title="老城区的辉煌，是持续的生长"></a>老城区的辉煌，是持续的生长</h2><p>在市桥漫步，我看到的不是老城区辉煌的消逝，而是一种持续的生长与蜕变。它没有因循守旧，而是在保留自身历史文化底蕴的同时，积极拥抱现代化的发展。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/pysq-2.jpg"></p><p>新的商业体不断涌现，为经济发展注入新的活力；老的建筑与街区，经过修缮与维护，依然散发着独特的魅力，吸引着人们去探寻、去感受。这里的人们，在快节奏的现代生活与慢时光的历史韵味中，找到了属于自己的平衡。</p><h1 id="真的落幕了吗"><a href="#真的落幕了吗" class="headerlink" title="真的落幕了吗"></a>真的落幕了吗</h1><p>市桥的辉煌，不是过去时，而是进行时。它就像一棵枝繁叶茂的大树，根系深植于历史的土壤，枝叶却在时代的风中，不断向着天空伸展，绽放出新的生机。那些关于老城区辉煌不再的说法，在我亲身感受过它的活力与韵味后，显得如此片面。市桥，这座老城区，正以它独有的方式，续写着属于自己的辉煌篇章。</p><p>离开市桥时，夕阳的余晖温柔地洒在街道上，给一切都染上了一层金色。我知道，我会再次来到这里，因为这座老城区的故事，还在继续，它的辉煌，从未落幕。</p><h1 id="酥米的一点小小碎碎念"><a href="#酥米的一点小小碎碎念" class="headerlink" title="酥米的一点小小碎碎念"></a>酥米的一点小小碎碎念</h1><p>这应该是10月份最后仅剩的游记了（大概吧😀）。最近暂时不会写游记了，本人并不是很擅长写长文章，目前写出来的文章都或多或少的使用了AI的润色，感觉自己要灵感枯竭了（其实是国庆去太多地方了）不知道写什么好，而且本人的写作水平也支撑不起写那么长的游记（望各位读者见谅啦）。下一次的游记得留到秋假的南海九江海寿岛之旅啦～敬请期待哦！</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/pysq-7.jpg"></p><p>来回居然骑了106km，虽然从佛山骑到番禺人都麻了，但是过程还是很快乐滴~</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/pysq-5.jpg"></p><p>还有好多国庆作业没写，呜呜呜明天就要上学了，希望今天能肝完吧😭😭😭🌚</p>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95%E7%B1%BB/">个人记录类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E9%95%BF%E7%AF%87%E7%A2%8E%E7%A2%8E%E5%BF%B5/">长篇碎碎念</category>
      
      
      <comments>https://www.sumi233.top/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E7%95%AA%E7%A6%BA%E5%B8%82%E6%A1%A5%E6%B8%B8%E8%AE%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hexo博客添加2048</title>
      <link>https://www.sumi233.top/%E6%95%99%E7%A8%8B/blog2048plus/</link>
      <guid>https://www.sumi233.top/%E6%95%99%E7%A8%8B/blog2048plus/</guid>
      <pubDate>Mon, 06 Oct 2025 15:20:13 GMT</pubDate>
      
      <description>给你的Hexo博客添加2048小游戏</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><div class="note orange anzhiyufont anzhiyu-icon-bullhorn flat"><p>截稿前刚好到10月6日中秋节🌙，酥米祝各位中秋节快乐吖！😀</p></div><p>最近看到彩蛋页空着，于是突发奇想，做一个2048小游戏嵌入在里面，于是我”请教“了万能的豆包，得到了以下项目</p><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>本站已经内嵌此项目，可以去康康哦~ </p><div calss="anzhiyu-tag-link"><a class="tag-Link" target="_blank" href="/Fun/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style>          <i class="anzhiyufont anzhiyu-icon-link" style></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">2048小游戏</div>            <div class="tag-link-sitename">酥米的小站</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h1 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h1><ul><li><p><strong>完全隔离，不干扰博客</strong></p><ul><li>所有元素和逻辑封装在独立容器 <code>game-2048-container</code> 中，通过内联样式和容器限定作用域，不会污染博客原有CSS和JS。</li><li>不依赖任何外部资源（无图片、无字体文件），纯原生HTML+CSS+JS实现，加载速度快，不增加博客加载负担。</li></ul></li><li><p><strong>适配Hexo Anzhiyu主题</strong></p><ul><li>明暗模式自动切换：通过检测主题 <code>html</code> 标签的 <code>dark</code> 类，动态调整方块颜色、背景色，确保在亮色&#x2F;暗色模式下都有清晰的视觉对比（例如暗色模式下方块用深色背景+浅色文字，亮色模式相反）。</li><li>风格统一：使用主题内置CSS变量（<code>--card-bg</code> 卡片背景、<code>--text-color</code> 文字色等），与博客整体风格无缝融合。</li></ul></li><li><p><strong>多设备交互友好</strong></p><ul><li>键盘控制：支持方向键（↑↓←→）移动方块，操作符合原版2048习惯。</li><li>触屏优化：滑动屏幕（上下左右）可控制方块移动，滑动阈值合理（避免误触）。</li><li>核心优化：通过 <code>e.preventDefault()</code> 和 <code>touch-action: none</code> 阻止触屏滑动时触发整个博客页面的滚动，专注游戏操作。</li><li>操作反馈：按钮状态动态变化（如“撤回”按钮在无历史记录时禁用并半透明）。</li></ul></li><li><p><strong>完整游戏功能</strong></p><ul><li>核心玩法：随机生成2&#x2F;4方块，滑动合并相同数字，目标合成2048。</li><li>撤回功能：通过历史记录栈保存最近10步的游戏状态（网格+分数），点击“撤回”可回到上一步，提升容错性。</li><li>状态判断：自动检测胜利（合成2048）和失败（无空位且无法合并），并弹窗提示。</li><li>分数系统：实时显示当前分数，合并方块时自动累加。</li></ul></li><li><p><strong>轻量精简</strong></p><ul><li>代码量约600行，逻辑清晰，无冗余代码。</li><li>棋盘使用CSS Grid布局，自适应容器大小，在手机、电脑上均可正常显示（默认最大宽度400px，可按需调整）。</li></ul></li></ul><h1 id="创建界面"><a href="#创建界面" class="headerlink" title="创建界面"></a>创建界面</h1><p>可以先使用指令单独创建一个2048的页面</p><p><code>hexo new pages &quot;页面名称&quot;</code></p><p>然后使用工具编辑<code>“页面名称”/index.md</code></p><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><p>直接将代码复制到Hexo的Markdown文章（<code>.md</code>文件）中，部署后即可在博客中运行，无需额外配置。如需调整大小，修改容器的<code>max-width</code>样式即可。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;game-2048-container&quot; style=&quot;max-width: 400px; margin: 20px auto; padding: 15px; border-radius: 8px; transition: all 0.3s ease; background: var(--card-bg); touch-action: none;&quot;&gt;</span><br><span class="line">  &lt;!-- 分数与控制区 --&gt;</span><br><span class="line">  &lt;div style=&quot;display: flex; justify-content: space-between; margin-bottom: 15px; font-family: &#x27;Segoe UI&#x27;, Arial;&quot;&gt;</span><br><span class="line">    &lt;div style=&quot;font-size: 24px; font-weight: bold; color: var(--text-color);&quot;&gt;2048&lt;/div&gt;</span><br><span class="line">    &lt;div style=&quot;background: var(--primary-color); color: white; padding: 5px 10px; border-radius: 4px;&quot;&gt;</span><br><span class="line">      分数: &lt;span id=&quot;score-2048&quot;&gt;0&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div style=&quot;display: flex; gap: 5px;&quot;&gt;</span><br><span class="line">      &lt;!-- 按钮增大点击区域并添加触摸反馈 --&gt;</span><br><span class="line">      &lt;button id=&quot;undo-2048&quot; style=&quot;background: var(--btn-bg); color: var(--btn-color); border: none; padding: 8px 12px; border-radius: 4px; cursor: pointer; opacity: 0.5; touch-action: manipulation;&quot; disabled&gt;</span><br><span class="line">        撤回</span><br><span class="line">      &lt;/button&gt;</span><br><span class="line">      &lt;button id=&quot;reset-2048&quot; style=&quot;background: var(--btn-bg); color: var(--btn-color); border: none; padding: 8px 12px; border-radius: 4px; cursor: pointer; touch-action: manipulation;&quot;&gt;</span><br><span class="line">        重置</span><br><span class="line">      &lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;!-- 游戏棋盘 --&gt;</span><br><span class="line">  &lt;div id=&quot;game-2048-board&quot; style=&quot;display: grid; grid-template-columns: repeat(4, 1fr); gap: 10px;&quot;&gt;&lt;/div&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;!-- 操作说明 --&gt;</span><br><span class="line">  &lt;div style=&quot;margin-top: 15px; font-size: 14px; color: var(--text-color); font-family: &#x27;Segoe UI&#x27;, Arial;&quot;&gt;</span><br><span class="line">    &lt;p&gt;操作：方向键或滑动屏幕移动方块，相同数字碰撞将合并&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">const container = document.getElementById(&#x27;game-2048-container&#x27;);</span><br><span class="line">if (container) &#123;</span><br><span class="line">  // 获取DOM元素</span><br><span class="line">  const boardEl = container.querySelector(&#x27;#game-2048-board&#x27;);</span><br><span class="line">  const scoreEl = container.querySelector(&#x27;#score-2048&#x27;);</span><br><span class="line">  const resetBtn = container.querySelector(&#x27;#reset-2048&#x27;);</span><br><span class="line">  const undoBtn = container.querySelector(&#x27;#undo-2048&#x27;);</span><br><span class="line">  </span><br><span class="line">  // 游戏配置</span><br><span class="line">  const SIZE = 4;</span><br><span class="line">  let grid = [];</span><br><span class="line">  let score = 0;</span><br><span class="line">  let isDarkMode = false;</span><br><span class="line">  let history = [];</span><br><span class="line">  let isTouching = false;</span><br><span class="line">  let touchTarget = null; // 记录触摸目标，区分按钮和棋盘</span><br><span class="line">  </span><br><span class="line">  // 颜色映射（保持不变）</span><br><span class="line">  const getColors = (value) =&gt; &#123;</span><br><span class="line">    const colors = &#123;</span><br><span class="line">      2: &#123; bg: isDarkMode ? &#x27;#3a3a3a&#x27; : &#x27;#eee4da&#x27;, text: isDarkMode ? &#x27;#fff&#x27; : &#x27;#776e65&#x27; &#125;,</span><br><span class="line">      4: &#123; bg: isDarkMode ? &#x27;#4a4a4a&#x27; : &#x27;#ede0c8&#x27;, text: isDarkMode ? &#x27;#fff&#x27; : &#x27;#776e65&#x27; &#125;,</span><br><span class="line">      8: &#123; bg: isDarkMode ? &#x27;#ff9966&#x27; : &#x27;#f2b179&#x27;, text: &#x27;#f9f6f2&#x27; &#125;,</span><br><span class="line">      16: &#123; bg: isDarkMode ? &#x27;#ff7733&#x27; : &#x27;#f59563&#x27;, text: &#x27;#f9f6f2&#x27; &#125;,</span><br><span class="line">      32: &#123; bg: isDarkMode ? &#x27;#ff5500&#x27; : &#x27;#f67c5f&#x27;, text: &#x27;#f9f6f2&#x27; &#125;,</span><br><span class="line">      64: &#123; bg: isDarkMode ? &#x27;#ff3300&#x27; : &#x27;#f65e3b&#x27;, text: &#x27;#f9f6f2&#x27; &#125;,</span><br><span class="line">      128: &#123; bg: isDarkMode ? &#x27;#ffcc66&#x27; : &#x27;#edcf72&#x27;, text: &#x27;#f9f6f2&#x27; &#125;,</span><br><span class="line">      256: &#123; bg: isDarkMode ? &#x27;#ffbb33&#x27; : &#x27;#edcc61&#x27;, text: &#x27;#f9f6f2&#x27; &#125;,</span><br><span class="line">      512: &#123; bg: isDarkMode ? &#x27;#ffaa00&#x27; : &#x27;#edc850&#x27;, text: &#x27;#f9f6f2&#x27; &#125;,</span><br><span class="line">      1024: &#123; bg: isDarkMode ? &#x27;#ff9900&#x27; : &#x27;#edc53f&#x27;, text: &#x27;#f9f6f2&#x27; &#125;,</span><br><span class="line">      2048: &#123; bg: isDarkMode ? &#x27;#ff8800&#x27; : &#x27;#edc22e&#x27;, text: &#x27;#f9f6f2&#x27; &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    if (!colors[value]) &#123;</span><br><span class="line">      colors[value] = &#123; bg: isDarkMode ? &#x27;#ff5555&#x27; : &#x27;#3c3a32&#x27;, text: &#x27;#f9f6f2&#x27; &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    return colors[value];</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  // 初始化网格（保持不变）</span><br><span class="line">  const initGrid = () =&gt; &#123;</span><br><span class="line">    grid = Array(SIZE).fill().map(() =&gt; Array(SIZE).fill(0));</span><br><span class="line">    score = 0;</span><br><span class="line">    history = [];</span><br><span class="line">    scoreEl.textContent = &#x27;0&#x27;;</span><br><span class="line">    addRandomNumber();</span><br><span class="line">    addRandomNumber();</span><br><span class="line">    updateUndoBtn();</span><br><span class="line">    renderGrid();</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  // 保存历史记录（保持不变）</span><br><span class="line">  const saveHistory = () =&gt; &#123;</span><br><span class="line">    const gridCopy = JSON.parse(JSON.stringify(grid));</span><br><span class="line">    history.push(&#123; grid: gridCopy, score: score &#125;);</span><br><span class="line">    if (history.length &gt; 10) history.shift();</span><br><span class="line">    updateUndoBtn();</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  // 撤回操作（保持不变）</span><br><span class="line">  const undoMove = () =&gt; &#123;</span><br><span class="line">    if (history.length === 0) return;</span><br><span class="line">    const lastState = history.pop();</span><br><span class="line">    grid = lastState.grid;</span><br><span class="line">    score = lastState.score;</span><br><span class="line">    scoreEl.textContent = score;</span><br><span class="line">    updateUndoBtn();</span><br><span class="line">    renderGrid();</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  // 更新撤回按钮状态（保持不变）</span><br><span class="line">  const updateUndoBtn = () =&gt; &#123;</span><br><span class="line">    undoBtn.disabled = history.length === 0;</span><br><span class="line">    undoBtn.style.opacity = history.length === 0 ? &#x27;0.5&#x27; : &#x27;1&#x27;;</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  // 随机生成数字（保持不变）</span><br><span class="line">  const addRandomNumber = () =&gt; &#123;</span><br><span class="line">    const emptyCells = [];</span><br><span class="line">    for (let i = 0; i &lt; SIZE; i++) &#123;</span><br><span class="line">      for (let j = 0; j &lt; SIZE; j++) &#123;</span><br><span class="line">        if (grid[i][j] === 0) emptyCells.push(&#123; i, j &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if (emptyCells.length === 0) return false;</span><br><span class="line">    const &#123; i, j &#125; = emptyCells[Math.floor(Math.random() * emptyCells.length)];</span><br><span class="line">    grid[i][j] = Math.random() &lt; 0.9 ? 2 : 4;</span><br><span class="line">    return true;</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  // 渲染网格（保持不变）</span><br><span class="line">  const renderGrid = () =&gt; &#123;</span><br><span class="line">    boardEl.innerHTML = &#x27;&#x27;;</span><br><span class="line">    for (let i = 0; i &lt; SIZE; i++) &#123;</span><br><span class="line">      for (let j = 0; j &lt; SIZE; j++) &#123;</span><br><span class="line">        const cell = document.createElement(&#x27;div&#x27;);</span><br><span class="line">        const value = grid[i][j];</span><br><span class="line">        cell.style.width = &#x27;80px&#x27;;</span><br><span class="line">        cell.style.height = &#x27;80px&#x27;;</span><br><span class="line">        cell.style.borderRadius = &#x27;4px&#x27;;</span><br><span class="line">        cell.style.display = &#x27;flex&#x27;;</span><br><span class="line">        cell.style.alignItems = &#x27;center&#x27;;</span><br><span class="line">        cell.style.justifyContent = &#x27;center&#x27;;</span><br><span class="line">        cell.style.fontWeight = &#x27;bold&#x27;;</span><br><span class="line">        cell.style.transition = &#x27;all 0.2s ease&#x27;;</span><br><span class="line">        cell.style.fontFamily = &#x27;Arial, sans-serif&#x27;;</span><br><span class="line">        </span><br><span class="line">        if (value === 0) &#123;</span><br><span class="line">          cell.style.background = isDarkMode ? &#x27;#2a2a2a&#x27; : &#x27;#cdc1b4&#x27;;</span><br><span class="line">          cell.style.color = &#x27;transparent&#x27;;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          const &#123; bg, text &#125; = getColors(value);</span><br><span class="line">          cell.style.background = bg;</span><br><span class="line">          cell.style.color = text;</span><br><span class="line">          cell.style.fontSize = value &lt; 100 ? &#x27;24px&#x27; : value &lt; 1000 ? &#x27;20px&#x27; : &#x27;16px&#x27;;</span><br><span class="line">          cell.textContent = value;</span><br><span class="line">        &#125;</span><br><span class="line">        boardEl.appendChild(cell);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  // 移动逻辑（保持不变）</span><br><span class="line">  const moveLeft = () =&gt; &#123;</span><br><span class="line">    let moved = false;</span><br><span class="line">    for (let i = 0; i &lt; SIZE; i++) &#123;</span><br><span class="line">      for (let j = 1; j &lt; SIZE; j++) &#123;</span><br><span class="line">        if (grid[i][j] !== 0) &#123;</span><br><span class="line">          let k = j;</span><br><span class="line">          while (k &gt; 0 &amp;&amp; grid[i][k - 1] === 0) &#123;</span><br><span class="line">            grid[i][k - 1] = grid[i][k];</span><br><span class="line">            grid[i][k] = 0;</span><br><span class="line">            k--;</span><br><span class="line">            moved = true;</span><br><span class="line">          &#125;</span><br><span class="line">          if (k &gt; 0 &amp;&amp; grid[i][k - 1] === grid[i][k]) &#123;</span><br><span class="line">            grid[i][k - 1] *= 2;</span><br><span class="line">            score += grid[i][k - 1];</span><br><span class="line">            grid[i][k] = 0;</span><br><span class="line">            moved = true;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return moved;</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  const moveRight = () =&gt; &#123;</span><br><span class="line">    let moved = false;</span><br><span class="line">    for (let i = 0; i &lt; SIZE; i++) &#123;</span><br><span class="line">      for (let j = SIZE - 2; j &gt;= 0; j--) &#123;</span><br><span class="line">        if (grid[i][j] !== 0) &#123;</span><br><span class="line">          let k = j;</span><br><span class="line">          while (k &lt; SIZE - 1 &amp;&amp; grid[i][k + 1] === 0) &#123;</span><br><span class="line">            grid[i][k + 1] = grid[i][k];</span><br><span class="line">            grid[i][k] = 0;</span><br><span class="line">            k++;</span><br><span class="line">            moved = true;</span><br><span class="line">          &#125;</span><br><span class="line">          if (k &lt; SIZE - 1 &amp;&amp; grid[i][k + 1] === grid[i][k]) &#123;</span><br><span class="line">            grid[i][k + 1] *= 2;</span><br><span class="line">            score += grid[i][k + 1];</span><br><span class="line">            grid[i][k] = 0;</span><br><span class="line">            moved = true;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return moved;</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  const moveUp = () =&gt; &#123;</span><br><span class="line">    let moved = false;</span><br><span class="line">    for (let j = 0; j &lt; SIZE; j++) &#123;</span><br><span class="line">      for (let i = 1; i &lt; SIZE; i++) &#123;</span><br><span class="line">        if (grid[i][j] !== 0) &#123;</span><br><span class="line">          let k = i;</span><br><span class="line">          while (k &gt; 0 &amp;&amp; grid[k - 1][j] === 0) &#123;</span><br><span class="line">            grid[k - 1][j] = grid[k][j];</span><br><span class="line">            grid[k][j] = 0;</span><br><span class="line">            k--;</span><br><span class="line">            moved = true;</span><br><span class="line">          &#125;</span><br><span class="line">          if (k &gt; 0 &amp;&amp; grid[k - 1][j] === grid[k][j]) &#123;</span><br><span class="line">            grid[k - 1][j] *= 2;</span><br><span class="line">            score += grid[k - 1][j];</span><br><span class="line">            grid[k][j] = 0;</span><br><span class="line">            moved = true;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return moved;</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  const moveDown = () =&gt; &#123;</span><br><span class="line">    let moved = false;</span><br><span class="line">    for (let j = 0; j &lt; SIZE; j++) &#123;</span><br><span class="line">      for (let i = SIZE - 2; i &gt;= 0; i--) &#123;</span><br><span class="line">        if (grid[i][j] !== 0) &#123;</span><br><span class="line">          let k = i;</span><br><span class="line">          while (k &lt; SIZE - 1 &amp;&amp; grid[k + 1][j] === 0) &#123;</span><br><span class="line">            grid[k + 1][j] = grid[k][j];</span><br><span class="line">            grid[k][j] = 0;</span><br><span class="line">            k++;</span><br><span class="line">            moved = true;</span><br><span class="line">          &#125;</span><br><span class="line">          if (k &lt; SIZE - 1 &amp;&amp; grid[k + 1][j] === grid[k][j]) &#123;</span><br><span class="line">            grid[k + 1][j] *= 2;</span><br><span class="line">            score += grid[k + 1][j];</span><br><span class="line">            grid[k][j] = 0;</span><br><span class="line">            moved = true;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return moved;</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  // 处理移动（保持不变）</span><br><span class="line">  const handleMove = (direction) =&gt; &#123;</span><br><span class="line">    let moved;</span><br><span class="line">    switch (direction) &#123;</span><br><span class="line">      case &#x27;left&#x27;: moved = moveLeft(); break;</span><br><span class="line">      case &#x27;right&#x27;: moved = moveRight(); break;</span><br><span class="line">      case &#x27;up&#x27;: moved = moveUp(); break;</span><br><span class="line">      case &#x27;down&#x27;: moved = moveDown(); break;</span><br><span class="line">      default: return;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if (moved) &#123;</span><br><span class="line">      saveHistory();</span><br><span class="line">      scoreEl.textContent = score;</span><br><span class="line">      addRandomNumber();</span><br><span class="line">      renderGrid();</span><br><span class="line">      checkGameState();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  // 检查游戏状态（保持不变）</span><br><span class="line">  const checkGameState = () =&gt; &#123;</span><br><span class="line">    for (let i = 0; i &lt; SIZE; i++) &#123;</span><br><span class="line">      for (let j = 0; j &lt; SIZE; j++) &#123;</span><br><span class="line">        if (grid[i][j] === 2048) &#123;</span><br><span class="line">          setTimeout(() =&gt; alert(&#x27;恭喜你赢了！&#x27;), 300);</span><br><span class="line">          return;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    for (let i = 0; i &lt; SIZE; i++) &#123;</span><br><span class="line">      for (let j = 0; j &lt; SIZE; j++) &#123;</span><br><span class="line">        if (grid[i][j] === 0) return;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    for (let i = 0; i &lt; SIZE; i++) &#123;</span><br><span class="line">      for (let j = 0; j &lt; SIZE - 1; j++) &#123;</span><br><span class="line">        if (grid[i][j] === grid[i][j + 1]) return;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    for (let j = 0; j &lt; SIZE; j++) &#123;</span><br><span class="line">      for (let i = 0; i &lt; SIZE - 1; i++) &#123;</span><br><span class="line">        if (grid[i][j] === grid[i + 1][j]) return;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    setTimeout(() =&gt; alert(&#x27;游戏结束！得分：&#x27; + score), 300);</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  // 明暗模式适配（保持不变）</span><br><span class="line">  const checkThemeMode = () =&gt; &#123;</span><br><span class="line">    isDarkMode = document.documentElement.classList.contains(&#x27;dark&#x27;);</span><br><span class="line">    renderGrid();</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  const themeObserver = new MutationObserver(() =&gt; checkThemeMode());</span><br><span class="line">  themeObserver.observe(document.documentElement, &#123; attributes: true &#125;);</span><br><span class="line">  </span><br><span class="line">  // 键盘控制（保持不变）</span><br><span class="line">  const handleKeydown = (e) =&gt; &#123;</span><br><span class="line">    switch (e.key) &#123;</span><br><span class="line">      case &#x27;ArrowLeft&#x27;: handleMove(&#x27;left&#x27;); e.preventDefault(); break;</span><br><span class="line">      case &#x27;ArrowRight&#x27;: handleMove(&#x27;right&#x27;); e.preventDefault(); break;</span><br><span class="line">      case &#x27;ArrowUp&#x27;: handleMove(&#x27;up&#x27;); e.preventDefault(); break;</span><br><span class="line">      case &#x27;ArrowDown&#x27;: handleMove(&#x27;down&#x27;); e.preventDefault(); break;</span><br><span class="line">      default: return;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  // 触屏控制（核心修复：区分按钮和棋盘触摸）</span><br><span class="line">  let touchStartX = 0, touchStartY = 0;</span><br><span class="line">  </span><br><span class="line">  // 触摸开始：记录目标元素</span><br><span class="line">  const handleTouchStart = (e) =&gt; &#123;</span><br><span class="line">    touchTarget = e.target; // 记录触摸的元素（按钮或棋盘）</span><br><span class="line">    // 只有触摸棋盘时才处理滑动逻辑</span><br><span class="line">    if (touchTarget === boardEl || boardEl.contains(touchTarget)) &#123;</span><br><span class="line">      isTouching = true;</span><br><span class="line">      touchStartX = e.touches[0].clientX;</span><br><span class="line">      touchStartY = e.touches[0].clientY;</span><br><span class="line">      e.preventDefault();</span><br><span class="line">    &#125;</span><br><span class="line">    // 触摸按钮时不阻止默认行为，确保点击有效</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  // 触摸移动：只在触摸棋盘时阻止滚动</span><br><span class="line">  const handleTouchMove = (e) =&gt; &#123;</span><br><span class="line">    if (isTouching &amp;&amp; (touchTarget === boardEl || boardEl.contains(touchTarget))) &#123;</span><br><span class="line">      e.preventDefault(); // 仅棋盘滑动阻止滚动</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  // 触摸结束：区分处理</span><br><span class="line">  const handleTouchEnd = (e) =&gt; &#123;</span><br><span class="line">    if (isTouching) &#123;</span><br><span class="line">      isTouching = false;</span><br><span class="line">      const touchEndX = e.changedTouches[0].clientX;</span><br><span class="line">      const touchEndY = e.changedTouches[0].clientY;</span><br><span class="line">      const diffX = touchEndX - touchStartX;</span><br><span class="line">      const diffY = touchEndY - touchStartY;</span><br><span class="line">      </span><br><span class="line">      if (Math.abs(diffX) &gt; 30 || Math.abs(diffY) &gt; 30) &#123;</span><br><span class="line">        if (Math.abs(diffX) &gt; Math.abs(diffY)) &#123;</span><br><span class="line">          diffX &gt; 0 ? handleMove(&#x27;right&#x27;) : handleMove(&#x27;left&#x27;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          diffY &gt; 0 ? handleMove(&#x27;down&#x27;) : handleMove(&#x27;up&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      e.preventDefault();</span><br><span class="line">    &#125;</span><br><span class="line">    touchTarget = null; // 重置触摸目标</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  // 为按钮添加专门的触摸事件（解决移动端点击无反应）</span><br><span class="line">  const handleButtonTouch = (callback) =&gt; &#123;</span><br><span class="line">    return (e) =&gt; &#123;</span><br><span class="line">      e.stopPropagation(); // 阻止事件冒泡到容器</span><br><span class="line">      callback();</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  // 事件绑定（优化版）</span><br><span class="line">  document.addEventListener(&#x27;keydown&#x27;, handleKeydown);</span><br><span class="line">  container.addEventListener(&#x27;touchstart&#x27;, handleTouchStart, &#123; passive: false &#125;);</span><br><span class="line">  container.addEventListener(&#x27;touchmove&#x27;, handleTouchMove, &#123; passive: false &#125;);</span><br><span class="line">  container.addEventListener(&#x27;touchend&#x27;, handleTouchEnd, &#123; passive: false &#125;);</span><br><span class="line">  </span><br><span class="line">  // 按钮单独绑定触摸和点击事件，确保移动端响应</span><br><span class="line">  resetBtn.addEventListener(&#x27;click&#x27;, initGrid);</span><br><span class="line">  resetBtn.addEventListener(&#x27;touchstart&#x27;, handleButtonTouch(initGrid), &#123; passive: true &#125;);</span><br><span class="line">  undoBtn.addEventListener(&#x27;click&#x27;, undoMove);</span><br><span class="line">  undoBtn.addEventListener(&#x27;touchstart&#x27;, handleButtonTouch(undoMove), &#123; passive: true &#125;);</span><br><span class="line">  </span><br><span class="line">  // 初始化</span><br><span class="line">  checkThemeMode();</span><br><span class="line">  initGrid();</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><ul><li>触控模式稍微有点bug，刷新一下能恢复</li></ul><h1 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h1><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/2048-1.jpg"></p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p>本文章中的代码使用豆包AI修改而成，如有错误，请指出，酥米将会及时更改。</p>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%95%99%E7%A8%8B%E7%B1%BB/">教程类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E5%8D%9A%E5%AE%A2/">博客</category>
      
      <category domain="https://www.sumi233.top/tags/%E6%95%99%E7%A8%8B/">教程</category>
      
      
      <comments>https://www.sumi233.top/%E6%95%99%E7%A8%8B/blog2048plus/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>顺德容桂游记：交响于渔人码头河边的复古与潮流</title>
      <link>https://www.sumi233.top/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E9%A1%BA%E5%BE%B7%E5%AE%B9%E6%A1%82%E6%B8%B8%E8%AE%B0/</link>
      <guid>https://www.sumi233.top/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E9%A1%BA%E5%BE%B7%E5%AE%B9%E6%A1%82%E6%B8%B8%E8%AE%B0/</guid>
      <pubDate>Sun, 05 Oct 2025 16:10:00 GMT</pubDate>
      
      <description>酥米的顺德容桂渔人码头之旅</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><div class="note orange anzhiyufont anzhiyu-icon-bullhorn flat"><p>截稿前刚好到10月6日中秋节🌙，酥米祝各位中秋节快乐吖！😀</p></div><p>其实国庆节当天我就已经去了，选择现在发其实是本来想等南沙游记发出之后一起发，不过最终还是没有如愿（没写完😭），经过几天润色，今天终于是憋出来了哈哈。</p><h1 id="出发的动机"><a href="#出发的动机" class="headerlink" title="出发的动机"></a>出发的动机</h1><p>其实一开始我并没有去容桂的想法，因为太远了，而且缺少轨道交通（容桂没有通地铁真的遗憾，佛山11号线也不知道要几年规划了）。不过国庆第一天在家里太无聊了，萌生了出去玩的想法，又突然记起来有那么个地方，于是自然而然去了。</p><h1 id="出发！"><a href="#出发！" class="headerlink" title="出发！"></a>出发！</h1><p>于是我带上随身的包，飞奔出门，《赶》往目的地😉。因为容桂没有通地铁，并且考虑假期地铁高峰期，我直接乘搭公交车前往大良（顺德客运站），再转车前往容桂街道。我先乘搭佛236（九江方向）前往乐从公交中心，之后走去三乐路路口公交站乘坐341线前往顺德客运站。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/sdrg-5.jpg"></p><p>乐从城区边上（佛山大道南）</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/sdrg-6.jpg"></p><p>这里是三乐路和顺德快速路入口。</p><p>当我慢慢走向路口公交站的时候，一台公交车缓缓开出路。是的，这台车就是我要坐的341公交车，也顾不上那么多了，我直接飞奔起步，抢着最后一步跑去公交车站上了车（差点没赶上）。<br>当我气喘吁吁刷卡的时候，诶！怎么没反应，司机的声音突然出现：“你要去哪里啊？”喘的我差点忘了这辆公交是分段计费了😅，直接报上顺德客运站，需要四块钱，不过广佛通有公交优惠（是3.6块，南海禅城区的公交都打8折，4块车票仅需2.8，但是其他三个区只打九折，所以就要3.6啦）</p><h1 id="旅途之中"><a href="#旅途之中" class="headerlink" title="旅途之中"></a>旅途之中</h1><p>顺德的快巴就是不一样，车辆在顺德快速路狂飙，遇到没有人的站直接飞。速度估计得有40-60km&#x2F;h了（吐槽一句，禅城南海的公交一个比一个慢，比如桂城-禅城去佛山西站的G5公交车，需要一个小时才能摇完15km的路程🌚🌚）。途径经过北滘镇和伦教街道，还要跨过顺德水道，当车辆走过顺德立交桥的时候，就宣布进入了顺德大良（顺德中心城区啦），经过大约1小时15分钟的路程，我到达了顺德客运站</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/sdrg-7.jpg"></p><p>之后，我要乘坐顺德318路公交车，前往容桂街道信德上城（渔人码头南）公交站</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/sdrg-8.jpg"></p><p>约莫10分钟，车辆从客运站开出，我也顺利的坐上了公交车，途径顺峰山和大良派出所，跨过德胜河和容奇大桥后，到达了容桂街道。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/sdrg-9.jpg"></p><p>40分钟后，我到达了渔人码头南站，一下车，我只望见许多的旅客往北闸大街走去（那里是渔人码头的入口），于是我跟随人流往里面走去</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/sdrg-10.jpg"></p><p>里面人潮涌动，虽没有很拥挤，但也比较多人。空气里混杂着烟火气的气息（是烧烤！🤤），我继续往前走，里面有一个广场</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/sdrg-11.jpg"></p><p>里面是复古风的商业街，不过想吐槽一句（本来想买杯瑞幸的，里面挤满了人，我怕等到回去了都没拿到饮料，遂作罢🤔）。从商业街穿出去，就能望到渔人码头的真实面貌</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/sdrg-4.jpg"></p><p>河边，醒目的红色“I ❤️ SD”前，游人或驻足拍照，或凭栏眺望河面。河水悠悠，对岸的建筑在绿意掩映中若隐若现，一棵绿树旁，有人正以江景为幕，定格此刻的悠闲。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/sdrg-2.jpg"></p><p>不远处，蓝白相间的灯塔矗立河边，像一位沉默的守护者。它与背后的现代高楼群形成奇妙对比，蓝天流云之下，江水、灯塔、楼宇共同勾勒出一幅动静相宜的画卷。江畔的小店外，有人在露台上闲坐，将这江景与人文交融的景致尽收眼底。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/sdrg-3.jpg"></p><p>转角处，一栋建筑化身艺术画布：墙面上，猫咪、兔子的涂鸦灵动俏皮，屋顶上，大白与少年的巨型雕塑童趣满满，下方的麦当劳黄色M标识格外醒目，“渔人码头”的招牌诉说着这里的前世今生。新旧元素碰撞，让建筑成了网红打卡的吸睛点，往来人群涌动，或在店前驻足，或在巷间穿梭，烟火气十足。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/sdrg-1.jpg"></p><p>再看那栋写着“顺德渔”的建筑，墙面的大字苍劲有力，屋顶的星巴克、各类商铺的招牌琳琅满目，肯德基、台球俱乐部、烤肉店……潮流业态与复古建筑碰撞出别样活力。楼下，人群熙攘，电动车停放整齐，补水站的蓝色帐篷为游人送上一丝清凉，处处是热闹的生活气息。</p><p>岁月痕迹与新时代的潮流创意交织，江风裹挟着艺术、美食与人文的气息，让每一步慢步中都成了一场复古与潮流的惊喜碰撞，这便是容桂渔人码头独有的魅力。</p>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95%E7%B1%BB/">个人记录类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E9%95%BF%E7%AF%87%E7%A2%8E%E7%A2%8E%E5%BF%B5/">长篇碎碎念</category>
      
      
      <comments>https://www.sumi233.top/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E9%A1%BA%E5%BE%B7%E5%AE%B9%E6%A1%82%E6%B8%B8%E8%AE%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>南沙万顷沙游记：大湾区中的闪耀明珠</title>
      <link>https://www.sumi233.top/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E5%8D%97%E6%B2%99%E6%B8%B8%E8%AE%B0/</link>
      <guid>https://www.sumi233.top/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E5%8D%97%E6%B2%99%E6%B8%B8%E8%AE%B0/</guid>
      <pubDate>Fri, 03 Oct 2025 09:50:00 GMT</pubDate>
      
      <description>酥米和朋友跑去南沙万顷沙大湾区体育中心围观深中通道南沙段</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>上半年其实就有想要去一趟南沙十九涌（其实是想看深中通道）的想法了，但是当时只是去那边兜了两圈，也没有到处去看看，况且当时旁边在修地铁，路也没有修好，路坑坑洼洼的，坐公交进去要了我半条命。</p><p>（是的，这是第二次去南沙区万顷沙镇啦&#x2F;doge）</p><p>这是上一次的图片😀：<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ns-3.jpg"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ns-9.jpg"></p><h1 id="旅程启动！"><a href="#旅程启动！" class="headerlink" title="旅程启动！"></a>旅程启动！</h1><p>终于在年底国庆凑出了时间，那不得狠狠去一波看看深中通道（刚好在万顷沙尖尖的体育馆也在年中建好了），于是我约上了一位朋友，一齐前往大湾区体育中心，一窥深中通道的真容（是的上次去十九涌没看到深中通道我哭死😭）。</p><p>从佛山出发，需要一共3小时的车程，原计划是进入广州市区（沥滘转乘<strong>3号线</strong>换乘<strong>18号线</strong>）。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ns-4.jpg"><br>但是我并不想在国庆期间进入广州（因为今天正好碰巧琶洲在搞<strong>CICF漫展</strong>，三号线会被<strong>挤爆</strong>的🌚🌚），所以我们从祖庙搭乘<strong>广佛线</strong>，在魁奇路转乘<strong>佛山2号线</strong>到广州南站搭乘<strong>22号线</strong>，在番禺广场转乘湾区最速地铁🚝<strong>18号线</strong></p><p>（真的能跑到<em>160km</em>诶😍）<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ns-7.jpg"></p><p>经过将近一小时20分的车程，我们到达了地铁横沥站（其实很快了，毕竟将近50km的距离，如果是从广州南站转<strong>7号线</strong>去大学城坐<strong>4号线</strong>去南沙需要2小时起步😅，而且还摇，谁坐谁无语）。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ns-5.jpg"></p><p>之后我们需要转坐<strong>南沙G1</strong>公交车前往大湾区体育中心总站，这个过程又需要一个半小时啦~</p><p>不过这次的乘车体验比上次好了好多好多哇，上次因为地铁在施工，路也没修好，一路上又颠簸带摇晃，摇的我都不舒服了，不过这次过来，新垦那边已经把路修个七七八八了，只剩下地铁的部分还在修路。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ns-8.jpg"></p><p>车行在刚重建好的灵新大道上，视野格外开阔。南沙港快速的立交桥尤其壮观，灰白色的桥体架在连片绿地间，像一片翠绿平原上骤然绽开的花，线条利落又透着生机。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ns-1.jpg"></p><p>从新垦出发后，约莫五十分钟车程，我们便到了大湾区体育中心站。刚推开车门，一股滚烫的热气就直扑过来——秋老虎的威力仍在，晒得路面都泛着微光，却丝毫不减抵达目的地的期待。</p><h1 id="终到"><a href="#终到" class="headerlink" title="终到"></a>终到</h1><p>我本以为这么偏僻的地方会人烟稀少，实则完全相反，坐公交的一路上也有许多与我们同行的游客，互相谈论着体育中心的景色，大家都期待着美景如画的体育中心。我转眼望去：</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ns-6.jpg"></p><p>眼前的大湾区体育中心，以其独特的流线型外观惊艳目光——仿若一朵在阳光下舒展的巨形“木棉花”，金属质感的“花瓣”纹理细腻、弧度优雅，现代工艺与艺术美感交织，既透着建筑的厚重，又盈满灵动的活力，似在无声诉说湾区对体育激情的热忱追求。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ns-11.jpg"></p><p>大湾区体育中心和深中通道一齐，共同织就一幅活力奔涌、前景璀璨的湾区画卷，让人沉醉于这片土地的创新与繁荣之中。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ns-2.jpg"></p><p>此刻我站在大湾区的三角中心，吹着温凉的海风，看着屹立在海面上的深中通道。感叹着大湾区和祖国快速发展，心中自豪万分……</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ns-10.jpg"></p>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95%E7%B1%BB/">个人记录类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E9%95%BF%E7%AF%87%E7%A2%8E%E7%A2%8E%E5%BF%B5/">长篇碎碎念</category>
      
      
      <comments>https://www.sumi233.top/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E5%8D%97%E6%B2%99%E6%B8%B8%E8%AE%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Windows 11 Insider Preview Build 26220.6760 更新日志：新增任务栏网速测试与多项优化</title>
      <link>https://www.sumi233.top/Windows/win11dev3/</link>
      <guid>https://www.sumi233.top/Windows/win11dev3/</guid>
      <pubDate>Tue, 30 Sep 2025 17:58:00 GMT</pubDate>
      
      <description>Windows 11 Insider Preview Build 26220.6760预览版的更新内容</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h1><p>系统版本：Windows 11 25H2</p><p>内核版本：26220.6760</p><p>频道：Dev Channel</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/1-4.jpg"></p><blockquote><p>微软于2025年9月29日向Dev频道的Windows Insider项目成员推送了Windows 11 Insider Preview Build 26220.6760 (KB5065793) 版本更新。本次更新为Windows 11版本25H2带来了多项实用功能改进，包括任务栏内置网速测试、语音访问延迟设置调整，以及针对文件资源管理器、表情符号和Copilot+ PC体验的多项优化和修复。</p></blockquote><hr><h1 id="逐步推出的新功能与改进"><a href="#逐步推出的新功能与改进" class="headerlink" title="逐步推出的新功能与改进"></a>逐步推出的新功能与改进</h1><p>以下功能正逐步向开启了“在最新更新可用时立即获取”选项的Dev频道用户推送：</p><h2 id="1-任务栏与系统托盘：内置网络速度测试"><a href="#1-任务栏与系统托盘：内置网络速度测试" class="headerlink" title="1. 任务栏与系统托盘：内置网络速度测试"></a>1. 任务栏与系统托盘：内置网络速度测试</h2><ul><li>新增内置<strong>网络速度测试工具</strong>，可直接从任务栏访问。</li><li>启动方式：通过<strong>Wi-Fi和蜂窝网络快速设置页面</strong>，或右键单击系统托盘中的网络图标。</li><li>该工具在默认浏览器中打开，支持测试<strong>以太网、Wi-Fi和蜂窝网络连接</strong>，帮助评估网络性能和排查问题。</li></ul><h2 id="2-入门应用与Microsoft-365-Copilot"><a href="#2-入门应用与Microsoft-365-Copilot" class="headerlink" title="2. 入门应用与Microsoft 365 Copilot"></a>2. 入门应用与Microsoft 365 Copilot</h2><ul><li>为受管理的商业设备（拥有有效的Microsoft 365订阅）在“入门”应用中新增<strong>Microsoft 365 Copilot页面</strong>。</li><li>此体验旨在帮助用户更轻松地<strong>发现和使用Microsoft 365 Copilot</strong>，直接在入门流程中提供关键功能的快速访问和有用指导。</li></ul><h2 id="3-Windows搜索（Copilot-PC）"><a href="#3-Windows搜索（Copilot-PC）" class="headerlink" title="3. Windows搜索（Copilot+ PC）"></a>3. Windows搜索（Copilot+ PC）</h2><ul><li>针对Copilot+ PC改进了Windows搜索，更新了<strong>文件资源管理器搜索框的占位符文本</strong>，以提高对今年早些时候引入的改进版Windows搜索体验的认知度。</li></ul><h1 id="面向所有Dev频道用户的更改与改进"><a href="#面向所有Dev频道用户的更改与改进" class="headerlink" title="面向所有Dev频道用户的更改与改进"></a>面向所有Dev频道用户的更改与改进</h1><p>以下改进正向所有Dev频道用户逐步推出：</p><h2 id="1-文件资源管理器"><a href="#1-文件资源管理器" class="headerlink" title="1. 文件资源管理器"></a>1. 文件资源管理器</h2><ul><li>新增<strong>StorageProvider API</strong>，允许云提供商与文件资源管理器主页集成。</li></ul><h2 id="2-表情符号"><a href="#2-表情符号" class="headerlink" title="2. 表情符号"></a>2. 表情符号</h2><ul><li><strong>暂时移除了Emoji 16.0</strong>，将在未来的版本中重新引入。</li></ul><h2 id="3-语音访问"><a href="#3-语音访问" class="headerlink" title="3. 语音访问"></a>3. 语音访问</h2><ul><li>引入新的“<strong>执行前等待时间</strong>”设置，允许用户配置语音命令执行前的延迟。</li><li>为<strong>不同语速模式的用户</strong>提供了更大的灵活性，无论说话慢还是快，都能实现更准确的识别。</li><li>设置路径：语音访问设置 &gt; 执行前等待时间，然后选择最适合的选项。</li></ul><h1 id="逐步推出的修复"><a href="#逐步推出的修复" class="headerlink" title="逐步推出的修复"></a>逐步推出的修复</h1><p>以下修复正逐步向开启了“在最新更新可用时立即获取”选项的Dev频道用户推送：</p><table><thead><tr><th align="left">组件</th><th align="left">修复描述</th></tr></thead><tbody><tr><td align="left"><strong>常规</strong></td><td align="left">修复了导致部分屏幕阅读器在最近更新后<strong>无法读取屏幕内容</strong>的底层问题。</td></tr><tr><td align="left"><strong>Click to Do (预览版)</strong></td><td align="left">修复了在Copilot+ PC上<strong>有时按WIN + P会意外调用Click to Do</strong>的问题。</td></tr><tr><td align="left"><strong>任务栏和系统托盘</strong></td><td align="left">修复了最近版本中<strong>电池图标与实际充电状态不同步</strong>的问题（例如，已插入电源却显示未充电）。</td></tr><tr><td align="left"><strong>文件资源管理器</strong></td><td align="left">修复了自定义文件夹视图（例如按名称排序文件或更改图标大小）后，这些设置<strong>仅应用于特定导航路径的问题</strong>。之前，从其他应用（如浏览器）打开同一文件夹时，设置不会保留，导致每次都需要手动重新应用。这在关闭了“按日期分组”的<strong>下载文件夹</strong>中尤为明显。</td></tr><tr><td align="left"><strong>锁定和登录屏幕</strong></td><td align="left">修复了最近版本中，<strong>尽管支持媒体控制的应用正在播放媒体，但锁定屏幕上可能不显示媒体控件</strong>的问题。</td></tr><tr><td align="left"><strong>Windows Update</strong></td><td align="left">修复了一个底层问题。</td></tr></tbody></table><h1 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h1><p>微软正在调查此版本中存在的以下问题：</p><ul><li><strong>Click to Do</strong>：通过右边缘手势在主显示器上启动Click to Do会导致<strong>滑动视觉效果显示在错误的显示器上</strong>。</li><li><strong>锁定和登录屏幕</strong>：此版本中<strong>锁定屏幕上可能不显示媒体控件</strong>。</li><li><strong>任务栏</strong>：由于问题，任务栏预览的<strong>新动画已被暂时禁用</strong>。</li></ul><h1 id="更新提示"><a href="#更新提示" class="headerlink" title="更新提示"></a>更新提示</h1><ul><li>该版本通过<strong>受控功能推送 (CFR)</strong> 方式分发。</li><li>建议Dev频道用户在“设置”&gt;“Windows更新”中<strong>开启“在最新更新可用时立即获取”</strong> 切换开关，以逐步体验到所有新功能。</li><li><strong>Copilot+ PC 的特定功能需要符合相应规格的硬件支持</strong>。</li></ul><div class="note warning flat"><p>此版本为开发预览版，<strong>稳定性无法与正式版相比</strong>，不建议在生产环境中使用。部分新功能可能需要特定硬件支持，且推送范围可能受地区限制。</p></div><p><strong>【本文基于微软官方博客更新日志编写，具体功能体验可能因设备配置和区域设置而有所不同】</strong></p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>本文章使用Deepseek V3基于微软官方更新日志润色编写而成，具体功能体验可能因设备配置和区域设置而有所不同，如有错误，请指出，酥米将会及时更改。</p>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E7%B3%BB%E7%BB%9F%E7%B1%BB/">系统类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%B3%BB%E7%BB%9F/">系统</category>
      
      <category domain="https://www.sumi233.top/tags/Windows/">Windows</category>
      
      
      <comments>https://www.sumi233.top/Windows/win11dev3/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hexo博客添加电子木鱼</title>
      <link>https://www.sumi233.top/%E6%95%99%E7%A8%8B/blogelectronfish/</link>
      <guid>https://www.sumi233.top/%E6%95%99%E7%A8%8B/blogelectronfish/</guid>
      <pubDate>Sat, 27 Sep 2025 08:48:13 GMT</pubDate>
      
      <description>给你的Hexo博客添加电子木鱼界面</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>之前博客里面一直都有电子木鱼，但是之前是塞了一个单独的网页界面，文件都是分散开的，加载也很慢，主要的还是影响博客的加载速度，于是我使用豆包AI基于52JS大佬的项目大改了一下，目前不需要文件，只需要将代码嵌入到界面的index.md文件里面即可搞定电子木鱼界面。</p><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>本站已经内嵌此项目，可以去康康哦~ </p><div calss="anzhiyu-tag-link"><a class="tag-Link" target="_blank" href="/fish/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style>          <i class="anzhiyufont anzhiyu-icon-link" style></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">电子木鱼</div>            <div class="tag-link-sitename">酥米的小站</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h1 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h1><ul><li><p>不需要引用文件</p></li><li><p>尽量修复第一次点进去无法正常使用的问题（还是有概率出现用不了的问题，不过刷新一下就好了）</p></li><li><p>适配anzhiyu深色亮色模式，会跟着一起切换</p></li><li><p>总代码少，便于博客加载</p></li></ul><h1 id="创建界面"><a href="#创建界面" class="headerlink" title="创建界面"></a>创建界面</h1><p>可以先使用指令单独创建一个电子木鱼的页面</p><p><code>hexo new pages &quot;页面名称&quot;</code></p><p>然后使用工具编辑<code>“页面名称”/index.md</code></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!-- 隔离容器 - 确保样式不冲突 --&gt;</span><br><span class="line">&lt;div id=&quot;fish-container&quot; style=&quot;all: initial; display: block; margin: 20px auto; max-width: 600px; border-radius: 8px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1);&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;centerContent&quot;&gt;</span><br><span class="line">    &lt;div id=&quot;top&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;score&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;count&quot;&gt;0&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;subtitle&quot;&gt;功德&lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div id=&quot;center&quot;&gt;</span><br><span class="line">      &lt;svg class=&quot;myFish&quot; width=&quot;157pt&quot; height=&quot;126pt&quot; viewbox=&quot;0 0 247 197&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;</span><br><span class="line">        &lt;g id=&quot;fish-svg&quot;&gt;</span><br><span class="line">          &lt;path class=&quot;fish-path&quot; d=&quot; M 109.12 6.53 C 124.09 4.27 139.37 2.82 154.47 4.79 C 173.07 7.14 191.38 14.02 206.02 25.89 C 217.01 34.77 225.17 46.63 231.55 59.13 C 237.81 72.25 241.16 86.53 243.92 100.74 C 225.49 104.75 206.58 105.76 187.77 106.20 C 186.21 100.02 183.12 93.94 177.74 90.25 C 172.00 85.96 163.98 84.19 157.26 87.18 C 145.99 91.69 139.62 105.22 142.63 116.85 C 145.12 127.39 154.97 136.11 166.05 135.69 C 176.18 134.97 184.61 126.81 187.19 117.22 C 192.74 116.73 198.32 116.63 203.89 116.32 C 217.57 115.26 231.14 113.14 244.82 111.98 C 245.52 121.28 246.13 130.75 244.11 139.94 C 242.32 149.02 239.23 158.07 233.39 165.39 C 224.88 176.55 212.15 183.64 199.01 187.98 C 187.42 191.86 175.20 193.41 163.05 194.29 C 140.40 195.87 117.64 195.62 94.99 194.19 C 74.79 192.81 54.55 190.78 34.79 186.17 C 27.91 184.54 21.07 182.47 14.77 179.21 C 8.58 175.93 4.23 169.71 2.72 162.92 C -0.48 151.41 3.00 139.09 9.20 129.21 C 14.61 119.75 27.61 116.88 30.81 105.83 C 35.50 90.01 37.28 73.40 42.87 57.82 C 47.56 45.36 54.34 33.26 64.82 24.75 C 77.25 14.19 93.24 9.04 109.12 6.53 Z&quot;&gt;&lt;/path&gt;</span><br><span class="line">        &lt;/g&gt;</span><br><span class="line">      &lt;/svg&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div id=&quot;bottom&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;keyTips&quot;&gt;</span><br><span class="line">        &lt;key&gt;点击&lt;/key&gt;积攒功德</span><br><span class="line">        &lt;span id=&quot;autoClick&quot; class=&quot;autoClick&quot;&gt;自动点击&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;leftRight&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;left&quot;&gt;敲电子木鱼，见机甲佛祖，修赛博真经。&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;right&quot;&gt;</span><br><span class="line">          &lt;a href=&quot;https://github.com/52js&quot; class=&quot;textButton&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;text&quot;&gt;@52js &amp; Supermini233&lt;/div&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    /* 基础样式 - 确保优先级 */</span><br><span class="line">    #fish-container &#123;</span><br><span class="line">      --text-color: #eee;</span><br><span class="line">      --bg-color: #111;</span><br><span class="line">      --sub-color: #aaa;</span><br><span class="line">      --fish-color: #eee;</span><br><span class="line">      --key-bg: #444;</span><br><span class="line">      font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, sans-serif !important;</span><br><span class="line">      background: var(--bg-color) !important;</span><br><span class="line">      color: var(--text-color) !important;</span><br><span class="line">      padding: 20px !important;</span><br><span class="line">      transition: background-color 0.3s ease, color 0.3s ease !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /* 适配Anzhiyu亮色模式 */</span><br><span class="line">    html[data-theme=&quot;light&quot;] #fish-container,</span><br><span class="line">    body.light #fish-container &#123;</span><br><span class="line">      --text-color: #333;</span><br><span class="line">      --bg-color: #f5f5f5;</span><br><span class="line">      --sub-color: #666;</span><br><span class="line">      --fish-color: #333;</span><br><span class="line">      --key-bg: #ddd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /* 核心样式 */</span><br><span class="line">    #fish-container .centerContent &#123;</span><br><span class="line">      width: 100% !important;</span><br><span class="line">      min-height: 300px !important;</span><br><span class="line">      display: flex !important;</span><br><span class="line">      flex-direction: column !important;</span><br><span class="line">      justify-content: space-between !important;</span><br><span class="line">      padding: 1rem 1rem !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #fish-container .score &#123;</span><br><span class="line">      font-family: &quot;Helvetica Neue&quot;, sans-serif !important;</span><br><span class="line">      text-align: center !important;</span><br><span class="line">      width: 100% !important;</span><br><span class="line">      margin: 20px 0 !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #fish-container .count &#123;</span><br><span class="line">      text-align: center !important;</span><br><span class="line">      font-size: 6rem !important;</span><br><span class="line">      line-height: 1 !important;</span><br><span class="line">      transition: transform 0.1s ease !important;</span><br><span class="line">      color: var(--text-color) !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #fish-container .subtitle &#123;</span><br><span class="line">      font-size: 1.5rem !important;</span><br><span class="line">      color: var(--sub-color) !important;</span><br><span class="line">      margin-top: 10px !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #fish-container #center &#123;</span><br><span class="line">      display: flex !important;</span><br><span class="line">      justify-content: center !important;</span><br><span class="line">      align-items: center !important;</span><br><span class="line">      margin: 20px 0 !important;</span><br><span class="line">      position: relative !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #fish-container .myFish &#123;</span><br><span class="line">      cursor: pointer !important;</span><br><span class="line">      margin: 0 auto !important;</span><br><span class="line">      pointer-events: auto !important;</span><br><span class="line">      transition: transform 0.1s ease !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #fish-container .fish-path &#123;</span><br><span class="line">      fill: var(--fish-color) !important;</span><br><span class="line">      opacity: 1.00 !important;</span><br><span class="line">      transition: fill 0.3s ease !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #fish-container #bottom &#123;</span><br><span class="line">      color: var(--sub-color) !important;</span><br><span class="line">      font-size: 0.9rem !important;</span><br><span class="line">      padding: 0 5px !important;</span><br><span class="line">      text-align: center !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #fish-container .keyTips &#123;</span><br><span class="line">      display: flex !important;</span><br><span class="line">      justify-content: center !important;</span><br><span class="line">      align-items: center !important;</span><br><span class="line">      margin-bottom: 15px !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #fish-container .keyTips key &#123;</span><br><span class="line">      color: var(--text-color) !important;</span><br><span class="line">      background-color: var(--key-bg) !important;</span><br><span class="line">      margin: 0.3rem 0.45rem !important;</span><br><span class="line">      border-radius: 0.3rem !important;</span><br><span class="line">      padding: 0.2rem 0.5rem !important;</span><br><span class="line">      font-size: 0.7rem !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #fish-container .leftRight &#123;</span><br><span class="line">      display: flex !important;</span><br><span class="line">      justify-content: space-between !important;</span><br><span class="line">      align-items: center !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #fish-container .left &#123;</span><br><span class="line">      font-size: 12px !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #fish-container .textButton &#123;</span><br><span class="line">      color: var(--sub-color) !important;</span><br><span class="line">      text-decoration: none !important;</span><br><span class="line">      transition: color 0.2s ease !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #fish-container .textButton:hover &#123;</span><br><span class="line">      color: var(--text-color) !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #fish-container #autoClick &#123;</span><br><span class="line">      cursor: pointer !important;</span><br><span class="line">      margin-left: 10px !important;</span><br><span class="line">      transition: all 0.2s ease !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #fish-container #autoClick.confirm &#123;</span><br><span class="line">      color: var(--text-color) !important;</span><br><span class="line">      text-decoration: underline !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #fish-container .subtitleCountTip &#123;</span><br><span class="line">      position: absolute !important;</span><br><span class="line">      color: var(--text-color) !important;</span><br><span class="line">      animation: float 1s forwards !important;</span><br><span class="line">      opacity: 0 !important;</span><br><span class="line">      font-size: 16px !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @keyframes float &#123;</span><br><span class="line">      from &#123; transform: translateY(0); opacity: 1; &#125;</span><br><span class="line">      to &#123; transform: translateY(-30px); opacity: 0; &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /* 响应式调整 */</span><br><span class="line">    @media (max-width: 480px) &#123;</span><br><span class="line">      #fish-container .count &#123;</span><br><span class="line">        font-size: 4rem !important;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line"></span><br><span class="line">  &lt;script src=&quot;https://cdn.sumi233.top/npm/howler@2.2.3/dist/howler.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    // 主题变化时更新样式</span><br><span class="line">    function updateTheme() &#123;</span><br><span class="line">      const container = document.getElementById(&#x27;fish-container&#x27;);</span><br><span class="line">      if (!container) return;</span><br><span class="line">      </span><br><span class="line">      // 触发重绘</span><br><span class="line">      container.style.display = &#x27;none&#x27;;</span><br><span class="line">      setTimeout(() =&gt; &#123;</span><br><span class="line">        container.style.display = &#x27;block&#x27;;</span><br><span class="line">      &#125;, 0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 监听主题变化事件</span><br><span class="line">    if (window.matchMedia) &#123;</span><br><span class="line">      const darkModeMedia = window.matchMedia(&#x27;(prefers-color-scheme: dark)&#x27;);</span><br><span class="line">      darkModeMedia.addEventListener(&#x27;change&#x27;, updateTheme);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 监听DOM变化（Anzhiyu主题切换时会改变data-theme属性）</span><br><span class="line">    const observer = new MutationObserver((mutations) =&gt; &#123;</span><br><span class="line">      mutations.forEach(mutation =&gt; &#123;</span><br><span class="line">        if (mutation.attributeName === &#x27;data-theme&#x27;) &#123;</span><br><span class="line">          updateTheme();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    observer.observe(document.documentElement, &#123; attributes: true &#125;);</span><br><span class="line"></span><br><span class="line">    // 初始化木鱼功能</span><br><span class="line">    function initFish() &#123;</span><br><span class="line">      const maxRetries = 10;</span><br><span class="line">      let retries = 0;</span><br><span class="line">      </span><br><span class="line">      function tryInit() &#123;</span><br><span class="line">        const container = document.getElementById(&#x27;fish-container&#x27;);</span><br><span class="line">        const countElement = container.querySelector(&#x27;.count&#x27;);</span><br><span class="line">        const myFishElement = container.querySelector(&#x27;.myFish&#x27;);</span><br><span class="line">        const centerElement = container.querySelector(&#x27;#center&#x27;);</span><br><span class="line">        const autoClickElement = container.querySelector(&#x27;#autoClick&#x27;);</span><br><span class="line"></span><br><span class="line">        if (!countElement || !myFishElement || !centerElement || !autoClickElement) &#123;</span><br><span class="line">          retries++;</span><br><span class="line">          if (retries &lt; maxRetries) &#123;</span><br><span class="line">            setTimeout(tryInit, 100);</span><br><span class="line">            return;</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            console.error(&#x27;无法加载电子木鱼元素&#x27;);</span><br><span class="line">            return;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        let count = 0;</span><br><span class="line">        let countFlag = false;</span><br><span class="line">        let autoClick = false;</span><br><span class="line">        let autoClickInterval = null;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">          const saved = localStorage.getItem(&#x27;count&#x27;);</span><br><span class="line">          count = saved ? Number(saved) : 0;</span><br><span class="line">        &#125; catch (e) &#123;</span><br><span class="line">          count = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        countElement.textContent = count;</span><br><span class="line"></span><br><span class="line">        function startAnimate() &#123;</span><br><span class="line">          countElement.style.transform = &#x27;scale(1.1)&#x27;;</span><br><span class="line">          myFishElement.style.transform = &#x27;scale(0.95)&#x27;;</span><br><span class="line">          const tip = document.createElement(&#x27;div&#x27;);</span><br><span class="line">          tip.className = &#x27;subtitleCountTip&#x27;;</span><br><span class="line">          tip.textContent = &#x27;功德 + 1&#x27;;</span><br><span class="line">          centerElement.appendChild(tip);</span><br><span class="line">          setTimeout(() =&gt; tip.remove(), 1000);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        function initAnimate() &#123;</span><br><span class="line">          countElement.style.transform = &#x27;scale(1)&#x27;;</span><br><span class="line">          myFishElement.style.transform = &#x27;scale(1)&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        function counter() &#123;</span><br><span class="line">          countFlag = true;</span><br><span class="line">          count++;</span><br><span class="line">          countElement.textContent = count;</span><br><span class="line">          startAnimate();</span><br><span class="line">          try &#123;</span><br><span class="line">            localStorage.setItem(&#x27;count&#x27;, count);</span><br><span class="line">          &#125; catch (e) &#123;</span><br><span class="line">            console.log(&#x27;无法保存到本地存储&#x27;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        myFishElement.addEventListener(&#x27;click&#x27;, counter);</span><br><span class="line">        myFishElement.addEventListener(&#x27;mousedown&#x27;, () =&gt; &#123;</span><br><span class="line">          setTimeout(initAnimate, 200);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        document.addEventListener(&#x27;keyup&#x27;, (e) =&gt; &#123;</span><br><span class="line">          if (e.key === &#x27; &#x27;) &#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line">            if (!countFlag) counter();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        document.addEventListener(&#x27;keydown&#x27;, (e) =&gt; &#123;</span><br><span class="line">          if (e.key === &#x27; &#x27;) &#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line">            countFlag = false;</span><br><span class="line">            initAnimate();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        autoClickElement.addEventListener(&#x27;click&#x27;, () =&gt; &#123;</span><br><span class="line">          autoClick = !autoClick;</span><br><span class="line">          if (autoClick) &#123;</span><br><span class="line">            autoClickElement.classList.add(&#x27;confirm&#x27;);</span><br><span class="line">            autoClickInterval = setInterval(() =&gt; &#123;</span><br><span class="line">              counter();</span><br><span class="line">              setTimeout(initAnimate, 200);</span><br><span class="line">            &#125;, 500);</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            autoClickElement.classList.remove(&#x27;confirm&#x27;);</span><br><span class="line">            clearInterval(autoClickInterval);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        console.log(&#x27;电子木鱼初始化成功&#x27;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      tryInit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (document.readyState === &#x27;complete&#x27;) &#123;</span><br><span class="line">      initFish();</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      window.addEventListener(&#x27;load&#x27;, initFish);</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><ul><li>目前第一次打开还是会有概率无法使用（很小），刷新一次即可正常使用</li></ul><h1 id="引用教程"><a href="#引用教程" class="headerlink" title="引用教程"></a>引用教程</h1><ul><li>谢谢大佬们的无私贡献！</li></ul><div calss="anzhiyu-tag-link"><a class="tag-Link" target="_blank" href="https://github.com/52js/ElectronFish">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style>          <i class="anzhiyufont anzhiyu-icon-link" style></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">ElectronFish 电子木鱼</div>            <div class="tag-link-sitename">52JS</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h1 id="最终实现效果"><a href="#最终实现效果" class="headerlink" title="最终实现效果"></a>最终实现效果</h1><h2 id="深色模式"><a href="#深色模式" class="headerlink" title="深色模式"></a>深色模式</h2><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ht2-3.png"></p><h2 id="亮色模式"><a href="#亮色模式" class="headerlink" title="亮色模式"></a>亮色模式</h2><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ht2-2.png"></p>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%95%99%E7%A8%8B%E7%B1%BB/">教程类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E5%8D%9A%E5%AE%A2/">博客</category>
      
      <category domain="https://www.sumi233.top/tags/%E6%95%99%E7%A8%8B/">教程</category>
      
      
      <comments>https://www.sumi233.top/%E6%95%99%E7%A8%8B/blogelectronfish/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>anzhiyu主题友链测速后端修复</title>
      <link>https://www.sumi233.top/%E6%95%99%E7%A8%8B/blogflinkcountfix/</link>
      <guid>https://www.sumi233.top/%E6%95%99%E7%A8%8B/blogflinkcountfix/</guid>
      <pubDate>Tue, 23 Sep 2025 18:20:13 GMT</pubDate>
      
      <description>anzhiyu主题友链测速后端修复方案和脚本</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>最近在捣腾anzhiyu主题的友链延迟检测，前端使用了辰渊尘大佬的方法，后端则使用了LiuShen大佬的Github Action方法，但是大佬附带的友链提取js并不适配anzhiyu主题，提示格式错误，于是我投给豆包进行了修改。</p><p>现已支持自动检测编码和自动修复并生成合适的友链json,也能检测出语法问题并且输出错误。</p><p>脚本可以放在scripts文件夹也可以单独执行<code>node link.js</code>来生成</p><p><strong>效果如图</strong>：</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ht1-1.png"></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">const YML = require(&#x27;yamljs&#x27;);</span><br><span class="line">const fs = require(&#x27;fs&#x27;).promises;</span><br><span class="line">const path = require(&#x27;path&#x27;);</span><br><span class="line"></span><br><span class="line">// 路径配置</span><br><span class="line">const LINK_YML_PATH = path.join(&#x27;source&#x27;, &#x27;_data&#x27;, &#x27;link.yml&#x27;);</span><br><span class="line">const OUTPUT_JSON_PATH = path.join(&#x27;source&#x27;, &#x27;flink_count.json&#x27;);</span><br><span class="line">const TAKE_COUNT = 2;</span><br><span class="line"></span><br><span class="line">async function processLinks() &#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    // 读取文件（二进制方式）</span><br><span class="line">    const yamlBuffer = await fs.readFile(LINK_YML_PATH);</span><br><span class="line">    console.log(&#x27;文件读取成功，大小:&#x27;, yamlBuffer.length, &#x27;字节&#x27;);</span><br><span class="line">    </span><br><span class="line">    // 处理UTF-8 BOM头（移除BOM）</span><br><span class="line">    let cleanBuffer = yamlBuffer;</span><br><span class="line">    if (yamlBuffer[0] === 0xef &amp;&amp; yamlBuffer[1] === 0xbb &amp;&amp; yamlBuffer[2] === 0xbf) &#123;</span><br><span class="line">      console.warn(&#x27;检测到UTF-8 BOM头，已自动移除&#x27;);</span><br><span class="line">      cleanBuffer = yamlBuffer.slice(3); // 移除前3个BOM字节</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 转换为字符串</span><br><span class="line">    const yamlContent = cleanBuffer.toString(&#x27;utf8&#x27;);</span><br><span class="line">    </span><br><span class="line">    // 显示文件前100个字符用于调试</span><br><span class="line">    console.log(&#x27;文件前100字符:&#x27;, yamlContent.substring(0, 100).replace(/\n/g, &#x27;\\n&#x27;));</span><br><span class="line">    </span><br><span class="line">    // 更安全的YAML处理 - 只处理确实为空的rss字段</span><br><span class="line">    const processedContent = yamlContent</span><br><span class="line">      .replace(/^\s*rss:\s*$/gm, &#x27;rss: &quot;&quot;&#x27;)  // 处理空的rss字段</span><br><span class="line">      .replace(/\t/g, &#x27;  &#x27;);  // 将制表符替换为两个空格（YAML不允许制表符缩进）</span><br><span class="line">    </span><br><span class="line">    // 保存处理后的内容用于调试</span><br><span class="line">    await fs.writeFile(&#x27;processed_yaml_debug.yml&#x27;, processedContent, &#x27;utf8&#x27;);</span><br><span class="line">    console.log(&#x27;已保存处理后的YAML到 processed_yaml_debug.yml&#x27;);</span><br><span class="line">    </span><br><span class="line">    // 尝试使用更严格的方式定位错误</span><br><span class="line">    try &#123;</span><br><span class="line">      console.log(&#x27;开始解析YAML...&#x27;);</span><br><span class="line">      const data = YML.parse(processedContent);</span><br><span class="line">      console.log(&#x27;YAML解析成功，根结构类型:&#x27;, Array.isArray(data) ? &#x27;数组&#x27; : typeof data);</span><br><span class="line">      </span><br><span class="line">      if (!Array.isArray(data)) &#123;</span><br><span class="line">        throw new Error(&#x27;YAML文件的根结构不是数组&#x27;);</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      const linkList = [];</span><br><span class="line">      for (let i = 0; i &lt; Math.min(TAKE_COUNT, data.length); i++) &#123;</span><br><span class="line">        const item = data[i];</span><br><span class="line">        if (item &amp;&amp; Array.isArray(item.link_list)) &#123;</span><br><span class="line">          linkList.push(...item.link_list);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          console.warn(`第$&#123;i+1&#125;项不包含有效的link_list数组，已跳过`);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      const outputData = &#123;</span><br><span class="line">        link_list: linkList,</span><br><span class="line">        length: linkList.length</span><br><span class="line">      &#125;;</span><br><span class="line">      </span><br><span class="line">      await fs.writeFile(</span><br><span class="line">        OUTPUT_JSON_PATH,</span><br><span class="line">        JSON.stringify(outputData, null, 2),</span><br><span class="line">        &#x27;utf8&#x27;</span><br><span class="line">      );</span><br><span class="line">      </span><br><span class="line">      console.log(`成功生成 $&#123;OUTPUT_JSON_PATH&#125;，共包含 $&#123;linkList.length&#125; 条友链`);</span><br><span class="line">      </span><br><span class="line">    &#125; catch (parseError) &#123;</span><br><span class="line">      console.error(&#x27;\n=== YAML解析错误 ===&#x27;);</span><br><span class="line">      console.error(&#x27;错误信息:&#x27;, parseError.message);</span><br><span class="line">      </span><br><span class="line">      // 尝试定位错误行</span><br><span class="line">      if (parseError.parsedLine) &#123;</span><br><span class="line">        console.error(&#x27;错误位置: 第&#x27;, parseError.parsedLine, &#x27;行&#x27;);</span><br><span class="line">        // 输出错误行附近的内容</span><br><span class="line">        const lines = processedContent.split(&#x27;\n&#x27;);</span><br><span class="line">        const errorLine = parseError.parsedLine - 1; // 转换为数组索引</span><br><span class="line">        // 显示错误行前后3行</span><br><span class="line">        for (let i = Math.max(0, errorLine - 3); i &lt;= Math.min(lines.length - 1, errorLine + 3); i++) &#123;</span><br><span class="line">          console.log(`$&#123;i + 1&#125;: $&#123;lines[i]&#125;`);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        console.error(&#x27;错误位置: 未知（可能是文件开头附近）&#x27;);</span><br><span class="line">      &#125;</span><br><span class="line">      console.error(&#x27;请检查 processed_yaml_debug.yml 文件是否有格式问题&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">  &#125; catch (error) &#123;</span><br><span class="line">    console.error(&#x27;\n=== 处理过程出错 ===&#x27;);</span><br><span class="line">    console.error(&#x27;错误信息:&#x27;, error.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">processLinks();</span><br></pre></td></tr></table></figure><p>运行脚本前请先安装yamljs <code>node install yamljs --save</code></p><h1 id="后端Github-Action修复方案"><a href="#后端Github-Action修复方案" class="headerlink" title="后端Github Action修复方案"></a>后端Github Action修复方案</h1><div class="note warning flat"><p>此修复方法仅经过本人测试正常运行，可否正常使用请自行测试</p></div><p>作者原版github actions运行后可能会出现找不到环境变量的问题，导致抓取失败。</p><p>这里有个走偏门的方法，可以Fork后修改workflows文件夹里面的yaml文件夹的<strong>check_links.yml</strong>,将<code>env：</code>下面的</p><p><code>SOURCE_URL: $&#123;&#123; secrets.SOURCE_URL &#125;&#125;</code></p><p>改成自己的URL，例如：</p><p><code>SOURCE_URL: https://www.sumi233.top/flink_count.json</code></p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ht1-4.png"></p><p>然后在项目的Github Actions再次运行workflows即可。</p><h1 id="引用教程"><a href="#引用教程" class="headerlink" title="引用教程"></a>引用教程</h1><ul><li>谢谢大佬们的无私贡献！</li></ul><div calss="anzhiyu-tag-link"><a class="tag-Link" target="_blank" href="https://blog.liushen.fun/posts/c2262998/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style>          <i class="anzhiyufont anzhiyu-icon-link" style></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">Github Action实现友链状态检测</div>            <div class="tag-link-sitename">LiuShen</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><div calss="anzhiyu-tag-link"><a class="tag-Link" target="_blank" href="https://blog.mcxiaochen.top/posts/p1c0fbc06/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style>          <i class="anzhiyufont anzhiyu-icon-link" style></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">安知鱼主题实现友链状态前端显示</div>            <div class="tag-link-sitename">辰渊尘の个人博客</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h1 id="最终实现效果"><a href="#最终实现效果" class="headerlink" title="最终实现效果"></a>最终实现效果</h1><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/ht1-2.png"></p>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%95%99%E7%A8%8B%E7%B1%BB/">教程类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E5%8D%9A%E5%AE%A2/">博客</category>
      
      <category domain="https://www.sumi233.top/tags/%E6%95%99%E7%A8%8B/">教程</category>
      
      
      <comments>https://www.sumi233.top/%E6%95%99%E7%A8%8B/blogflinkcountfix/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>酥米的碎碎念（2）</title>
      <link>https://www.sumi233.top/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B52/</link>
      <guid>https://www.sumi233.top/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B52/</guid>
      <pubDate>Tue, 23 Sep 2025 14:18:32 GMT</pubDate>
      
      <description>酥米关于台风桦加沙</description>
      
      
      
      <content:encoded><![CDATA[<h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><p>就在前天，“桦加沙”来势汹汹的闯进了我国海域，24号将于广东省阳江市-珠海市登陆。本次台风尤为严重，风力达超17级；距离上一次超强台风还是“山竹”。全广东省地级市也开启了I级戒备，珠三角大部分城市也实行了“五停”。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/talk2-1.jpg"></p><h3 id="台风将来之际"><a href="#台风将来之际" class="headerlink" title="台风将来之际"></a>台风将来之际</h3><p>酥米在佛山市禅城区。从今天起也开始停课停工，我也在22号下午收到了班主任在群里发的停课通知，说实话当时还挺震惊的，因为很久没有遇见能让学校停课的台风了（上一次是山竹）。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/talk2-6.jpg"></p><p>今天小区门口物业也一直在播注意台风安全的广播，可想而知这次台风的严重程度。23日整天佛山并没有太大的影响，只有在晚上下了一场雨。不过我看到新闻珠海已经海水上涨淹掉一些地方了（海边的小伙伴一定要注意安全哦！）。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/talk2-5.jpg"></p><p>佛山市也已然进入戒备状态，23号21点起佛山地铁停运，高铁也停运了，甚至是大巴也跟着发说明停运了。高明和三水区部分桥梁也停止人&#x2F;汽车通行。同时停工停课也在进行中。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/talk2-4.jpg"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/talk2-3.jpg"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/talk2-2.jpg"></p><h3 id="个人的小希望"><a href="#个人的小希望" class="headerlink" title="个人的小希望"></a>个人的小希望</h3><p>希望各位在和我一起在广东的小伙伴，能顺利的度过这次“桦加沙”的”摧残“，平平安安的上学上班。</p><div class="note danger flat"><p>广东靠海的小伙伴一定要注意安全哦！！！</p></div><p>也要提醒小伙伴们（尤其是珠海、江门、惠州、深圳、阳江一带的小伙伴！），台风期间非必要切勿随便出门，在外面如果遇到台风需到安全的建筑物下躲避。因为台风可能会导致下雨，也要注意洪涝和山体滑坡的风险哦~</p>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95%E7%B1%BB/">个人记录类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E9%95%BF%E7%AF%87%E7%A2%8E%E7%A2%8E%E5%BF%B5/">长篇碎碎念</category>
      
      
      <comments>https://www.sumi233.top/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B52/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Windows 11 Insider Preview Build 26220.6690 更新日志：Copilot 整合再深化</title>
      <link>https://www.sumi233.top/Windows/win11dev2/</link>
      <guid>https://www.sumi233.top/Windows/win11dev2/</guid>
      <pubDate>Sun, 21 Sep 2025 08:30:00 GMT</pubDate>
      
      <description>Windows 11 Insider Preview Build 26220.6690预览版的更新内容</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h1><p>系统版本：Windows 11 25H2</p><p>内核版本：26220.6690</p><p>频道：Dev Channel</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/1-3.jpg"></p><blockquote><p>微软于2025年9月19日向Dev频道的Windows Insider项目成员推送了Windows 11 Insider Preview Build 26220.6690 (KB5065786) 版本更新。本次更新继续深化Copilot与系统壳层的整合，并带来多项体验优化和问题修复。</p></blockquote><hr><h1 id="1-Click-to-Do-预览版-翻译功能"><a href="#1-Click-to-Do-预览版-翻译功能" class="headerlink" title="1. Click to Do (预览版) 翻译功能"></a>1. Click to Do (预览版) 翻译功能</h1><ul><li>为 <strong>Copilot+ PC</strong> 引入了由 <strong>Microsoft Copilot 提供支持的翻译功能</strong>。</li><li>当选择的文本与Windows显示语言或首选语言设置不同时，会<strong>出现翻译建议</strong>。</li><li>选定的文本会发送到Copilot应用，并在体验中<strong>无缝提供翻译</strong>。</li><li>⚠️ 注意：此功能需要已在之前版本中推出的新Copilot提示框，且<strong>目前尚未向欧洲经济区(EEA)或中国的Insiders推送</strong>。</li></ul><h1 id="2-任务栏与系统托盘：分享到-Copilot"><a href="#2-任务栏与系统托盘：分享到-Copilot" class="headerlink" title="2. 任务栏与系统托盘：分享到 Copilot"></a>2. 任务栏与系统托盘：分享到 Copilot</h1><ul><li>鼠标悬停在任务栏上已打开的应用窗口时，会出现一个“<strong>分享给 Copilot</strong>”（Share with Copilot）选项。</li><li>此功能允许快速与Copilot开始新对话，并使用 <strong>Copilot Vision 扫描、分析</strong>屏幕上的应用内容。</li></ul><h1 id="3-Desktop-Spotlight-上下文菜单选项"><a href="#3-Desktop-Spotlight-上下文菜单选项" class="headerlink" title="3. Desktop Spotlight 上下文菜单选项"></a>3. Desktop Spotlight 上下文菜单选项</h1><ul><li>若在“设置”&gt;“个性化”&gt;“背景”中选择 <strong>Windows Spotlight 作为桌面背景</strong>，右键单击桌面时，上下文菜单会添加“<strong>了解有关此背景的更多信息</strong>”和“<strong>下一个桌面背景</strong>”选项。</li></ul><h1 id="4-设置账户管理优化"><a href="#4-设置账户管理优化" class="headerlink" title="4. 设置账户管理优化"></a>4. 设置账户管理优化</h1><ul><li>“设置”&gt;“账户”下的“<strong>电子邮件和账户</strong>”部分现已更名为“<strong>您的账户</strong>”（Your accounts）。</li><li>这反映了在Windows和应用中保持连接的<strong>更统一和简化的方式</strong>。</li></ul><h1 id="逐步推出的修复"><a href="#逐步推出的修复" class="headerlink" title="逐步推出的修复"></a>逐步推出的修复</h1><p>以下修复正逐步向开启了“在最新更新可用时立即获取”选项的Dev频道用户推送：</p><table><thead><tr><th align="left">组件</th><th align="left">修复描述</th></tr></thead><tbody><tr><td align="left"><strong>文件资源管理器</strong></td><td align="left">修复了在地址栏中直接输入UNC服务器名称可能导致文件资源管理器<strong>无响应的问题</strong></td></tr><tr><td align="left"><strong>Windows Update</strong></td><td align="left">修复了近期部分Insider安装最新版本时<strong>失败并出现错误0x80070002</strong>的问题</td></tr><tr><td align="left"><strong>音频</strong></td><td align="left">解决了近期更新后可能出现的<strong>音频无法正常工作的问题</strong></td></tr><tr><td align="left"><strong>设置</strong></td><td align="left">修复了启用管理员保护后，“设置”&gt;“系统”&gt;“可选功能”&gt;“添加可选功能”可能<strong>无法加载的问题</strong></td></tr></tbody></table><h1 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h1><p>微软正在调查此版本中存在的以下问题：</p><ul><li><strong>Click to Do</strong>：通过右边缘手势在主显示器上启动Click to Do会导致<strong>滑动视觉效果显示在错误的显示器上</strong>。</li><li><strong>锁定和登录屏幕</strong>：此版本中<strong>锁定屏幕上可能不显示媒体控件</strong>。</li><li><strong>任务栏</strong>：由于问题，任务栏预览的<strong>新动画已被暂时禁用</strong>。</li></ul><h1 id="更新提示"><a href="#更新提示" class="headerlink" title="更新提示"></a>更新提示</h1><ul><li>该版本通过<strong>受控功能推送 (CFR)</strong> 方式分发。</li><li>建议Dev频道用户在“设置”&gt;“Windows更新”中<strong>开启“在最新更新可用时立即获取”</strong> 切换开关，以逐步体验到所有新功能。</li><li><strong>Copilot+ PC 的特定功能需要符合相应规格的硬件支持</strong>。</li></ul><blockquote><p>⚠️ <strong>注意事项</strong>：此版本为开发预览版，<strong>稳定性无法与正式版相比</strong>，不建议在生产环境中使用。部分新功能可能需要特定硬件支持，且推送范围可能受地区限制。</p></blockquote><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>本文章使用Deepseek V3基于微软官方更新日志润色编写而成，具体功能体验可能因设备配置和区域设置而有所不同，如有错误，请指出，酥米将会及时更改。</p>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E7%B3%BB%E7%BB%9F%E7%B1%BB/">系统类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%B3%BB%E7%BB%9F/">系统</category>
      
      <category domain="https://www.sumi233.top/tags/Windows/">Windows</category>
      
      
      <comments>https://www.sumi233.top/Windows/win11dev2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Windows 11 Insider Preview Build 26220.6682 更新日志：AI功能持续增强</title>
      <link>https://www.sumi233.top/Windows/win11dev1/</link>
      <guid>https://www.sumi233.top/Windows/win11dev1/</guid>
      <pubDate>Sat, 13 Sep 2025 16:15:00 GMT</pubDate>
      
      <description>Windows 11 25H2 Build 26220.6682预览版的更新内容</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h1><p>系统版本：Windows 11 25H2</p><p>内核版本：26220.6682</p><p>频道：Dev Channel</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/1-2.jpg"></p><blockquote><p>微软今日向 Dev 频道的 Windows Insider 项目成员推送了 Windows 11 Insider Preview Build 26220.6682 (KB5065782) 版本更新。本次更新主要针对 Copilot+ PC 设备，进一步增强了 Click to Do 功能的实用性和智能化水平，同时对讲述人(Narrator)无障碍功能进行了优化。</p></blockquote><hr><h1 id="1-Click-to-Do-功能增强（预览版）"><a href="#1-Click-to-Do-功能增强（预览版）" class="headerlink" title="1. Click to Do 功能增强（预览版）"></a>1. Click to Do 功能增强（预览版）</h1><p>本次更新为 Copilot+ PC 带来了多项 Click to Do 功能的改进：</p><p><strong>自定义指令输入</strong>：现在在 Click to Do 的上下文菜单中可以直接输入自定义指令，与选定的屏幕内容一并发送给 Copilot，交互更加灵活。</p><p><strong>本地 AI 推荐提示</strong>：菜单下方会显示由设备端 Phi-Silica 模型生成的推荐提示（目前支持英文、西班牙文和法文），响应更快且保护隐私。</p><p><strong>视觉动画优化</strong>：使用屏幕右边缘手势触发 Click to Do 时，新增了流畅的视觉动画反馈，操作体验更加直观。</p><p><strong>功能发现性提升</strong>：上下文菜单中新增”新建和热门”动作标签，帮助用户更快发现实用功能。同时”总结”功能的输出结果更加简洁精炼。</p><p><strong>开始菜单集成</strong>：开始菜单的”推荐”区域会展示 Copilot 示例提示，引导用户体验 AI 功能。</p><blockquote><p>⚠️ 注意：上述 Click to Do 增强功能目前未向欧洲经济区(EEA)或中国的 Insiders 推送。</p></blockquote><h1 id="2-讲述人-Narrator-无障碍功能优化"><a href="#2-讲述人-Narrator-无障碍功能优化" class="headerlink" title="2. 讲述人(Narrator)无障碍功能优化"></a>2. 讲述人(Narrator)无障碍功能优化</h1><p>本次更新对讲述人功能进行了多项改进：</p><ul><li><strong>自然语音优化</strong>：使用自然语音时，讲述人播报标题或语法错误时不再显著提高音调，减少听觉干扰</li><li><strong>脚注导航改进</strong>：新增脚注导航功能，可清晰听取脚注编号，便于处理参考文献类文档</li><li><strong>阅读稳定性提升</strong>：修复了讲述人可能在文档中间意外停止阅读的问题</li></ul><h1 id="3-新表情符号加入"><a href="#3-新表情符号加入" class="headerlink" title="3. 新表情符号加入"></a>3. 新表情符号加入</h1><p>本次更新引入了 7 个新的 Emoji 16.0 表情符号：</p><table><thead><tr><th align="left">表情符号</th><th align="left">名称</th><th align="left">含义与使用场景</th></tr></thead><tbody><tr><td align="left">🫤</td><td align="left">有眼袋的脸</td><td align="left">表示<strong>疲惫、倦怠</strong>或需要休息</td></tr><tr><td align="left">🫰</td><td align="left">指纹</td><td align="left">代表<strong>身份、安全、解锁</strong>或隐私相关话题</td></tr><tr><td align="left">🫚</td><td align="left">根类蔬菜</td><td align="left">代表<strong>健康饮食、园艺</strong>或烹饪</td></tr><tr><td align="left">🫗</td><td align="left">光秃秃的树</td><td align="left">象征<strong>冬天、休眠、空旷</strong>或孤独感</td></tr><tr><td align="left">🫖</td><td align="left">竖琴</td><td align="left">表示<strong>音乐、艺术</strong>，或带有古老、优雅的意境</td></tr><tr><td align="left">🫕</td><td align="left">铲子</td><td align="left">用于<strong>园艺、挖掘</strong>，或比喻“摆脱困境”</td></tr><tr><td align="left">🫔</td><td align="left">飞溅</td><td align="left">表达<strong>创造力、混乱</strong>或趣味性的泼洒</td></tr></tbody></table><blockquote><p>💡 提示：这些新表情符号在系统表情面板中可用，但第三方应用可能需要更新才能正确显示。</p></blockquote><h1 id="4-Xbox-控制器操作调整"><a href="#4-Xbox-控制器操作调整" class="headerlink" title="4. Xbox 控制器操作调整"></a>4. Xbox 控制器操作调整</h1><ul><li><strong>短按</strong> Xbox 按钮：打开 Game Bar</li><li><strong>长按</strong> Xbox 按钮：打开任务视图(Task View)</li><li><strong>按住</strong> Xbox 按钮：保持原有功能，关闭控制器</li></ul><h1 id="问题修复"><a href="#问题修复" class="headerlink" title="问题修复"></a>问题修复</h1><p>本次更新包含了多项稳定性改进：</p><ul><li>提升了任务栏隐藏和取消隐藏的可靠性</li><li>解决了文件资源管理器可能无响应的问题</li><li>修复了使用 NDI 和显示捕获时 OBS 音频卡顿的问题</li><li>改进了 Windows 沙盒的稳定性</li><li>优化了语音访问和 Windows Hello 的体验</li></ul><h1 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h1><ul><li>Click to Do 可能无法为某些用户启动</li><li>锁定屏幕上可能不显示媒体控件</li><li>部分用户可能会遇到音频问题，设备管理器中可能出现黄色感叹号</li><li>某些 PC 在休眠期间可能会遇到 bugcheck（绿屏错误）</li><li>文件资源管理器主页中的”共享”部分对某些用户可能显示为空</li></ul><p>由于此版本是测试版，<strong>稳定性可能受到影响</strong>，不建议在生产环境中使用。</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>本文章使用Deepseek V3基于微软官方更新日志润色编写而成，具体功能体验可能因设备配置和区域设置而有所不同，如有错误，请指出，酥米将会及时更改。</p>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E7%B3%BB%E7%BB%9F%E7%B1%BB/">系统类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%B3%BB%E7%BB%9F/">系统</category>
      
      <category domain="https://www.sumi233.top/tags/Windows/">Windows</category>
      
      
      <comments>https://www.sumi233.top/Windows/win11dev1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Windows 11 Insider Preview Build 26220.5790 更新日志：AI赋能更智能的PC体验</title>
      <link>https://www.sumi233.top/Windows/win11dev/</link>
      <guid>https://www.sumi233.top/Windows/win11dev/</guid>
      <pubDate>Sun, 07 Sep 2025 12:45:08 GMT</pubDate>
      
      <description>Windows 11 25H2 Build 26220.5790预览版的更新内容</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h1><p>系统版本：Windows 11 25H2</p><p>内核版本：26220.5790</p><p>频道：Dev Channel</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/1-1.jpg"></p><blockquote><p>微软最新发布的Windows 11 25H2 Build 26220.5790预览版为Copilot+ PC带来了一系列AI驱动的新功能，让操作系统变得更加智能高效。</p></blockquote><p>近日，微软向Dev频道的Windows Insider项目成员发布了Windows 11 Insider Preview Build 26220.5790（KB5065779），作为即将到来的25H2版本的一部分。</p><p>这个版本主要集中在提升Copilot+ PC的体验上，引入了智能语音听写、扩展的Studio Effects支持以及文件资源管理器的改进。</p><hr><h1 id="智能语音听写：更流畅的语音输入体验"><a href="#智能语音听写：更流畅的语音输入体验" class="headerlink" title="智能语音听写：更流畅的语音输入体验"></a>智能语音听写：更流畅的语音输入体验</h1><p>Build 26220.5790 为Copilot+ PC带来了<strong>流体听写（Fluid Dictation）</strong> 功能。它通过设备端的小型语言模型（SLMs）实时自动纠正语法、标点符号和填充词，从而减少手动编辑的需要。</p><p>这意味着用户在使用语音输入时可以获得更流畅、更智能的体验。</p><p>此功能在任何支持文本输入的应用中都能工作，但在密码或PIN等安全字段中会自动禁用以保护隐私。目前流体听写支持<strong>所有英语 locales</strong>。</p><p>要使用此功能，用户只需启动语音访问（Voice Access）并完成设置（如果是首次使用），流体听写默认即为启用状态。</p><h1 id="Studio-Effects扩展支持更多摄像头"><a href="#Studio-Effects扩展支持更多摄像头" class="headerlink" title="Studio Effects扩展支持更多摄像头"></a>Studio Effects扩展支持更多摄像头</h1><p>本次更新另一个亮点是 <strong>Windows Studio Effects 开始支持更多类型的摄像头硬件</strong>。</p><p>此前Studio Effects主要限于集成式笔记本电脑摄像头，现在，在支持的Copilot+ PC上，用户可以在<strong>额外的备用摄像头</strong>（如USB网络摄像头或笔记本电脑的内置后置摄像头）上使用AI加持的摄像头增强功能了。</p><p>要启用该功能，只需导航到 <strong>“设置”&gt;“蓝牙和设备”&gt;“摄像头”</strong>，从已连接的摄像头列表中选择首选摄像头，然后打开高级摄像头选项菜单，找到新的“使用Windows Studio Effects”切换开关即可。</p><p>需要注意的是，该功能所需的Windows Studio Effects驱动程序更新将<strong>首先推送给基于Intel的Copilot+ PC</strong>，基于AMD和Snapdragon的Copilot+ PC则在未来几周内陆续获得支持。</p><h1 id="文件资源管理器的新悬停操作"><a href="#文件资源管理器的新悬停操作" class="headerlink" title="文件资源管理器的新悬停操作"></a>文件资源管理器的新悬停操作</h1><p>文件资源管理器的“主页”现在提供了<strong>新的悬停操作</strong>，以便更快地进行文件管理。</p><p>当用户在文件资源管理器主页中将鼠标悬停在文件上时，会显示“打开文件位置”和“向Copilot询问此文件”等命令。这使得用户能更轻松地尝试Copilot集成并附加文件。</p><p>不过此体验目前仅限使用<strong>Microsoft帐户登录</strong>的用户。对未来工作或学校账户（Entra ID）的支持将在未来的版本中推出，并且此更改尚未向欧洲经济区（EEA）的Windows Insider成员推出。</p><h1 id="底层优化和问题修复"><a href="#底层优化和问题修复" class="headerlink" title="底层优化和问题修复"></a>底层优化和问题修复</h1><p>除了引入新功能，Build 26220.5790 也带来了一系列修复，提升了系统的稳定性和性能：</p><ul><li><strong>常规性修复</strong>：解决了某些设备上各种场景中出现的意外延迟增加问题，包括与文件资源管理器和任务栏的交互（单击可能需要500毫秒才能处理）以及浏览器窗口（尤其是在观看视频时）。</li><li><strong>任务栏和系统托盘</strong>：修复了更改显示分辨率后，任务栏中的应用预览窗口可能与单击&#x2F;悬停的应用图标<strong>不对齐的问题</strong>。</li><li><strong>文件资源管理器</strong>：修复了安装某些应用程序后，右键单击时上下文菜单可能在正常初始视图和“显示更多选项”之间意外切换的问题。</li><li><strong>设置</strong>：解决了“设置”&gt;“系统”&gt;“存储”&gt;“临时文件”页面在文件扫描阶段<strong>卡住的问题</strong>。</li><li><strong>其他</strong>：修复了导致某些Insiders的事件查看器中出现“Microsoft Pluton加密提供程序未加载，因为初始化失败”并出现错误57的问题。</li></ul><h1 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h1><p>目前仍存在一些已知问题，微软正在调查解决：</p><ul><li>一些PC在<strong>休眠期间</strong>可能会遇到bugcheck（绿屏），建议用户暂时避免使PC休眠。</li><li>文件资源管理器主页中的“共享”部分对某些用户可能<strong>显示为空</strong>。</li><li>一些Insiders遇到<strong>音频问题</strong>（音频停止工作，设备管理器中设备显示黄色感叹号），可尝试通过更新设备驱动程序来缓解。</li><li>正在调查<strong>通过蓝牙使用Xbox控制器</strong>导致PC bugcheck的问题。</li></ul><hr><p>Build 26220.5790预览版展现了Windows 11 25H2在<strong>AI与操作系统深度融合</strong>方面的探索。流体听写、扩展的Studio Effects以及更便捷的文件操作悬停菜单，都预示着更智能、更高效的个人计算体验。</p><p>由于此版本是测试版，<strong>稳定性可能受到影响</strong>，不建议在生产环境中使用。</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>本文章使用Deepseek V3润色而成，如有错误，请指出，酥米将会及时更改。</p>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E7%B3%BB%E7%BB%9F%E7%B1%BB/">系统类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%B3%BB%E7%BB%9F/">系统</category>
      
      <category domain="https://www.sumi233.top/tags/Windows/">Windows</category>
      
      
      <comments>https://www.sumi233.top/Windows/win11dev/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>红米2？Linux？ | 手把手教你刷入PostmarketOS Linux！老机换新颜！</title>
      <link>https://www.sumi233.top/%E6%95%99%E7%A8%8B/redmi2linux/</link>
      <guid>https://www.sumi233.top/%E6%95%99%E7%A8%8B/redmi2linux/</guid>
      <pubDate>Tue, 19 Aug 2025 11:05:13 GMT</pubDate>
      
      <description>酥米手把手教你把红米2刷入PostmarketOS Linux！</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本期教程将小白式手把手教大家将红米2刷入PostmarketOS</p><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><ul><li>红米2（1g或者2g版都行，2a不支持刷入Linux）</li><li>数据线</li><li>正常使用的电脑（建议系统版本windows10以上）</li><li>灵巧的手和脑子</li></ul><h1 id="合并分区"><a href="#合并分区" class="headerlink" title="合并分区"></a>合并分区</h1><p>已升级安卓5.1的增强版机型可以跳过此步骤，非增强版或未升级安卓5.1的增强版请继续往下</p><h2 id="下载附件"><a href="#下载附件" class="headerlink" title="下载附件"></a>下载附件</h2><p>请按照以下机型下载线刷包</p><div calss="anzhiyu-tag-link"><a class="tag-Link" target="_blank" href="https://xiaomirom.com/download/redmi-2-redmi-2-pro-wt86047-stable-V9.2.3.0.LHJCNEK/#china-fastboot">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style>          <i class="anzhiyufont anzhiyu-icon-link" style></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">线刷包</div>            <div class="tag-link-sitename">红米2移动版/2a</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><div calss="anzhiyu-tag-link"><a class="tag-Link" target="_blank" href="https://xiaomirom.com/download/redmi-2-redmi-2-pro-wt88047-stable-V9.2.5.0.LHJMIEK/#global-fastboot">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style>          <i class="anzhiyufont anzhiyu-icon-link" style></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">线刷包</div>            <div class="tag-link-sitename">红米2联通/电信版</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><div calss="anzhiyu-tag-link"><a class="tag-Link" target="_blank" href="https://miuiver.com/miflash/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style>          <i class="anzhiyufont anzhiyu-icon-link" style></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">Miflash</div>            <div class="tag-link-sitename">Miflash刷机工具</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h2 id="更新最新版系统合并分区"><a href="#更新最新版系统合并分区" class="headerlink" title="更新最新版系统合并分区"></a>更新最新版系统合并分区</h2><p>红米2官方系统安卓5.1版本往上会自动合并分区，仅需使用miflash线刷更新系统即可</p><p>首先长按电源键+音量下键将红米2进入Fastboot，并且使用数据线与电脑连接<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-19%20194026.png"><br>解压下载好的miflash工具，打开点击左上角的driver选项，点击安装，显示完成后关闭<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-19%20194247.png"><br>解压线刷包，miflash中点击选择，选择刚解压的线刷包文件夹<br>点击加载设备，让工具识别到设备，识别到了点击刷机等待进度条跑完。如未识别到设备请检测驱动是否安装。<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-19%20194312.png"><br>进度条跑完后手机会自动重启，此时即更新完成</p><h1 id="刷入PostmarketOS-Linux"><a href="#刷入PostmarketOS-Linux" class="headerlink" title="刷入PostmarketOS Linux"></a>刷入PostmarketOS Linux</h1><h2 id="下载附件-1"><a href="#下载附件-1" class="headerlink" title="下载附件"></a>下载附件</h2><p>请下载以下刷机包和附件</p><p>红米2全系PostmarketOS下载：<a href="https://images.postmarketos.org/bpo/edge/xiaomi-wt88047/phosh">https://images.postmarketos.org/bpo/edge/xiaomi-wt88047/phosh</a><br>ADB，recovery，lk2nd等文件的下载地址：<a href="https://www.123pan.com/s/mIXlVv-I7PB.html">https://www.123pan.com/s/mIXlVv-I7PB.html</a> 提取码:sumi</p><h2 id="开始刷入PostmarketOS"><a href="#开始刷入PostmarketOS" class="headerlink" title="开始刷入PostmarketOS"></a>开始刷入PostmarketOS</h2><p>首先长按电源键+音量下键将红米2进入Fastboot，并且使用数据线与电脑连接</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-19%20194026.png"></p><p>解压adb工具，打开cmd，cd到adb目录<br>刷入fastboot device检测设备<br>出现<code>xxxxxxxx  fastboot</code>即成功识别设备</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-19%20194328.png"></p><p>输入<code>fastboot flash recovery “刚下载的rec.img的文件地址”</code>以刷入Recovery</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-19%20194045.png"></p><p>之后手机长按电源键+音量上键进入工程模式，选择recovery模式进入</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-19%20210211.png"></p><p>进入rec后点击settings，更改成简体中文<br>之后选择清除-高级清除，选择data、system、cache然后滑动清除进行格式化</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-19%20194108.png"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-19%20194140.png"></p><p>之后选择格式化Data，输入yes清除，清除后按返回回到主界面</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-19%20194151.png"></p><p>选择重启-Bootloader模式进入线刷模式</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-19%20194203.png"></p><p>打开cmd，cd到adb目录<br>输入<code>fastboot flash boot “刚下载的lk2nd.img的文件地址”</code>以刷入引导文件</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-19%20194003.png"></p><p>输入后fastboot reboot回车进入lk2nd</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-19%20210821.png"></p><p>输入以下命令刷入内核和rootfs</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fastboot flash boot “刚下载的boot.img的文件地址”</span><br><span class="line">fastboot flash userdata “刚下载的rootfs.img的文件地址”</span><br></pre></td></tr></table></figure><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-19%20210752.png"></p><p>刷入后输入fastboot reboot回车或者单击手机电源键即可进入PostmarketOS系统啦！</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>系统默认密码为：147147<br>由于postmarketOS基于alpine而并非常见发行版，软件源生态匮乏，建议使用flatpak安装部分软件</p><h2 id="部分截图"><a href="#部分截图" class="headerlink" title="部分截图"></a>部分截图</h2><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/IMG_2290.jpg"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/IMG_2289.jpg"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/IMG_2275.jpg"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/IMG_2274.jpg"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed@main/top/huang233893/imgs/blog/IMG_2291.jpg"></p><h2 id="视频版"><a href="#视频版" class="headerlink" title="视频版"></a>视频版</h2><iframe class="bilibili" src="//player.bilibili.com/player.html?isOutside=true&aid=785369943&bvid=BV1E14y1m7xg&cid=1177972746&p=1&autoplay=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%90%9E%E6%9C%BA%E7%B1%BB/">搞机类</category>
      
      <category domain="https://www.sumi233.top/categories/%E6%90%9E%E6%9C%BA%E7%B1%BB/%E6%95%99%E7%A8%8B%E7%B1%BB/">教程类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%B3%BB%E7%BB%9F/">系统</category>
      
      <category domain="https://www.sumi233.top/tags/%E5%88%B7%E6%9C%BA/">刷机</category>
      
      <category domain="https://www.sumi233.top/tags/%E6%95%99%E7%A8%8B/">教程</category>
      
      
      <comments>https://www.sumi233.top/%E6%95%99%E7%A8%8B/redmi2linux/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>使用CloudFlare加速Github Pages</title>
      <link>https://www.sumi233.top/%E6%95%99%E7%A8%8B/dnscloudflare/</link>
      <guid>https://www.sumi233.top/%E6%95%99%E7%A8%8B/dnscloudflare/</guid>
      <pubDate>Sat, 02 Aug 2025 09:24:13 GMT</pubDate>
      
      <description>使用CloudFlare CDN进行加速您的github pages</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>由于Github服务器在国外，导致国内用户总是打不开基于Github Pages的网站（或者抽风），于是在网上翻查了下，发现可以使用CloudFlare CDN进行加速，虽然服务器也在国外，但也好过没有（DOGE。</p><h1 id="准备事项"><a href="#准备事项" class="headerlink" title="准备事项"></a>准备事项</h1><ul><li>一个正常使用的域名</li><li>已经搭建好的GitHub Pages，并且绑定上域名</li><li>灵活的脑子和手</li></ul><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><div calss="anzhiyu-tag-link"><a class="tag-Link" target="_blank" href="https://dash.cloudflare.com/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style>          <i class="anzhiyufont anzhiyu-icon-link" style></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">Cloudflare</div>            <div class="tag-link-sitename">Cloudflare注册链接</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p>打开cloudflare官网，进行注册。注册后点击右上角添加——连接域，输入你的主域名，默认选项继续。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/cloudflaredns%20(1).png"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/cloudflaredns%20(2).png"></p><p>之后选择Free版计划，下一步会跳转到DNS记录。新增四个记录，类型为A，勾选代理，名称填写子域名，如要作为网站使用的域名为<code>www.xxxx.top</code>那子域名就是<code>www</code>，ipv4地址分别如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">185.199.108.153</span><br><span class="line">185.199.109.153</span><br><span class="line">185.199.110.153</span><br><span class="line">185.199.111.153</span><br></pre></td></tr></table></figure><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/cloudflaredns%20(3).png"></p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/cloudflaredns%20(6).png"></p><p>之后点击激活，会显示出两个cloudflare的专用解析DNS地址，去域名运营商那修改DNS服务器<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/cloudflaredns%20(4).png"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/cloudflaredns%20(5).png"><br>等待运营商域名刷新后就大功告成啦！</p><h2 id="小贴士"><a href="#小贴士" class="headerlink" title="小贴士"></a>小贴士</h2><ul><li>域名的DNS修改后，整个域名的DNS解析功能将会迁移至CloudFlare，建议使用单独的域名食用或在cloudflare上重新解析其他子域名记录</li></ul>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%95%99%E7%A8%8B%E7%B1%BB/">教程类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      
      <comments>https://www.sumi233.top/%E6%95%99%E7%A8%8B/dnscloudflare/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>每一步都是意外之外！荣耀平板5 10.1英寸版本的各种折腾 （总结篇）</title>
      <link>https://www.sumi233.top/%E5%88%B7%E6%9C%BA/Agassi2-W09BHN/</link>
      <guid>https://www.sumi233.top/%E5%88%B7%E6%9C%BA/Agassi2-W09BHN/</guid>
      <pubDate>Thu, 26 Dec 2024 12:21:46 GMT</pubDate>
      
      <description>每一步都是意外之外！荣耀平板5 10.1英寸版本的各种折腾 （总结篇）</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>三天前，我在闲鱼相中了一台荣耀平板5 10英寸，并且以155的低价购入屏幕带线版，当时卖家是说除了屏幕顶上有线其他正常，结果到手三天意外就发生了，屏幕直接被被竖纹给霸占，找商家追诉，返了55块<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(29).jpg" alt="01"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(26).jpg" alt="02"></p><p>小嘴一句，这个卖家本来还不想理我，直接未读但闲鱼在线，还把简介的非质量问题改成了不退不换，想耍闲鱼小花招，没门！我直接给他甩追差评+投诉+拉黑小连招，让卖家怂的返了一部分的钱款<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(24).jpg" alt="03"></p><h1 id="麒麟659在鸿蒙下"><a href="#麒麟659在鸿蒙下" class="headerlink" title="麒麟659在鸿蒙下"></a>麒麟659在鸿蒙下</h1><p>真的好卡！！！！！！我已经不能用言语形容卡顿，是那种没法正常用的卡顿，鸿蒙的对于老机型的优化真的很垃圾，我不明白套壳emui9为什么还能这么卡，在鸿蒙下没装软件滑动桌面都会卡，更别说了装了软件了，我还跑了个娱乐兔跑分，这颗u跑分在14-15w分左右，和625不分伯仲，但是这个价位要什么自行车？&#x2F;doge<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(1).jpg" alt="04"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(2).jpg" alt="05"></p><h1 id="降级"><a href="#降级" class="headerlink" title="降级"></a>降级</h1><h2 id="官方渠道无法正常降级"><a href="#官方渠道无法正常降级" class="headerlink" title="官方渠道无法正常降级"></a>官方渠道无法正常降级</h2><p>OKOK扯远了，回到正题，于是我就开启了我的难崩降级之旅，因为华为的解bl和刷机嘛，需要在emui下实现，所以得从鸿蒙降级下来。<br>华为也很鸡贼，明明之前说好升了鸿蒙可以随便降回emui，但是从Harmony Next之后，华为就取消了所以老机型的降级通道，这意味着唯一的官方通道被彻底覆灭，我也尝试过像代理降级的办法，都是无法正常降级的</p><h1 id="三键强刷"><a href="#三键强刷" class="headerlink" title="三键强刷"></a>三键强刷</h1><p>所幸，我在万维论坛找到了高维禁用的emui9强刷包，食用方法也很简单：</p><ul><li><p>下载之后直接解压dload放在sd卡目录（一定是sd卡或者otg，不能是内部存储）</p></li><li><p>然后打开系统自带的计算器输入()()2846579()()进入工程菜单</p></li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(3).jpg" alt="06"></p><ul><li>选择软件升级——存储卡升级，平板就会重启到rec自动降级emui9.1了</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(27).jpg" alt="07"></p><ul><li><p>注：由于万维论坛的注册是邀请制，并且限制分享，所以要强刷包下载链接的可以点击右下角三个选项中间的小气泡按钮找我要链接下载</p></li><li><p>也可以使用代理法降级EMUI9（只能降最新的EMUI9.1），这里就不细说了，网上有很多教学视频</p></li></ul><h2 id="Bingo"><a href="#Bingo" class="headerlink" title="Bingo"></a>Bingo</h2><p>恭喜你完成第一步，降级EMUI9，降完级你会得到一个可以正常使用流畅度也还行的麒麟659设备<br>（本来想降EMUI8的，但是官方彻底关降级通道了）</p><h1 id="拆机解锁BL"><a href="#拆机解锁BL" class="headerlink" title="拆机解锁BL"></a>拆机解锁BL</h1><p>但是还不够，我的终极目标是解锁BL刷入LineageOS GSI！达到真正的流畅使用！</p><h2 id="拆机"><a href="#拆机" class="headerlink" title="拆机"></a>拆机</h2><p>本来是没那么早拆机的，但是因为屏幕迫使我的好奇心一看究竟。<br>我讲下我的方法吧（过程全错，结果全对doge）</p><p>需要的材料：吹风机、热风枪或者拆机台，镊子一个，翘机片若干，刀片x1</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ul><li>首先拿吹风机调热风或者热风枪调低温，有那个拆机台加热也可以，加热下屏幕四周，一定要热够时间！！！！而且要热一边拆一边，原装屏幕胶很黏，不热拆不下来（不然会像我一样，死活拆不下来，用刀片割胶）</li><li>然后用刀片插进屏幕缝隙里翘翘，要慢慢来，不要心急，不要翘成下面的塑料支架，也别妄想从塑料支架上手（深刻的教训呜呜呜，塑料支架里面有螺丝固定）。翘的时候不要刀片朝屏幕方向刮翘，本人亲测会把屏幕边框刮掉色（血的教训呜呜呜！）</li><li>如果觉得难拆就用翘片顶着刀片刮开松的地方，划过去，只要不刮到屏幕，使劲造，因为屏幕胶很厚，而且屏幕边底下是塑料支架，只要不要刮太深基本上刮不到里面的东西（指纹键除外，这个要注意不要把指纹键边上的玻璃搞断了）</li><li>四个边都撬开就可以拿起屏幕了，到这里其实差不多了。但是因为要短接，屏幕挂着短接很麻烦，我的建议是可以把屏幕拆下来。<br>拧下三颗螺丝拆下挡着电池排线和屏幕排线的盖板，把屏幕排线断开拆屏幕就完成了！<br>由于拆机拆得太入迷了，所以只有拆完的图片doge</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(19).jpg" alt="25"></p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(7).jpg" alt="26"></p><h2 id="解锁BL"><a href="#解锁BL" class="headerlink" title="解锁BL"></a>解锁BL</h2><p>先下载链接里面的工具</p><div calss="anzhiyu-tag-link"><a class="tag-Link" target="_blank" href="https://www.123684.com/s/mIXlVv-LEOB">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style>          <i class="anzhiyufont anzhiyu-icon-link" style></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">123PAN</div>            <div class="tag-link-sitename">刷机工具</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p>提取码:1234</p><ul><li><p>先过开机向导</p></li><li><p>打开自带计算器输入()()2846579()() 进入工程菜单<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(3).jpg" alt="08"></p></li><li><p>选择 后台设置——usb端口设置——选择生产模式</p></li><li><p>安装华为的COM1.0驱动</p></li><li><p>将设备关机，用镊子短接COM1.0刷机点和屏蔽罩，一边刷机点，一边屏蔽罩，然后插入数据线，具体短接点可以参考酷安@孙子烧烤 大佬给出的短接截图</p></li><li><p>设备管理器中出现COM1.0设备就是成功进入啦<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(28).jpg" alt="09"></p></li><li><p>打开PotatoNV ，Target device选择刚刚的端口，Bootloader选择Kirin 65X（A），勾引Disable Fblock（关闭工厂解锁，使用用户级解锁，这是因为华为将BL解锁划分成了工程解锁和用户解锁，工程解锁可以访问全部分区，用户级则是system啥的普通分区，不建议使用工程解锁，把其他分区搞坏了没备份修复很麻烦）<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(4).png" alt="10"></p></li><li><p>选择start开始解锁！</p></li><li><p>不一会就会解锁完成自动重启，软件也会显示解锁码，一定要妥善保存，升降EMUI有概率会自动锁上<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(2).png" alt="11"></p></li><li><p>解锁之后每次开机有提示是正常的，等五秒或者按电源键继续就行<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(11).jpg" alt="12"></p></li></ul><p>至此，荣耀平板5的解锁BL就到这里了</p><h1 id="刷入LineageOS-GSI"><a href="#刷入LineageOS-GSI" class="headerlink" title="刷入LineageOS GSI"></a>刷入LineageOS GSI</h1><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><ul><li>平板和稳定的数据线</li><li>基于Phh的类原生GSI。尽量不高于安卓12、13，高版本安卓比较卡顿，EMUI8选择Aonly分区的，EMUI9以后请选择A&#x2F;B分区。（别问其他OEM GSI和SGSI能不能开机，答案是不能，原因应该是内核宽容）</li><li>Magisk 24以上，类原生需要24以上</li><li>麒麟盘古工具箱（可以前往酷安@某贼 大佬那下载）</li><li>一双灵巧的手（刚刚都完成拆机了应该不会不巧了吧&#x2F;doge）<br>准备好了让我们开始吧！</li></ul><h2 id="开始刷机"><a href="#开始刷机" class="headerlink" title="开始刷机"></a>开始刷机</h2><p>按住电源 + 音量上进入Fastboot 数据线链接电脑<br>解锁BL（这步前面搞完的可以直接跳过）,使用盘古工具箱解锁BL，平板有提示按音量上然后按电源键确认解锁。解锁了会自动重启格式化，格式化失败是正常滴，直接强制重启再次进Fastboot就行<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(13).jpg" alt="13"></p><p>使用盘古工具箱刷入奇兔通用REC<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(5).jpg" alt="14"></p><p>重启平板,到警告页面的时候长按电源+ 进入eREC<br>选择格式化，输入yes进入REC（由于华为设备系统分区的特殊性，双rec，这一步的目的是以格式化的名义欺骗eREC进入真正的rec，实际上并不会执行格式化命令）<br>-然后就进入奇兔rec啦！<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(14).jpg" alt="15"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(15).jpg" alt="16"></p><p>选择清除，高级选项<br>勾选内置存储，Data，System，Cache，Dalvik&#x2F;ART Cache。滑动清除分区<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(16).jpg" alt="17"></p><p>完事儿后，回到主页面，重启，重启到Bootloader<br>打开盘古工具箱，选择刷入自定义系统镜像，拖入下载的GSI，等待刷机完成<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(4).jpg" alt="18"></p><p>刷完后，重启等开机。Enjoy it! :)<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(12).jpg" alt="19"></p><h2 id="刷入Magisk"><a href="#刷入Magisk" class="headerlink" title="刷入Magisk"></a>刷入Magisk</h2><p>注：由于GSI SAR分区的特殊性，刷入Magisk会丢失REC，原来REC的分区会被Magisk用来引导带Root的系统</p><ul><li><p>从盘古工具箱提取出来奇兔rec镜像，和Magisk一起传进平板<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(1).png" alt="20"></p></li><li><p>平板安装Magisk，完成后打开</p></li><li><p>点击右边的安装——安装到rec-选择一个文件修补然后选择刚刚的奇兔镜像进行修补就行啦<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(10).jpg" alt="21"></p></li><li><p>等输出显示All Done！后，链接电脑把平板内置存储Download目录的修补镜像导出电脑</p></li><li><p>然后将平板进入Fastboot</p></li><li><p>打开盘古工具箱选择刷入自定义REC拖入刚刚的rec镜像路径，回车等待刷入完成<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/honorpad5%20(9).jpg" alt="22"></p></li><li><p>刷入完成后盘古工具箱选择重启</p></li><li><p>出现启动警告页面后长按三秒音量上键进入erec</p></li><li><p>选择格式化，输入yes，诱骗erec进入root后的系统</p></li><li><p>打开Magisk，如果有提示修补选重启修补就行<br>Magisk到这里就刷完啦！这篇教程也快到尾声啦，俺还是第一次写这么长的文章，如果有文笔不仔细的地方，请各位见谅！</p></li></ul>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%90%9E%E6%9C%BA%E7%B1%BB/">搞机类</category>
      
      <category domain="https://www.sumi233.top/categories/%E6%90%9E%E6%9C%BA%E7%B1%BB/%E6%95%99%E7%A8%8B%E7%B1%BB/">教程类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E5%88%B7%E6%9C%BA/">刷机</category>
      
      <category domain="https://www.sumi233.top/tags/%E7%8E%A9%E6%9C%BA/">玩机</category>
      
      
      <comments>https://www.sumi233.top/%E5%88%B7%E6%9C%BA/Agassi2-W09BHN/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>MacOS X 10.0 Developer Preview 3安装教程（附酥米的MacOS的小记说说）</title>
      <link>https://www.sumi233.top/%E6%95%99%E7%A8%8B/MacOSXDP3install/</link>
      <guid>https://www.sumi233.top/%E6%95%99%E7%A8%8B/MacOSXDP3install/</guid>
      <pubDate>Tue, 26 Nov 2024 11:17:13 GMT</pubDate>
      
      <description>MacOS X 10.0 Developer Preview 3安装教程（附酥米的MacOS的小记说说）</description>
      
      
      
      <content:encoded><![CDATA[<h3 id="前记"><a href="#前记" class="headerlink" title="前记"></a>前记</h3><p>在MacOS X之前的MacOS，是属于Classic系列的传统操作系统，由于历史包袱的原因，MacOS Classic对多任务的支持并不完善，采用的是基于程序的协作式多任务管理，把内存依托于应用程序分配，再且加上Classic中并没有所谓的内存保护，导致程序和系统处在同一内存空间中，这就导致一个问题，当程序发生崩溃时，整个系统也会随之崩溃。</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(1).jpg" alt="MacOS Classic"></p><p>Apple尝试过修复或者完善这些“烂摊子”，但是由于系统历史包袱原因，系统框架过于老旧。再是后期推出的的系统扩展，系统扩展由第三方或官方提供，可以扩展系统功能或者添加驱动，这就导致一个问题，因为Classic所有的应用扩展驱动系统都是在一个空间内，没有进行隔离，如果扩展冲突或者报错，机子将会连系统一起’宕机‘。</p><h3 id="转折"><a href="#转折" class="headerlink" title="转折"></a>转折</h3><p>苹果也陆陆续续尝试过如copland和AU&#x2F;X的全新内核的系统，但无一例外，都失败了。直到1997年，苹果收购NeXT公司，被遣退的乔布斯带着NeXTSTEP回到苹果掌舵，NeXTSTEP是乔布斯基于Mach和BSD研发的操作系统，具有完善的GUI，面向对象和Objective-C，强大的多媒体功能，这在当时是十分超前的的。苹果基于NeXTSTEP开发出了现MacOS X Darwin的前身XNU混合内核，之后在1997年中发布了Rhapsody预览开发版，这就是MacOS X的前身……</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(2).jpg" alt="NeXTSTEP"></p><p>之后的事情大家都知道，Rhapsody的大部分组件大幅度得到保留并且逐步完善，并且一步步成为现在的MacOS系统。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>好啦！酥米扯远了，接下来要体验的版本就是初代MacOS X10.0的预览版本DP3，说起这个预览版本还是很有趣的，DP1和DP2和Rhapsody差不多，用的也是Platinum的界面，还是NeXT+MacOS Classic的味道。但是来到DP3，事情将会截然不同起来，DP3引入了全新的Aqua界面，提升了系统的精致程度（顺带提一嘴，这个aqua界面修修补补用到现在的MacOS最新版）</p><h4 id="Qemu"><a href="#Qemu" class="headerlink" title="Qemu"></a>Qemu</h4><p>这次我们使用Qemu-system-ppc进行模拟安装<br>镜像可以在WinWorldPC中下载<br>下载链接：</p><div calss="anzhiyu-tag-link"><a class="tag-Link" target="_blank" href="http://www.emaculation.com/forum/viewtopic.php?f=34&t=9028">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style>          <i class="anzhiyufont anzhiyu-icon-link" style></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">WinWorldPC</div>            <div class="tag-link-sitename">镜像下载链接</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p>首先将qemu-system-pc解压在目录，然后编写一个Bat脚本用于启动qemu虚拟机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">qemu-system-ppc.exe ^</span><br><span class="line">-L pc-bios ^</span><br><span class="line">-M g3beige ^</span><br><span class="line">-cpu G3 ^</span><br><span class="line">-m 512 ^</span><br><span class="line">-drive file=mac.img,format=raw,media=disk ^  ##虚拟磁盘地址，可以通过qemu-img创建，需8g以上</span><br><span class="line">-drive file=Mdp2.iso,format=raw,media=cdrom ^ ## 安装镜像地址</span><br><span class="line">-prom-env &quot;vga-ndrv?-true&quot; ^</span><br><span class="line">-prom-env &quot;boot-device=cd:9,\\:tbxi&quot; ^</span><br><span class="line">-usb ^</span><br><span class="line">-netdev user,id=network01 -device sungem,netdev=network01 ^</span><br><span class="line">-device VGA,edid=on ^</span><br><span class="line">-boot c</span><br></pre></td></tr></table></figure><h4 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h4><p>由于DP版本没有磁盘管理工具，所以需要借助MacOS9的启动光盘进行分区,按照图中进行操作就行</p><ul><li>打开磁盘分区工具</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/082c7e3d-a76a-44da-94b3-561fed6a306d933d5c1c097fe20b.png"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/b3bede69-ba0e-4ab7-b395-6fca629d892d64f4b84c3853ac43.png"></p><ul><li>选中刚刚的虚拟磁盘，点击Initialize</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(5).png"></p><ul><li>再次选择Initialize</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/4d88753e-b7e5-4d36-b6d3-2dddf21b055d87520d3fb48e80d7.png"></p><p>至此磁盘的分区步骤全部完毕，接下来就是安装系统啦！</p><h3 id="正式安装"><a href="#正式安装" class="headerlink" title="正式安装"></a>正式安装</h3><ul><li>将虚拟机关机，更换光盘镜像，再次启动虚拟机，等待开机……</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(13).png"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/288631E8586752E8507D5DCC3B077CF7b3b611b98f705add.png"></p><ul><li>选择Continue继续</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(19).png"></p><ul><li>选择下一步并且Agree</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(16).png"></p><ul><li>然后选择硬盘下一步</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(3).png"></p><ul><li>然后按install进行安装</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(12).png"></p><ul><li>安装ing……</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/754908397BAF9C1028F57134BAA3C458600fdd045b1f72b8.png"></p><ul><li>安装完成啦！不要让模拟器自动重启哦，直接关闭模拟器，进行下一步操作</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/55abc630-feb1-4a66-b2b4-b89de93c2a30fb098cd1894a107a.png"></p><h4 id="正式启动前的最后配置"><a href="#正式启动前的最后配置" class="headerlink" title="正式启动前的最后配置"></a>正式启动前的最后配置</h4><ul><li>将虚拟机启动脚本的下列稍加修改，让模拟器使用硬盘启动</li></ul><p>修改前</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-boot c # 启动设备</span><br><span class="line">-prom-env &quot;boot-device=cd:9,\\:tbxi&quot; ^ # 指定启动设备</span><br></pre></td></tr></table></figure><p>修改后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-boot d #把c改成d，d为硬盘启动，c为从光盘启动</span><br><span class="line"># 去掉了指定启动设备语句</span><br></pre></td></tr></table></figure><ul><li>再次打开模拟器，就可以慢慢等待模拟器启动啦！</li><li>进系统啦！第一次安装完会弹出设置助理</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(21).png"></p><ul><li>点击右下角的箭头下一步</li><li>这里输入管理员的密码，然后下一步</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(20).png"></p><ul><li>这里网络设置直接跳过，选择下一步</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(22).png"></p><ul><li>这里直接下一步</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(9).png"></p><ul><li>这里是DNS和域名设置，不设置直接下一步</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(18).png"></p><ul><li>这里是远程登录，可开可不开，选完直接下一步</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(2).png"></p><ul><li>地区设置</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(17).png"></p><ul><li>时间设置</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(4).png"></p><ul><li>用户设置，选择Add可以创建用户</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(11).png"></p><ul><li>自动登录，可以选择自动并且输入账户密码，可选可不选</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(15).png"></p><ul><li>设置预览，没有问题就可以选择go ahead继续啦</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(10).png"></p><h4 id="完成安装啦！"><a href="#完成安装啦！" class="headerlink" title="完成安装啦！"></a>完成安装啦！</h4><ul><li>重启之后就可以享受新界面带来的赏心悦目了，Enjoy it! :)<br>附上一些系统截图</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/396F014F493B905FD9C40FFB95F1E9C242d67356d36b8391.png"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(8).png"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(1).png"><br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/macosxdp%20(14).png"></p><h3 id="视频版"><a href="#视频版" class="headerlink" title="视频版"></a>视频版</h3><h4 id="本教程根据视频版编写"><a href="#本教程根据视频版编写" class="headerlink" title="本教程根据视频版编写"></a>本教程根据视频版编写</h4><iframe class="bilibili" src="//player.bilibili.com/player.html?isOutside=true&aid=959704963&bvid=BV1rp4y1u7ep&cid=1298459925&p=1&autoplay=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%95%99%E7%A8%8B%E7%B1%BB/">教程类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%B3%BB%E7%BB%9F/">系统</category>
      
      <category domain="https://www.sumi233.top/tags/%E8%8B%B9%E6%9E%9C/">苹果</category>
      
      
      <comments>https://www.sumi233.top/%E6%95%99%E7%A8%8B/MacOSXDP3install/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>酥米的碎碎念（1）</title>
      <link>https://www.sumi233.top/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B51/</link>
      <guid>https://www.sumi233.top/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B51/</guid>
      <pubDate>Fri, 22 Nov 2024 01:18:32 GMT</pubDate>
      
      <description>酥米关于竞赛队的碎碎念</description>
      
      
      
      <content:encoded><![CDATA[<h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><p>唉 ……最近好纠结啊，自从去年加入竞赛队以来，由于我的性格原因（不太喜欢一直呆在一个地方），感觉哪哪都不舒服，学习竞赛内容时也不太得劲，老是集中不到精力，因为我是在网搭竞赛队嘛，而且我是负责网络部分的，每当我看到满当的市赛题题目，会产生一种恐惧感，甚至之前我自己都没意识到这样的感觉，久而久之，想退队的感觉也越来越强烈，我不再把全部身心投入到竞赛，而是带了一种摆烂性质的态度在学习内容。</p><p>直到10月底，老师确定了具体的竞赛日期，是12.7-12.27左右竞赛，并且竞赛改革了，是三位同学一队去参加嘛（我被分到了二队），然后三个同学分工合作设计方案并且把方案实操出来。我本想和两位队友一起努力努力，市赛拿个三等奖啥的，然后我自己申请退队，回到教室学习。</p><h3 id="意外之外"><a href="#意外之外" class="headerlink" title="意外之外"></a>意外之外</h3><p>没想到，才过了一周不到，老师就告诉我们，我们这个项目没有开市赛，而是得等明年的省赛，于是我原来的打算也破裂了。而且最近考了期中考试，我的三科语文英语还好，但是数学已经低的不能再低了，三科总分450，我加起来才210分左右，退步很明显，我意识到我不能再这么下去了，下一年3+证书考试如果考不好真的连公办大专都没得上了。<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/173224034086565091be367247aa6.png" alt="成绩图" title="成绩图"></p><p>唉！我现在真的好纠结，是等明年的市赛，才是抽身退队回教室学习？或者说还有什么别的办法吗？</p>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95%E7%B1%BB/">个人记录类</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E9%95%BF%E7%AF%87%E7%A2%8E%E7%A2%8E%E5%BF%B5/">长篇碎碎念</category>
      
      
      <comments>https://www.sumi233.top/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E9%85%A5%E7%B1%B3%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B51/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>DHCP协议详解和配置</title>
      <link>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20DHCP%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3%E5%8F%8A%E9%85%8D%E7%BD%AE/</link>
      <guid>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20DHCP%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3%E5%8F%8A%E9%85%8D%E7%BD%AE/</guid>
      <pubDate>Thu, 21 Nov 2024 01:01:46 GMT</pubDate>
      
        
        
      <description>&lt;meta name=&quot;referrer&quot; content=&quot;no-referr</description>
        
      
      
      
      <content:encoded><![CDATA[<meta name="referrer" content="no-referrer"><h2 id="DHCP实施背景"><a href="#DHCP实施背景" class="headerlink" title="DHCP实施背景"></a>DHCP实施背景</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729165474365-eb0dcff1-1d39-4423-8a7f-d50f6cccc494.png"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li>Dynamic Host Configuration Protocol</li><li>基于UDP协议 端口67及68</li><li>bootPC:67（客户端端口号）；bootPS：68（服务端端口号）</li></ul><h2 id="传输方式"><a href="#传输方式" class="headerlink" title="传输方式"></a>传输方式</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729166164894-3746dc53-16a4-4763-89f7-d07c779b2eae.png"></p><h2 id="DHCP中继问题"><a href="#DHCP中继问题" class="headerlink" title="DHCP中继问题"></a>DHCP中继问题</h2><h3 id="案例一"><a href="#案例一" class="headerlink" title="案例一"></a>案例一</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729498106851-c554df3c-3861-47ee-b981-06b274a46d00.png"></p><ul><li>PC客户端与DHCP server不在同一个网段PC发出的广播DHCP discover包到达三层设备被三层接口丢弃，因此数据无法到达DHCP服务器</li></ul><h3 id="案例二"><a href="#案例二" class="headerlink" title="案例二"></a>案例二</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729498165849-924f9898-3555-4794-99e5-54ee26ea93f9.png"></p><ul><li>在三层交换机(或路由器)上部署DHCP中继，使得DHCPserver能够收到Discover消息</li></ul><h3 id="案例三"><a href="#案例三" class="headerlink" title="案例三"></a>案例三</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1729498256138-90c814b3-f678-4c44-8db8-3b81f95deabb.jpeg"></p><p><code>cisco(config-if)# ip helper-address _address_</code></p><ul><li>激活中继功能，并为UDP广播包设置中继目标IP(单播包的目标IP地址)</li><li>注意是在接口上配置，该接口为沿途阻挡该广播消息的第一个接口</li></ul><p><code>cisco(config)# ip forward-protocol &#123; udp [ port ]&#125;</code></p><ul><li>选择被中继的协议(可选)</li></ul><h3 id="注意事项1"><a href="#注意事项1" class="headerlink" title="注意事项1"></a>注意事项1</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729498637688-ede34ac4-38ae-472e-98e0-44d3c9108741.png"></p><p><code>cisco(config)# interface vlan 10</code></p><p><code>cisco(config-if)# ip helper-address 192 168.200.200</code></p><h3 id="注意事项2"><a href="#注意事项2" class="headerlink" title="注意事项2"></a>注意事项2</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729498803330-8cc66a37-1efb-4664-8343-02bccde28ebf.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">interface fast0/0</span><br><span class="line">ip helper-address 10.1.1.200</span><br><span class="line">ip helper-address 10.1.2.200</span><br><span class="line">ip helper-address 10.1.2.201</span><br><span class="line">!!每个地址都会发送一个单播</span><br></pre></td></tr></table></figure><h2 id="Relay-Agent-Option-Support"><a href="#Relay-Agent-Option-Support" class="headerlink" title="Relay Agent Option Support"></a>Relay Agent Option Support</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729498968783-22fd05b0-fe27-4135-ae7d-8748bb83d552.png"></p><ul><li>发送广播</li><li>Option82插入remoteID及circuitID</li><li>如果识别option82，则查看插入的option值</li><li>除去option字段，实施策略，将IP分配给client</li><li>基于option值，返回IP address及策略</li></ul><h2 id="DHCP配置"><a href="#DHCP配置" class="headerlink" title="DHCP配置"></a>DHCP配置</h2><h3 id="手工配置"><a href="#手工配置" class="headerlink" title="手工配置"></a>手工配置</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729499528933-45786e82-4126-41d6-9cf8-54dc67e32103.png"></p><ul><li>手动绑定是手动映射到DHCP数据库中的主机的MAC地址的IP地址。手动绑定存储在DHCP服务器上的NVRAM中</li><li>绑定只是特殊的地址池。手动绑定数量没有限制，但每个主机池只能配置一个手动绑定的配置池</li></ul><p><code>ip dhcp pool BIND</code></p><p><code>host 192.168.1.111 255.255.255.0</code></p><p><code>client-identifier unique-identifier</code></p><ul><li>DHCP clients require client identifiers. The unique identification ofthe client is specified in dotted hexadecimal notation, for example.01b7.0813.8811.66,where 01 represents the Ethernet media type.（DHCP客户端需要客户端标识符。客户端的唯一标识符用点十六进制表示法指定，例如01b7.0813.8811.66，其中01表示以太网介质类型。）</li><li>也可以在服务器上通过show ip dhcp bingding抓取客户端的client-identifier</li></ul>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%80%9D%E7%A7%91/">思科</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://www.sumi233.top/tags/CCNP/">CCNP</category>
      
      
      <comments>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20DHCP%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3%E5%8F%8A%E9%85%8D%E7%BD%AE/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>EtherChannal详解</title>
      <link>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20EtherChannel/</link>
      <guid>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20EtherChannel/</guid>
      <pubDate>Thu, 21 Nov 2024 01:01:46 GMT</pubDate>
      
        
        
      <description>&lt;meta name=&quot;referrer&quot; content=&quot;no-referr</description>
        
      
      
      
      <content:encoded><![CDATA[<meta name="referrer" content="no-referrer"><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729210282296-45cab1db-f0cb-412a-9681-ea25c5371e44.png"></p><ul><li>解决方案提供更多的带宽对类似链路进行逻辑聚合</li><li>看成一个逻辑链接</li><li>提供负载平衡和冗余支持</li><li>支持Switch ports和Routed ports</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729210552290-923b722e-fa59-400d-8ad0-01aeeb5febe7.png"></p><h2 id="PAgP-modes"><a href="#PAgP-modes" class="headerlink" title="PAgP modes"></a>PAgP modes</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729211184779-0808aa71-e83c-42d3-a943-ba7fa545e288.png"></p><ul><li>On通道成员不协商(无协议)</li><li>Desirable主动询问对方是否可以&#x2F;将</li><li>Auto被动等待对方询问</li><li>Off未在接口上配置的 EtherChannel</li></ul><h2 id="LACP-modes"><a href="#LACP-modes" class="headerlink" title="LACP modes"></a>LACP modes</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729211269400-1daba43d-af56-4eec-96ee-5d97aee5b79c.png"></p><ul><li>On通道成员不协商(无协议)</li><li>Active主动询问对方是否可以&#x2F;将</li><li>Passive被动等待对方询问</li><li>Off未在接口上配置的 EtherChannel</li></ul><h3 id="EtherChannel的配置"><a href="#EtherChannel的配置" class="headerlink" title="EtherChannel的配置"></a>EtherChannel的配置</h3><ul><li>选择用于Channel的端口</li><li>选择PAgP或LACP</li><li>在接口上配置channel-group<ul><li>设置channel-groupID</li><li>根据特定的协议，选择接口模式完成</li></ul></li><li>上述步骤后，逻辑的etherchannel接口就建立好了。<ul><li>可以进一步对这个逻辑的etherchannel接口进行配置</li></ul></li></ul><h2 id="EtherChannel的实施要点"><a href="#EtherChannel的实施要点" class="headerlink" title="EtherChannel的实施要点"></a>EtherChannel的实施要点</h2><ul><li><strong>Port-channel接口一旦建立完成后，就形成了一个个逻辑的接口，后续针对该接口的配置在port-channel逻辑接口中完成</strong></li><li><strong>最大支持8个端口做捆绑</strong></li><li><strong>Port-channel接口不能成为SPAN的目的接口</strong></li><li><strong>隶属于一个port-channel的物理接口需有相同的如下配置</strong><ul><li>相同的speed和duplex</li><li>相同的接口模式(access、trunk)</li><li>如果是trunk模式，那么native vlan及allowed vlan需相同</li><li>如果是access模式，所属vlan需相同</li></ul></li></ul><h2 id="EC的负载均衡"><a href="#EC的负载均衡" class="headerlink" title="EC的负载均衡"></a>EC的负载均衡</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729212993237-1a809b68-e3bc-4757-acee-38be5f7f66fe.png"> </p><ul><li>EtherChannel支持在同一个port-channel的链路中执行负载均衡</li><li>负载均衡动作可以基于MAC、端口、IP(源IP、目的IP或两者)</li><li>默认的行为:源目IP地址对(src-dst-ip)</li></ul><p><code>Switch(config)# port-channelload-balance type</code></p><p><code>Switch# show etherchannelload-balance</code></p><h2 id="EC的配置"><a href="#EC的配置" class="headerlink" title="EC的配置"></a>EC的配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)# int range f0/1 - 2#进入接口范围</span><br><span class="line">Switch(config-if-range)# switchport#将接口配置为二层接口</span><br><span class="line">Switch(config-if-range)# switchport trunk encapsulation dot1q#trunk封装协议为dot1q</span><br><span class="line">Switch(config-if-range)# switchport mode trunk#设置接口模式为Trunk模式</span><br><span class="line">Switch(config-if-range)# channel-protocol pagp/lacp</span><br><span class="line">Switch(config-if-range)# channel-group 1 mode desirable#配置etherchannel，ID为1，模式为desirable</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%80%9D%E7%A7%91/">思科</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://www.sumi233.top/tags/CCNP/">CCNP</category>
      
      
      <comments>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20EtherChannel/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>HSRP &amp; VRRP &amp; GLBP</title>
      <link>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20HSRP%20VRRP%20GLBP/</link>
      <guid>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20HSRP%20VRRP%20GLBP/</guid>
      <pubDate>Thu, 21 Nov 2024 01:01:46 GMT</pubDate>
      
        
        
      <description>&lt;meta name=&quot;referrer&quot; content=&quot;no-referr</description>
        
      
      
      
      <content:encoded><![CDATA[<meta name="referrer" content="no-referrer"><h2 id="技术背景"><a href="#技术背景" class="headerlink" title="技术背景"></a>技术背景</h2><ul><li>一旦网络网关或关键节点出现故障，将对业务造成灾难性故障</li><li>链路失效无法检测，业务稳定性受到威胁</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729500335707-435129c9-bd7e-4f38-b119-d5de25de2a06.png"></p><h2 id="HSRP部分"><a href="#HSRP部分" class="headerlink" title="HSRP部分"></a>HSRP部分</h2><h3 id="HSRP带来了什么？"><a href="#HSRP带来了什么？" class="headerlink" title="HSRP带来了什么？"></a>HSRP带来了什么？</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729509362499-499539a3-5928-4791-9d99-59e51b53948f.png"></p><ul><li>利用HSRP，一组路由器(同一个LAN中的接口)协同工作，但只有一个处于Active状态。在一个HSRP组内的多个路由器共用一个虚拟的IP地址，该地址被作为局域网内所有主机的缺省网关地址</li><li>HSRP决定哪个路由器被激活，该被激活的路由器负责接收发过来的数据包并进行路由。以及相应PC对于其网关的ARP请求</li><li>备份路由器侦听active路由器的状态，并准备随时接替Active router的工作</li></ul><h3 id="HSRP名词"><a href="#HSRP名词" class="headerlink" title="HSRP名词"></a>HSRP名词</h3><ul><li>HSRP路由器<ul><li>运行HSRP的路由器，一台HSRP路由器（的接口）可同时参与到多个HSRP组中，在不同的组中，一台HSRP路由器可以充当不同的角色</li></ul></li><li>HSRP组<ul><li>由多个HSRP路由器组成，属于同一HSRP组的HSRP路由器互相交换信息，每一组由一个组ID进行标识</li></ul></li><li>虚拟路由器<ul><li>对于每一个HSRP组，抽象出来的一个逻辑路由器，该路由器充当网络用户的网关</li></ul></li><li>虚拟IF地址、MAC地址<ul><li>用于标识虚拟的路由器，该地址实际上就是用户的默认网关</li><li>MAC地址为虚拟的</li></ul></li><li>Active、Standby路由器<ul><li>Active路由器：就是在HSRP组实际转发数据包的路由器，在每一个VRRP组中，仅有Active响应对虚拟IP地址的ARP请求</li><li>Standby路由器：就是在HSRP组中处于监听状态的路由器，一旦Active路由器出现故障，Standby路由器就开始接替工作</li><li>选举依据：HSRP接口优先级和接口IP地址（比大）</li></ul></li></ul><h3 id="虚拟路由器MAC地址"><a href="#虚拟路由器MAC地址" class="headerlink" title="虚拟路由器MAC地址"></a>虚拟路由器MAC地址</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729510085320-82db06f3-14f2-4a97-858e-175ce2ce09da.png"></p><ul><li>HSRP使用一个格式为： 0000.0c07.acxx的MAC作为虚拟路由器的MAC，其中xx是该HSRP组的组ID</li></ul><h3 id="Active-Standby-Router"><a href="#Active-Standby-Router" class="headerlink" title="Active &#x2F; Standby Router"></a>Active &#x2F; Standby Router</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729510204882-1d45a331-3678-400a-bbd7-2025306e8adc.png"></p><ul><li>Active Router<ul><li>响应底下PC对网关的ARP请求(使用虚拟MAC响应)</li><li>承担实际的流量转发任务</li><li>周期性发送Hello包以告知自己的存活情况</li></ul></li><li>Standby Router<ul><li>侦听Active router发送的hello包</li><li>当Active Router出现问题的时候接替它的位置，成为Active router</li></ul></li></ul><h3 id="HSRP状态机"><a href="#HSRP状态机" class="headerlink" title="HSRP状态机"></a>HSRP状态机</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729510296618-b22b16a8-8238-4639-94bf-3a9dbcb27855.png"></p><p>Initial（初始化状态）——Listen（学习状态）——Speak（发报状态【打招呼模式】）——Standby（坚守状态）——Active（活跃状态）</p><h3 id="HSRP-version"><a href="#HSRP-version" class="headerlink" title="HSRP version"></a>HSRP version</h3><ul><li>HSRP version1（默认）<ul><li>组ID范围：0-255</li><li>虚拟MAC：0000.0c07.acxx</li><li>Hello包发送到224.0.0.2</li></ul></li><li>HSRP version2（要看具体的IOS版本）<ul><li>组ID范围：0-4095</li><li>虚拟MAC：0000.0C9F。Fxxx</li><li>Hello包发送到224.0.0.102</li><li>HSRP v1及v2的报文类型不同</li><li>Standby 1 version 2</li></ul></li></ul><h3 id="HSRP的配置"><a href="#HSRP的配置" class="headerlink" title="HSRP的配置"></a>HSRP的配置</h3><h4 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729510472919-88f35300-8cdb-4884-a07c-ff8322cf0a63.png"></p><ul><li>接口HSRP优先级默认为100</li><li>要注意HSRP group ID必须一致、虚拟IP必须一致</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Interface fast0/0</span><br><span class="line">ip address 10.1.1.253 255.255.255.0</span><br><span class="line">no shutdown</span><br><span class="line">standby 1 ip 10.1.1.254#虚拟IP</span><br><span class="line">standby 1 priority 120#优先级</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Interface fast0/0</span><br><span class="line">ip address 10.1.1.252 255.255.255.0</span><br><span class="line">no shutdown</span><br><span class="line">standby 1 ip 10.1.1.254</span><br></pre></td></tr></table></figure><h4 id="HSRP-track"><a href="#HSRP-track" class="headerlink" title="HSRP track"></a>HSRP track</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729510845997-404129ea-46c6-4676-9a0b-55971f01f2a8.png"></p><ul><li>HSRP的track特性允许我们跟踪某个本地接口的up&#x2F;down，当接口down掉后，HSRP自动减去一个自定义的值，从而让standby设备顶上</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Interface fast0/0</span><br><span class="line">ip address 10.1.1.253 255.255.255.0</span><br><span class="line">no shutdown</span><br><span class="line">standby 1 ip 10.1.1.254</span><br><span class="line">standby 1 priority 120</span><br><span class="line">standby 1track serial 1/0 30</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Interface fast0/0</span><br><span class="line">ip address 10.1.1.252 255.255.255.0</span><br><span class="line">no shutdown</span><br><span class="line">standby 1 ip 10.1.1.254</span><br><span class="line">standby 1 preempt</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%80%9D%E7%A7%91/">思科</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://www.sumi233.top/tags/CCNP/">CCNP</category>
      
      
      <comments>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20HSRP%20VRRP%20GLBP/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>VLAN间的路由及三层交换机的部署</title>
      <link>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20VLAN%E9%97%B4%E7%9A%84%E8%B7%AF%E7%94%B1%E5%8F%8A%E4%B8%89%E5%B1%82%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E9%83%A8%E7%BD%B2/</link>
      <guid>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20VLAN%E9%97%B4%E7%9A%84%E8%B7%AF%E7%94%B1%E5%8F%8A%E4%B8%89%E5%B1%82%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E9%83%A8%E7%BD%B2/</guid>
      <pubDate>Thu, 21 Nov 2024 01:01:46 GMT</pubDate>
      
        
        
      <description>&lt;meta name=&quot;referrer&quot; content=&quot;no-referr</description>
        
      
      
      
      <content:encoded><![CDATA[<meta name="referrer" content="no-referrer"><h2 id="Q-A"><a href="#Q-A" class="headerlink" title="Q &amp; A"></a>Q &amp; A</h2><h3 id="如何满足不同VLAN的互访需求？"><a href="#如何满足不同VLAN的互访需求？" class="headerlink" title="如何满足不同VLAN的互访需求？"></a>如何满足不同VLAN的互访需求？</h3><ul><li>解决方案1：单臂路由</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729153334630-a8c6d042-08e1-4b43-87f8-aa6252bf8900.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729153355876-a7ca5fed-7f69-4e14-82d7-b5d7aa717043.png"></p><h2 id="路由-VS-交换的园区网结构"><a href="#路由-VS-交换的园区网结构" class="headerlink" title="路由 VS. 交换的园区网结构"></a>路由 VS. 交换的园区网结构</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729162997065-d2ea58a5-246a-44d6-925d-3b16b41a0532.png"></p><ul><li>在过去，交换是基于硬件的转发，而路由是基于软件的转发，因此园区网络更多的采用交换网络的设计</li><li>而如今，路由已经几乎与交换一样快，也能够基于硬件做转发，与此同时路由的设计很好的解决了交换网络的二层环路问题，以及LAN的隔离问题</li></ul><h2 id="Switch-Virtual-interface（SVI）"><a href="#Switch-Virtual-interface（SVI）" class="headerlink" title="Switch Virtual interface（SVI）"></a>Switch Virtual interface（SVI）</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729163085261-9648ecce-8584-479f-a56a-bf5679c5b3bf.png"></p><h2 id="SVI-autostate-exclude-command"><a href="#SVI-autostate-exclude-command" class="headerlink" title="SVI autostate exclude command"></a>SVI autostate exclude command</h2><ul><li>SVI口的Line-state在以下条件满足的情况下才会是UP<ul><li>SVI对应的VLAN必须在vlan database中存在并且是激活的</li><li>Vlan interface存在并且不能说administratively down的</li><li>必须至少有一个二层接口（SVI对于VLAN的access接口或者trunk口）是UP的，而且必须是spanning-tree的forwarding状态</li></ul></li><li>SVI autostate exclude特性可以让特定接口跳出上述up-and-down的计算过程，也就是说该接口的up down与SVI口的up down无关了</li></ul><p><code>Switch(config)# int f0/24</code></p><p><code>Switch(config-if)# switchport auto-state exclude</code></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729164827120-91130c8c-63de-4e8f-8628-0259875e2c44.png"></p><h2 id="交换机管理VLAN"><a href="#交换机管理VLAN" class="headerlink" title="交换机管理VLAN"></a>交换机管理VLAN</h2><h3 id="二层交换机的管理VLAN"><a href="#二层交换机的管理VLAN" class="headerlink" title="二层交换机的管理VLAN"></a>二层交换机的管理VLAN</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729165022772-166a0a14-8a04-4f1f-be6f-226ecbf1918a.png"></p><ul><li>交换机的管理VLAN用于交换机本身的设备管理</li><li>二层交换机只能有一个VLAN接口可以拥有IP地址，具体的VLAN可以根据实际需求选定</li><li>有了这个VLAN接口，PC就能够telnet到交换机上执行管理操作</li><li>用户VLAN与交换管理VLAN重叠会有什么问题？</li></ul><h3 id="三层交换环境的管理VLAN"><a href="#三层交换环境的管理VLAN" class="headerlink" title="三层交换环境的管理VLAN"></a>三层交换环境的管理VLAN</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729165215265-252a3155-b8c1-4065-9cc0-764a2291e798.png"></p><h2 id="三层交换机的端口模式"><a href="#三层交换机的端口模式" class="headerlink" title="三层交换机的端口模式"></a>三层交换机的端口模式</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729163463953-598b285c-b189-41f6-80b0-e3a5a7637588.png"></p><ul><li>二层接口：access模式，trunk模式</li><li>三层接口：路由接口（no switchport或称为routed port）、SVI接口</li></ul><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)# ip routing</span><br><span class="line">#开启三层交换机路由功能</span><br><span class="line"></span><br><span class="line">Switch(config)# vlan 10</span><br><span class="line">Switch(config-vlan)# name name</span><br><span class="line"># 创建VLAN</span><br><span class="line"></span><br><span class="line">Switch(config)# int vlan 10 </span><br><span class="line">Switch(config-Vlanif10)# ip add x.x.x.x mask </span><br><span class="line">Switch(config-Vlanif10)# no sh</span><br><span class="line">#配置VLAN对于SVI接口</span><br><span class="line"></span><br><span class="line">Switch(config)# int f0/1</span><br><span class="line">Switch(config-if)# no switchport</span><br><span class="line">Switch(config-if)# ip add x.x.x.x mask</span><br><span class="line">Switch(config-if)# no sh</span><br><span class="line">#配置no switchport（routed port）三层接口</span><br><span class="line"></span><br><span class="line">Switch(config)# ip route 0.0.0.0 0.0.0.0 x.x.x.x</span><br><span class="line">#配置静态路由</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%80%9D%E7%A7%91/">思科</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://www.sumi233.top/tags/CCNP/">CCNP</category>
      
      
      <comments>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20VLAN%E9%97%B4%E7%9A%84%E8%B7%AF%E7%94%B1%E5%8F%8A%E4%B8%89%E5%B1%82%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E9%83%A8%E7%BD%B2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>BGP详解</title>
      <link>https://www.sumi233.top/CCNP/CCNP%E8%B7%AF%E7%94%B1%20BGP/</link>
      <guid>https://www.sumi233.top/CCNP/CCNP%E8%B7%AF%E7%94%B1%20BGP/</guid>
      <pubDate>Thu, 21 Nov 2024 01:01:46 GMT</pubDate>
      
        
        
      <description>&lt;meta name=&quot;referrer&quot; content=&quot;no-referr</description>
        
      
      
      
      <content:encoded><![CDATA[<meta name="referrer" content="no-referrer"><h2 id="BGP概述"><a href="#BGP概述" class="headerlink" title="BGP概述"></a>BGP概述</h2><ul><li>BGP为BorderGateway Protgcol边界网关路由协议(路径矢量)</li><li>主要作用是在AS之间传递路由信息</li><li>目前BGR有4个版本:V1、V2、V4、V4+(即MBGP)</li><li>企业连接到SP<ul><li>连接到两家或是多家ISP，提供链路的可靠性，连接方式如下</li><li>1.Single homed单宿:只连接到一家ISP且没有冗余链路</li><li>2.Dualhomed双宿:只连接到一家ISP，使用两条链路来提供冗余</li><li>3.Multihomed多宿:连接到多家ISP</li><li>4.DualMultihomed双多宿:连接到多家ISP，同时使用两条链路</li></ul></li></ul><h2 id="使用BGP的三大理由"><a href="#使用BGP的三大理由" class="headerlink" title="使用BGP的三大理由"></a>使用BGP的三大理由</h2><ul><li>大量路由需要承载，IGP只能容纳千条，而BGP可以容纳上万</li><li>支撑MPLS&#x2F;VPN的应用，传递客户VPN路由</li><li>策略能力强，可以很好的实现路由决策与数据控制</li></ul><h2 id="IGP具有以下某些特性或者全部特性"><a href="#IGP具有以下某些特性或者全部特性" class="headerlink" title="IGP具有以下某些特性或者全部特性"></a>IGP具有以下某些特性或者全部特性</h2><ul><li>执行拓扑发现</li><li>尽力完成快速收敛</li><li>需要周期性的更新来确保路由选择信息的精准性</li><li>受同一个管理机构的控制</li><li>采取共同的路由选择策略</li><li>提供了优先的策略控制能力</li></ul><h2 id="关于BGP"><a href="#关于BGP" class="headerlink" title="关于BGP"></a>关于BGP</h2><ul><li>AS:autonomoussystem自治系统，指的是在同一个组织管理下使用相同策略的设备的集合</li><li>不同AS通过AS号区分，AS号取值范围1-65535，其中64512-65535是私有AS号。IANA负责AS号的分发。</li><li>中国电信163 AS号:4134</li><li>中国电信CN2 AS号:4809 </li><li>中国网通 AS号:9929</li></ul><h2 id="BGP的矢量特征"><a href="#BGP的矢量特征" class="headerlink" title="BGP的矢量特征"></a>BGP的矢量特征</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1730806229082-7508981d-6da2-4ef1-a7a8-12d8b9d550a9.jpeg"></p><ul><li>路径矢量信息中包含一个BGP自治系统列表</li><li>BGP路由器不接受路径列表中包含其AS号的路由更新，是<strong>无环路</strong>的</li><li>BGP支持对BGP自治系统路径应用路由策略</li><li>BGP路由器只能将其使用的路由通告给邻接自治系统中的对等体</li></ul><h2 id="BGP特征"><a href="#BGP特征" class="headerlink" title="BGP特征"></a>BGP特征</h2><ul><li>BGP使用TCP为输出层协议，TCP端口号为179</li><li>BGP路由器之间建立TCP连接，这些路由器称为BGP对等体也叫BGP邻居：**<font style="color:#DF2A3F;">EBGP、IBGP</font>**</li><li>对等体之间交换整个BGP路由表</li><li>BGP路由器只发送增量更新或者触发更新（不会周期性更新）</li><li>具有丰富的路径属性</li><li>BGP通告成千上万的路由，可采用TCP滑动窗口的机制，停止并等待确认前，可以发送65576个字节</li></ul><h2 id="BGP-packets"><a href="#BGP-packets" class="headerlink" title="BGP packets"></a>BGP packets</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730807035348-b0a84008-40e6-4ca5-b299-e9f24f59896e.png"></p><h3 id="报文类型"><a href="#报文类型" class="headerlink" title="报文类型"></a>报文类型</h3><table><thead><tr><th>报文名称</th><th>作用是什么</th><th>什么时候发包</th></tr></thead><tbody><tr><td>OPEN</td><td>协商BGP邻居的各项参数，建立邻居关系</td><td>通过TCP建立BGP连接，发送open报文</td></tr><tr><td>UPDATE</td><td>进行路由信息的交换</td><td>连接建立后，有路由需要发送或路由变化时，发送UPDATE通告对端路由信息</td></tr><tr><td>NOTIFICATION</td><td>报告错误，终止邻居关系</td><td>当BGP在运行时发现错误时，要发送NOTIFICATION报文通报BGP对端</td></tr><tr><td>KEEPALIVE</td><td>维持邻居关系</td><td>定时发送KEEPALIVE报文以保持BGP邻居关系的有效性</td></tr><tr><td>Route-refresh</td><td>为保证网络稳定，触发更新路由的机制</td><td>当路由策略发生变化时，触发请求邻居重新通告路由</td></tr></tbody></table><h2 id="BGP的有限状态机"><a href="#BGP的有限状态机" class="headerlink" title="BGP的有限状态机"></a>BGP的有限状态机</h2><table><thead><tr><th>Peer状态名称</th><th>发什么包</th><th>在做什么</th></tr></thead><tbody><tr><td>Idle</td><td>尝试建立TCP连接</td><td>准备开始TCP的连接并监视远程peer启动TCP连接，启用BGP时，要准备足够的资源</td></tr><tr><td>Connect</td><td>发TCP包</td><td>正在进行TCP连接，等待完成中，认证都在TCP建立期间完成的。如果TCP连接不上则进入Active状态，反复尝试连接</td></tr><tr><td>Active</td><td>发TCP包</td><td>TCP连接没建立成功，反复尝试TCP连接</td></tr><tr><td>OpenSent</td><td>发Open包</td><td>TCP连接建立已经成功，开始发送Open包，Open包携带参数协商对等体的建立</td></tr><tr><td>OpenConfim</td><td>发Keepalive包</td><td>参数、能力特性协商成功，开始自己发送Keepalive包</td></tr><tr><td>Established</td><td>发Update包</td><td>已经收到对方的Keepalive包，双方能力特性一致，开始使用Update通告路由信息</td></tr></tbody></table><h2 id="BGP-Peer"><a href="#BGP-Peer" class="headerlink" title="BGP Peer"></a>BGP Peer</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730809493082-98e0e6ca-f4f0-4d60-921c-277b67c3c35c.png"></p><ul><li>运行BGP的路由器被称为BGP speaker</li><li>BGP对等体也叫BGP邻居，建立基于TCP的关系</li><li>EBGP：BGP位于不同自治相同的路由器之间，称为EBGP</li><li>建立EBGP邻接关系，必须满足三个条件<ul><li>EBGP之间自治系统号不同</li><li>定义邻居建立TCP会话</li><li>neighbor中指定的IP地址要可达</li></ul></li></ul><h2 id="中转AS中的IBGP路由传递"><a href="#中转AS中的IBGP路由传递" class="headerlink" title="中转AS中的IBGP路由传递"></a>中转AS中的IBGP路由传递</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730892076962-e019b9cc-49c5-4659-b378-ac6690db7cfa.png"></p><h3 id="全互联IBGP邻居关系"><a href="#全互联IBGP邻居关系" class="headerlink" title="全互联IBGP邻居关系"></a>全互联IBGP邻居关系</h3><ul><li>IBGP全互联虽然能解决transit AS内的路由黑洞问题，但是却造成BGP路由器需要耗费大量资源维护大量BGP连接的新问题<ul><li>路由反射器</li><li>联邦</li></ul></li></ul><h2 id="IBGP水平分割原则"><a href="#IBGP水平分割原则" class="headerlink" title="IBGP水平分割原则"></a>IBGP水平分割原则</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730892484804-5d4f1364-9a3c-4165-bd3e-40e75f989e0c.png"></p><ul><li>BGP防环是通过AS_PATH实现的，而AS_PATH仅仅实在路由离开后AS才会被更改，因此再AS内，IBGP就没有EBGP的防环能力，为了防止环路的出现，BGP路由器不会将从IBGP邻居学习过来的路由再通告给自己其他IBGP邻居</li><li>由于水平分割原则存在，BGP要求AS内，需保证IBGP全互联（neighbor命令 指定）</li><li>（根本原因是在AS内部，AS_PATH不会改变，无法使用AS_PATH防环，因此很容易出现环路）</li></ul><h2 id="BGP路由通告规则"><a href="#BGP路由通告规则" class="headerlink" title="BGP路由通告规则"></a>BGP路由通告规则</h2><ul><li>当存在多条路径时，BGP router只选取最优的路由（BEST）来使用（没有负载的情况下）</li><li>BGP只把自己使用的路由，也就是自己认为Best的路由传递给BGP Peer</li><li>BGP Speaker从EBGP获得的路由会向它所有的BGP相邻体通告（包括EBGP和IBGP）</li><li>BGP Speaker从IBGP获得的路由不向它的IBGP相邻体通告（避免循环，水平分割；存在路由RR的情况下除外）</li><li>BGP Speaker从IBGP获得的路由是否通告给它的EBGP Peer要视IGP和BGP同步的情况来决定</li></ul><h2 id="BGP同步"><a href="#BGP同步" class="headerlink" title="BGP同步"></a>BGP同步</h2><ul><li>BGP同步规则指出，BGP路由器不应使用通过IBGP获悉的路由或将其通告给外部邻居，除非该路由是本地或者通过IGP获悉的</li><li>思科Cisco IOS默认关闭同步</li><li>同步关闭，则BGP可以将使用这样的路由，并将其通告给外部BGP邻居：从IBGP邻居那里获悉的且没有出现在本地路由表中的路由</li><li>同步开启，则路由器通过IBGP获悉路由后，将等待IGP将该路由传遍整个自治系统，然后再将其通告给外部对等体</li></ul><h2 id="Tables"><a href="#Tables" class="headerlink" title="Tables"></a>Tables</h2><ul><li>BGP邻居表：邻居列表</li><li>BGP表：包含了从邻居学习的所有路由，以及到达目的网段的多个路径和属性</li><li>路由表：列出了到达目的网段的最佳路径，EBGP路由AD为20，IBGP路由AD为200</li></ul><h2 id="Next-Hop"><a href="#Next-Hop" class="headerlink" title="Next-Hop"></a>Next-Hop</h2><ul><li>BGP是AS·by-AS的路由协议，而不是router-by-router的路由协议</li><li>在BGP中，next-hop并不意味着是下一台路由器，而是到达下一个AS的IP地址</li><li>EBGP中，默认next-hop为发送更新的邻居路由器的IP地址</li><li>IBGP中，从EBGP传来的next-hop属性在IBGP中保持不变的被传递</li></ul><h3 id="修改next-hop"><a href="#修改next-hop" class="headerlink" title="修改next-hop"></a>修改next-hop</h3><ul><li>为了防止路由黑洞问题，R1、R2、R3建立IBGP全互联且均用各自的LOOPBACK接口建立IBGP关系</li></ul><h2 id="配置BGP"><a href="#配置BGP" class="headerlink" title="配置BGP"></a>配置BGP</h2><h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><p><code>**Router(config)# router bgp** _autonomous-system_</code></p><ul><li>仅仅执行router bgp不能再路由器上激活BGP，必须执行至少一个子命令才能再路由器激活BGP进程</li><li>在路由器上职能配置一个BGP实例</li></ul><h3 id="指定BGP邻居及激活BGP会话"><a href="#指定BGP邻居及激活BGP会话" class="headerlink" title="指定BGP邻居及激活BGP会话"></a>指定BGP邻居及激活BGP会话</h3><p><code>Router(config-router)# neighbor &#123;ip-address | peer-group-name &#125; remote-as autonomous-system</code></p><ul><li>邻居指定的ip地址必须路由可达</li><li>BGP路由都需手工指定，不能像IGP那样通过协议自动发现</li><li>AS决定与邻居建立的是EBGP还是IBGP会话</li></ul><h3 id="指定BGP将通告的网络"><a href="#指定BGP将通告的网络" class="headerlink" title="指定BGP将通告的网络"></a>指定BGP将通告的网络</h3><p><code>Router(config-router)#network network-number [mask network-mask] [route-map map-tag]</code></p><ul><li>network命今与IGP不同，BGP命令network为通告哪些IP路由进BGP进程，而不是在接口上启用BGP </li><li>network支持无类前缀，前缀必须与路由表中的条目完全匹配</li><li>如果不指定mask，只通告主类网络号，而且仅当主类网络中至少有一个子网出现在IP路由表中，BGP才会将该主类网络作为一条BGP路由通告</li><li>指定了mask，则仅当路由选择表中有与该网络完全匹配的条目时才被通告出去</li></ul><h3 id="BGP同步-1"><a href="#BGP同步-1" class="headerlink" title="BGP同步"></a>BGP同步</h3><p><code>Router(config-router)# no synchronization</code></p><ul><li>关闭同步(默认关闭)</li></ul><p><code>Router(config-router)# synchronization</code></p><ul><li>开启同步</li></ul><h3 id="BGP-router-id"><a href="#BGP-router-id" class="headerlink" title="BGP router-id"></a>BGP router-id</h3><p><code>Router(config-router)# bgp router-id x.x.x.x</code></p><ul><li>手工设置BGP routerlD</li></ul><h3 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730894784939-f4d16b2c-c930-4ab1-a48c-c47743e91c9d.png"></p><h3 id="指定更新源"><a href="#指定更新源" class="headerlink" title="指定更新源"></a>指定更新源</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730894818299-aa7e1866-0994-4faa-88c4-156f792c9c65.png"></p><h3 id="BGP身份验证"><a href="#BGP身份验证" class="headerlink" title="BGP身份验证"></a>BGP身份验证</h3><p>Router(config-router)# neighbor {ip-address | peer-group-name} password string</p><ul><li>BGP支持MD5邻居身份验证</li><li>启用身份验证后，将对通过的对等体之间的TCP连接传输所有的数据等进行验证</li><li>认证都是在TCP建立连接的时候完成的</li></ul><h2 id="维护BGP"><a href="#维护BGP" class="headerlink" title="维护BGP"></a>维护BGP</h2><ul><li>重置BGP会话</li><li>将新策略应用于所有路由，必须触发一个更新</li></ul><h3 id="三种触发更新的方式"><a href="#三种触发更新的方式" class="headerlink" title="三种触发更新的方式"></a>三种触发更新的方式</h3><ul><li>硬重置</li><li>软重置</li><li>路由刷新</li></ul><h3 id="硬重置"><a href="#硬重置" class="headerlink" title="硬重置"></a>硬重置</h3><ul><li>断开相应TCP连接，通过这些会话收到的所有信息都将失效，并从BGP中删除</li><li>（不建议优先使用硬路由，谨慎！这将删除数据，请三思而后行！！！！）<ul><li><code>clear ip bgp &#123;neighbor-address&#125;</code></li><li><code>clear ip bgp *</code></li></ul></li></ul><h3 id="软重置"><a href="#软重置" class="headerlink" title="软重置"></a>软重置</h3><ul><li>不拆除并重建TCP或者BGP连接，而是仅出发更新操作以便让新的路由策略生效</li><li>软重置可以仅由于出站或入站策略，也可同时用于出入站策略</li></ul><h4 id="出站软重置"><a href="#出站软重置" class="headerlink" title="出站软重置"></a>出站软重置</h4><ul><li>不会拆除TCP连接，不会重置BGP会话，仅促发更新操作以便让新的路由策略生效（发送update消息）</li><li>需要修改出站策略时，建议使用该命令</li><li><code>clear ip bgp soft out</code></li></ul><h4 id="入站软重置"><a href="#入站软重置" class="headerlink" title="入站软重置"></a>入站软重置</h4><ul><li>本地发送route-refresh给所有的BGP邻居</li><li><code>clear ip bgp soft in</code></li></ul><p>注：CISCOIOS 12.1开始全面支持入站路由的动态软重配置，但在之前的版本在使用入站软重配置之前必须首先在BGP进程中增加如下配置:neighbor x.x.x.x soft-reconfiguration inbound然后再使用clear ip bgp soft in命令这条命令会将x.x.x.x邻居发送过来的BGP路由存储在内存中，当配置入站软重置后，路由器不再向邻居发送更新请求，而是直接在内存中存储的路由中执行新配置的入站策略，以此来防止触发大批量的路由更新而造成资源的浪费，但是这种操作仍会耗费内存，因此在使用的时候要非常慎重。</p><h2 id="BGP属性"><a href="#BGP属性" class="headerlink" title="BGP属性"></a>BGP属性</h2><table><thead><tr><th>公认属性<br>（Well-known）</th><th>公认必遵<br>（Well-known mandatory）</th><th>BGP 必须都能识别，且在更新消息必须包含</th><th>Origin<br>AS-Path<br>Next hop</th></tr></thead><tbody><tr><td></td><td>公认自决<br>（Well-known discretionary）</td><td>BGP 必须都能识别，更新消息可包含可不包含</td><td>Local-Preference<br>ATOMIC_Aggregate</td></tr><tr><td>可选属性<br>（Optional）</td><td>可选传递<br>（Optional transitive）</td><td>可以不支持该属性，但即使不支持也应当接受包含该属性的路由并传递给其他邻居</td><td>Community<br>Aggregator</td></tr><tr><td></td><td>可选非传递<br>（Opinional non-transitive）</td><td>可以不支持该属性，不识别的BGP进程可以忽略包含这个属性的更新消息，并且不传递给其他BGP邻居</td><td>MED<br>Originator_ID<br>Cluster_list<br>*Weight</td></tr></tbody></table><h2 id="WEIGHT"><a href="#WEIGHT" class="headerlink" title="WEIGHT"></a>WEIGHT</h2><ul><li>在路由器本地配置，只提供本地路由策略，不会传播给任何BGP邻居</li><li>范围：0~65535；越大越优先</li><li>路由器本地始发的路径默认权重是32768，从其他BGP邻居学到的为0</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1731410361179-24230caa-4101-4214-b7b2-e36684c17565.png"></p><h2 id="LOCAL-PREFERENCE"><a href="#LOCAL-PREFERENCE" class="headerlink" title="LOCAL PREFERENCE"></a>LOCAL PREFERENCE</h2><ul><li><strong><font style="color:#DF2A3F;">公认自由决定属性</font></strong></li><li>告诉AS中的路由器，哪条路径是离开AS的首选路径</li><li>LP越高路径越优</li><li>只发送给IBGP邻居，而不能传给EBGP邻居</li><li>默认本地优先级为100</li><li><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1731410490396-d8420a3c-2906-416b-944d-863e909fac07.png"></li></ul><h2 id="AS-Path（公认强制属性）"><a href="#AS-Path（公认强制属性）" class="headerlink" title="AS-Path（公认强制属性）"></a>AS-Path（公认强制属性）</h2><ul><li>是前往目标网络的路由经过的自治系统号列表，通告该路由的自治系统号位于列表末尾</li><li>作用：确认无环，通告时给EBGP时会加上自己的AS号；通告给IBGP时不修改AS-Path</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1731410691990-01881309-1058-46d1-a075-114e2b239fd1.png"></p><h3 id="四种类型"><a href="#四种类型" class="headerlink" title="四种类型"></a>四种类型</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1731411052266-03328819-94f7-4586-8077-d5e506eee364.png"></p><ul><li>**<font style="color:#DF2A3F;">AS_SET</font>**：一个去往特定目的地所经路径上的无序AS列表</li><li>**<font style="color:#DF2A3F;">AS_SEQENCE</font>**：一个有序的AS号列表</li><li>**<font style="color:#DF2A3F;">AS_CONFED_SEQUENCE</font>**：一个去往特地目的地所经路径上的有序AS号列表，其用法与AS_SEQENCE完全一样，区别于该列表的AS号属于本地联邦中的AS</li><li>**<font style="color:#DF2A3F;">AS_CONFED_SET</font>**：一个去往特定目的地上的无序AS号列表，其用法与AS_SET一样，区别在于列表中的AS号属于本地联邦中的AA</li></ul><h2 id="Origin（公认强制属性）"><a href="#Origin（公认强制属性）" class="headerlink" title="Origin（公认强制属性）"></a>Origin（公认强制属性）</h2><ul><li>标识路由的起源，有下列三种可能：<ul><li>i通过BGP network，也就是起源于IGP，因为BGP network必须保证该网络在路由表中</li><li>e是由EGP这种早期协议重发布而来</li><li>？Incomplete，从其他渠道学习到的，路由来源不完全（确认该路由来源的信息不完全）。（重发布的路由）</li></ul></li><li>路由优选顺序：lowest origin code（IGP&gt;EGP&gt;Incomplete）</li></ul><h2 id="MED（可选非传递属性）"><a href="#MED（可选非传递属性）" class="headerlink" title="MED（可选非传递属性）"></a>MED（可选非传递属性）</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1731411803897-0b6bf6f9-e658-48a4-a306-7a8d455526f8.png"></p><ul><li>是一种度量值，用于外部邻居指出进入AS的首选路径，即当入口有多个时，自治系统可以使用MED动态的影响其他AS如何选择进入路径</li><li>度量值越小路径越优</li><li>MED是在AS之间切换，MED发送给EBGP对等体。这些路由器在AS内传播MED，不传递给下一个AS</li><li>默认情况下，仅当路径来自同一个AS中的不同EBGP邻居时，路由器才比较他们的MED属性</li><li>MED影响进入AS的数据流:LP影响离开AS的数据流</li></ul><h3 id="比较原则及配置注意事项"><a href="#比较原则及配置注意事项" class="headerlink" title="比较原则及配置注意事项"></a>比较原则及配置注意事项</h3><ul><li>本地在将一条BGP路由通告给EBGP Peer时，是否携带MED值,需要根据以下条件进行判断(不对EBGP Peer使用Route-map的情况下)<ul><li>如果该BGP路由是本地始发(network或redistribute)的,则携带MED值发送给EBGP Peer(如果MED为空,则设置为0)</li><li>如果该BGP路由是从其他BGP Peer学习过来的，那么将该路由通告给EBGPPeer时不携带MED</li></ul></li><li>本地在将一条BGP路由通告给IBGPPeer时，一定会携带MED值<ul><li>如果接收或产生的路由的MED为空,那么在向IBGP Peer通告时,将MED设置为0</li></ul></li><li>总结1、2两点就是MED在IBGP之间传递没有问题(不会丢失)，但是在EBGP之间传递要看路由是否起源于自己。</li></ul><h2 id="NEXT-HOP（公认强制属性）2"><a href="#NEXT-HOP（公认强制属性）2" class="headerlink" title="NEXT_HOP（公认强制属性）2"></a>NEXT_HOP（公认强制属性）2</h2><ul><li>如果路由传递自EBGP peer</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1731412077866-bf31be10-26e7-4487-8738-b72ccc505e38.png"></p><ul><li>如果路由传递自IBGP邻居，并描述的是AS外的目的地</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1731412193230-54295d0a-b300-4fea-bf2b-203de0f4a3e0.png"></p><ul><li>如果路由传递自IBGP邻居，并由AS内BGP路由器引入</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1731412344784-f2e1be11-a76c-4738-9ecf-dc9a4e8884c9.png"></p><p>Tips：如果IBGP peer使用network或重发布的方式引入IGP路由，那么通告者将使用这些路由的IGP下一跳作为NH；如果这些路由是该IBGP peer配置的BGP汇总路由，则NH为其更新源IP。</p><h3 id="On-Shared-Media"><a href="#On-Shared-Media" class="headerlink" title="On Shared Media"></a>On Shared Media</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1731413016975-73d4cf2b-a590-4d19-a73b-aeef941be1d8.png"></p><ul><li>RouterB将路由100.100.100.0&#x2F;24传递给A，NEXT_HOP为10.1.123.2</li><li>RouterA将路由100.100.100.0&#x2F;24传递给C，此时NEXT_HOP保持不变</li><li>如果路由器收到某条BGP路由，该路由的NEXT_HOP地址值与EBGP邻居(更新对象)同属一个网段，那么该条路由的NEXTHOP地址将保持不变并传递给它的BGP邻居</li></ul><h3 id="On-NBMA"><a href="#On-NBMA" class="headerlink" title="On NBMA"></a>On NBMA</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1731413248307-5df17964-315e-4c31-8d2b-5b159d9bcf53.png"></p><ul><li>如果中间的多路访问不是Ethernet，而是帧中继（NBMA）呢？</li></ul><h2 id="COMMUNITY"><a href="#COMMUNITY" class="headerlink" title="COMMUNITY"></a>COMMUNITY</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1731458979252-74a8f3c5-cb61-494c-8820-44d1f21f23cf.png"></p><ul><li>可选传递属性</li><li>一种标记，用于简化路由策略的执行</li><li>可以将某些路由分配一个特定的COMMUNITY属性，之后就可以基于COMMUNITY值而不是每条路由进行BGP属性的设置了</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1731460387790-d039cfe4-b94c-44ce-a4f2-0d89f944d64a.png"></p><h3 id="几个众所周知的值"><a href="#几个众所周知的值" class="headerlink" title="几个众所周知的值"></a>几个众所周知的值</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">route-map test permit 10</span><br><span class="line">set community ?</span><br><span class="line">&lt;1-4294967295&gt;community number</span><br><span class="line">aa:nncommunity number in aa:nn format</span><br><span class="line">additiveAdd to the existing community</span><br><span class="line">internetInternet (well-known community)</span><br><span class="line">local-ASDo not send outside local AS (well-known community)</span><br><span class="line">no-advertiseDo not advertise to any peer (well-known community)</span><br><span class="line">no-exportDo not export to next AS (well-known community)</span><br><span class="line">noneNo community attribute</span><br></pre></td></tr></table></figure><p><strong>Route</strong></p><p>Community&#x3D;no-adv</p><p>R2不会将该路由再通告给任何BGP peer</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1731460836560-e5a0cea7-a8fa-4bd1-a0d9-bbefda45b523.png"></p><h2 id="Atomi-Aggregate及aggregator"><a href="#Atomi-Aggregate及aggregator" class="headerlink" title="Atomi_Aggregate及aggregator"></a>Atomi_Aggregate及aggregator</h2><p>172.16.0.0&#x2F;16</p><p>汇总路由丢失明确路由的路径属性</p><p>需要给下游邻居告警，并提示“汇总点”及汇总地AS</p><p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1731461244712-db15a1db-b381-40ae-8c8e-83d80a966bf6.jpeg"></p><p><code>aggregate-address 172.16.0.0 255.255.0.0 summary-only</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">R4# show ip bgp 172.16.0.0</span><br><span class="line">BGP routing table entry for 172.16.0.0/16, version 4</span><br><span class="line">Paths:(1 available, best #1, table Default-lP-Routing-Table)</span><br><span class="line">Flag:0x820</span><br><span class="line">Not advertised to any peer</span><br><span class="line">300,(aggregated by 300 3.3.3.3)</span><br><span class="line">10.1.34.3 from 10.1.34.3 (3.3.3.3)</span><br><span class="line">Origin lGP, metric 0, localpref 100, valid, external,atomic-aggregate, best</span><br></pre></td></tr></table></figure><h3 id="报文案例"><a href="#报文案例" class="headerlink" title="报文案例"></a>报文案例</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1731461667500-f2c080c5-fc71-4b5c-984c-22dcd23c405a.png"></p><h2 id="BGP自动汇总"><a href="#BGP自动汇总" class="headerlink" title="BGP自动汇总"></a>BGP自动汇总</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1731461782082-4df50a90-5604-4b26-93cd-52ae719c6130.png"></p><ul><li>若R1开启auto-summary，并用重发布直连的方式引入1.1.1.0&#x2F;24，则该子网会被汇总</li><li>若R1开启auto-summary,且network1.1.1.0 mask 255.255.255.0，则仍以明细更新</li><li>若R1开启auto-summary,且network1.0.0.0 mask 255.0.0.0,则该子网会被汇总</li><li>上面这条network等同于network 1.0.0.0(network的有类宣告)</li></ul><p><strong><font style="color:#DF2A3F;">因此BGP自动汇总(auto-summary)只汇总重发布引入的路由，以及使用network命令有类宣告方式引入的路由。目前CISCO IOS默认关闭自动汇总。</font></strong></p><h2 id="BGP手动汇总"><a href="#BGP手动汇总" class="headerlink" title="BGP手动汇总"></a><font style="color:#000000;">BGP手动汇总</font></h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733121752791-989f633a-4d0d-48dd-ac50-8335ac3782e9.png"></p><ul><li>可以考虑在R3上创建静态的汇总路由</li></ul><p><code>ip route 172.16.0.0 255.255.0.0 null0</code></p><ul><li>然后再将汇总路由network进BGP</li><li>不推荐此方法</li></ul><h3 id="针对特定邻居取消抑制"><a href="#针对特定邻居取消抑制" class="headerlink" title="针对特定邻居取消抑制"></a>针对特定邻居取消抑制</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733121996017-8e7e4481-a185-40b9-85c2-3742644693c5.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">access-ist 1 permit 172.16.1.0</span><br><span class="line">route-map unsupp permit 10</span><br><span class="line">  match ip address 11</span><br><span class="line">router bgp 300</span><br><span class="line">  neighbor 10.1.35.5 unsuppress-map unsupp</span><br><span class="line">  aggregate-address 172.16.0.0 255.255.0.0 as-set summary-only</span><br></pre></td></tr></table></figure><h3 id="advertise-map"><a href="#advertise-map" class="headerlink" title="advertise-map"></a>advertise-map</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733122218668-609b391f-86ce-4a69-9cd4-22e981484fd5.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ip prefix-list list1 permit 172.16.1.0/24</span><br><span class="line">ip prefix-list list1 permit 172.16.2.0/24</span><br><span class="line">route-map adv permit 10</span><br><span class="line">  match ip address prefix-list list1</span><br><span class="line">aggregate-address 172.16.0.0 255.255.0.0 summary-only as-set advertise-map adv</span><br></pre></td></tr></table></figure><h3 id="attrubute-map"><a href="#attrubute-map" class="headerlink" title="attrubute-map"></a>attrubute-map</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733122395149-ba69abf1-caa8-4996-a318-f50e5741822e.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">route-map attr permit 10</span><br><span class="line">  set ?</span><br><span class="line">aggregate-address 172.16.0.0 255.255.0.0 summary-only as-set attribute-map attr</span><br></pre></td></tr></table></figure><h3 id="终方案"><a href="#终方案" class="headerlink" title="终方案"></a>终方案</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733122474434-007e0670-c4db-4dd8-9b54-e9c5ded166c2.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aggregate-address 172.16.0.0 255.255.0.0 summary-only as-set</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733122543075-6fe96b97-2d36-4b13-9bd8-ec7c21098471.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">access-list 1 permit 172.16.2.0</span><br><span class="line">access-list 1 permit 172.16.11.0</span><br><span class="line">route-map suppmap permit 10</span><br><span class="line">  match ip address 1</span><br><span class="line">aggregate-address 172.16.0.0 255.255.0.0 suppress-map suppmap</span><br></pre></td></tr></table></figure><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><ul><li>正则表达式（regular expresion）是按照一定的模板来匹配字符串的公式。</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733122792066-d45f8c40-28be-44fc-9ef2-fe1d61632c39.png"></p><h3 id="原子字符"><a href="#原子字符" class="headerlink" title="原子字符"></a>原子字符</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733122829384-9067e136-8d1b-4941-a29a-d059b397d1ce.png"></p><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733122859463-f2706ecb-995d-434a-adcd-fb3603038c63.png"></p><h3 id="乘法字符"><a href="#乘法字符" class="headerlink" title="乘法字符"></a>乘法字符</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733122918646-e2bfab69-bfb0-4d20-99e2-2e598f14cf10.png"></p><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733122964843-3d32c0ca-e4f3-4de0-9ec0-3260d8a107af.png"></p><ul><li>一个乘法字符可以应用于一个单字符或多个字符，如果用于多字符，需将字符串放入（ ）中</li></ul><h3 id="范围字符"><a href="#范围字符" class="headerlink" title="范围字符"></a>范围字符</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733122937086-5335bee7-7d2d-4911-b02c-c4bd1c6cdc3a.png"></p><h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733123043302-ae7c2612-b283-4ed8-be08-c8ed67973230.png"></p><h3 id="使用正则表达式匹配AS-PATH"><a href="#使用正则表达式匹配AS-PATH" class="headerlink" title="使用正则表达式匹配AS_PATH"></a>使用正则表达式匹配AS_PATH</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733123094575-e9208cd3-efbf-46e1-92d6-728495dcb98d.png"></p><ul><li>AS_PATH可以当作字符串并使用正则表达式进行匹配</li><li>String中的 “__” 为空格，这也是一个字符，也有可能被匹配</li></ul><h4 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733123298715-383afd98-b548-4353-bc46-54d9ee5187f6.png"></p><ul><li>注意as-path access-list也是默认含隐拒绝所有</li></ul><h3 id="使用as-path-access-list-匹配路由"><a href="#使用as-path-access-list-匹配路由" class="headerlink" title="使用as-path access-list 匹配路由"></a>使用as-path access-list 匹配路由</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733123415356-86bd5433-a930-4f66-a9a1-7d144b63fec7.png"></p><h4 id="示例1-搭配filter-list"><a href="#示例1-搭配filter-list" class="headerlink" title="示例1 搭配filter-list"></a>示例1 搭配filter-list</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733123497581-877d75ef-a72f-4ab8-aa0a-e4a792edcf90.png"></p><ul><li>在R3上可做策略</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ip as-path access-ist 1deny _600$</span><br><span class="line">ip as-path access-list 1 permit .*</span><br><span class="line">router bgp 300</span><br><span class="line">  neighbor 10.1.23.2 filter-list 1 in</span><br></pre></td></tr></table></figure><h4 id="示例2-搭配route-map"><a href="#示例2-搭配route-map" class="headerlink" title="示例2 搭配route-map"></a>示例2 搭配route-map</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733123628617-406b7486-d886-41d5-9ed5-115603b2032f.png"></p><ul><li>R3可做策略</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ip as-path access-ist 1 permit _600$</span><br><span class="line">route-map setCommu permit 10</span><br><span class="line">  match as-path 1</span><br><span class="line">  set community no-advertise</span><br><span class="line">route-map setCommu permit 10</span><br><span class="line"></span><br><span class="line">router bgp 300</span><br><span class="line">  neighbor 10.1.23.2 route-map setcommu in</span><br></pre></td></tr></table></figure><h3 id="配置命令"><a href="#配置命令" class="headerlink" title="配置命令"></a>配置命令</h3><p><code>Router(config)# ip as-path access-list num &#123;permit|deny&#125; regexp</code></p><ul><li>配置as-path access-list</li></ul><p><code>Router(config-router)# neighbor x.x.x.x filter-list as-path-filter &#123;inlout&#125;</code></p><ul><li>关联as-path access-list到filter-list，起到路由过滤作用</li></ul><h4 id="验证及查看"><a href="#验证及查看" class="headerlink" title="验证及查看"></a>验证及查看</h4><p><code>Router# show ip as-path-access-list</code></p><ul><li>查看配置的 as-path access-list</li></ul><p><code>Router# show ip bgp regexp xx</code></p><ul><li>显示BGP表中所有被该正则表达式匹配上的路由，这是一个非常不错的工具</li></ul><p><code>Router# show ip bgp filter-list access-list-num</code></p><ul><li>显示BGP表中所有被该filter-list匹配的路由</li></ul><h2 id="通告community操控路由"><a href="#通告community操控路由" class="headerlink" title="通告community操控路由"></a>通告community操控路由</h2><h3 id="BGP-Communities"><a href="#BGP-Communities" class="headerlink" title="BGP Communities"></a>BGP Communities</h3><ul><li>BGP communities是一种路由标记方法，用于确保路由过滤和选择的连续性</li><li>可选传递属性，不支持该属性的BGP router原封不动的将community值传递给下游BGP邻居</li></ul><h3 id="Community"><a href="#Community" class="headerlink" title="Community"></a>Community</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733124090787-e2d027b9-f95b-466a-b5e8-86d7bdb3805c.png"></p><ul><li>使用全局配置命令切换：</li></ul><p><code>ip bgp-community new-format</code></p><h3 id="BGP路径操纵"><a href="#BGP路径操纵" class="headerlink" title="BGP路径操纵"></a>BGP路径操纵</h3><h4 id="设置Community"><a href="#设置Community" class="headerlink" title="设置Community"></a>设置Community</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">route-map test permit 10</span><br><span class="line">set community ?</span><br><span class="line">&lt;1-4294967295&gt;community number</span><br><span class="line">aa:nncommunity number in aa:nn format</span><br><span class="line">additiveAdd to the existing community</span><br><span class="line">internetInternet(well-known community)</span><br><span class="line">local-ASDo not send outside local AS (well-known community)</span><br><span class="line">no-advertiseDo not advertise to any peer (well-known community)</span><br><span class="line">no-exportDo not export to next AS (well-known community)</span><br><span class="line">noneNo community attribute</span><br></pre></td></tr></table></figure><h3 id="总所周知的值"><a href="#总所周知的值" class="headerlink" title="总所周知的值"></a>总所周知的值</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733124385448-cf61fcfb-a43e-4fb0-b8af-97b8e047e12d.png"></p><p><strong>Route</strong></p><ul><li>Community&#x3D;local-as</li><li>该路由只能在本AS内传递（如果定义了联邦，则为只在联邦成员AS传递）</li></ul><h3 id="为路由前缀分配Community"><a href="#为路由前缀分配Community" class="headerlink" title="为路由前缀分配Community"></a>为路由前缀分配Community</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733124481538-4caea059-33d5-4c50-89d2-305d5b25bf67.png"></p><ul><li>R1配置如下：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ip prefix-ist 11 permit 11.11.11.0/24</span><br><span class="line">route-map test permit 10</span><br><span class="line">  match ip address prefix-list 11</span><br><span class="line">  set community 100:11</span><br><span class="line">  </span><br><span class="line">router bgp 100</span><br><span class="line">  network 11.11.11.0 mask 255.255.255.0</span><br><span class="line">  neighbor 10.1.12.2 remote-as 200</span><br><span class="line">  neighbor 10.1.12.2 send-community</span><br><span class="line">  neighbor 10.1.12.2 route-map test out</span><br></pre></td></tr></table></figure><h3 id="为路由前缀分配多个Community"><a href="#为路由前缀分配多个Community" class="headerlink" title="为路由前缀分配多个Community"></a>为路由前缀分配多个Community</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733124672973-08971d75-7687-4f0c-a733-782014d85b5c.png"></p><ul><li>R2的配置如下：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ip community-ist 11 permit 100:11</span><br><span class="line">route-map test permit 10</span><br><span class="line">  match community 11</span><br><span class="line">  set community no-export additive</span><br><span class="line"></span><br><span class="line">router bgp 200</span><br><span class="line">  neighbor 10.1.12.1 remote-as 100</span><br><span class="line">  neighbor 10.1.23.3 remote-as 300</span><br><span class="line">  neighbor 10.1.23.3 send-community</span><br><span class="line">  neighbor 10.1.23.3 route-map test out</span><br></pre></td></tr></table></figure><h3 id="为路由前缀分配多个Community（cont-）"><a href="#为路由前缀分配多个Community（cont-）" class="headerlink" title="为路由前缀分配多个Community（cont.）"></a>为路由前缀分配多个Community（cont.）</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733124846029-37b26bce-3e5b-41e6-949a-f6f5eca0889c.png"></p><ul><li>R3上查看11.11.11.0的BGP路由：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">R3#sh ip b 11.11.11.0</span><br><span class="line">BGP routing table entry for 11.11.11.0/24,version 5</span><br><span class="line">Paths:(1 available, best #1, table Default-P-Routing-Table, not advertised</span><br><span class="line">to EBGP peer)</span><br><span class="line">Flag:0x820</span><br><span class="line">  Not advertised to any peer</span><br><span class="line">  200 100</span><br><span class="line">    10.1.23.2 from 10.1.23.2 10.1.23.2)</span><br><span class="line">    Origin lGP, localpref 100, valid, external, best</span><br><span class="line">    Community:100:11 no-export</span><br></pre></td></tr></table></figure><h3 id="用community-list匹配团体属性"><a href="#用community-list匹配团体属性" class="headerlink" title="用community-list匹配团体属性"></a>用community-list匹配团体属性</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733124981265-f03cbe06-2d35-4141-82f4-4bc934728879.png"></p><p><code>lp community-list 1 permit 100:11</code></p><ul><li>匹配。匹配community中包含100:11的路由</li></ul><p><code>lp community-list 1 permit 100:11 no-adv</code></p><ul><li>不匹配。要求100:11及no-adv两者都有才匹配成立</li></ul><p><code>lp community-list 1 permit 100:11</code></p><p><code>Ip community-list 1 permit no-export(或将no-export换成no-adv)</code></p><ul><li>匹配。只要community中包含100:11或no-export</li></ul><h3 id="用community-list匹配团体属性（cont-）"><a href="#用community-list匹配团体属性（cont-）" class="headerlink" title="用community-list匹配团体属性（cont.）"></a>用community-list匹配团体属性（cont.）</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733125149714-85e3e77c-fab0-4cb2-aae7-d89f093f56c3.png"></p><p><code>ip community-list 12 permit internet</code></p><ul><li>所有路由默认都属于internet</li></ul><h3 id="用community-list匹配团体属性-严格匹配"><a href="#用community-list匹配团体属性-严格匹配" class="headerlink" title="用community-list匹配团体属性 严格匹配"></a>用community-list匹配团体属性 严格匹配</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733125250291-e5171d9b-624d-4446-b988-3117e17dd97d.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">lp community-list 11 permit no-export</span><br><span class="line">route-map test permit 10</span><br><span class="line">match community 11 exact-match// 严格匹配</span><br><span class="line">严格匹配community属性为no-export的路由，多一点，少一点都不行</span><br><span class="line"></span><br><span class="line">Show lp community-ist 1 [exact-match]</span><br><span class="line">查看community-list 1</span><br></pre></td></tr></table></figure><h3 id="删除某个或多个community值"><a href="#删除某个或多个community值" class="headerlink" title="删除某个或多个community值"></a>删除某个或多个community值</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733125335491-71efe10e-6c26-4e45-afe6-6f30821e8c97.png"></p><ul><li><strong>一条路由，允许携带多个community值，构成一个community列表，那么如何删除某个或者某几个community值?譬如只想删除11路由的no-export属性</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ip community-list standard del permit no-export// 匹配要删除的commu值</span><br><span class="line">route-map test permit 10</span><br><span class="line">  set comm-list del delete// 用这条命令删除</span><br></pre></td></tr></table></figure><h3 id="删除多个community值"><a href="#删除多个community值" class="headerlink" title="删除多个community值"></a>删除多个community值</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733125474298-a0ab0f1a-bc22-46f8-bce2-e8fcd77cebf0.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ip community-list standard del permit no-export// 用多行community-list</span><br><span class="line">ip community-list standard del permit 100:11// 用多行community-list</span><br><span class="line">route-map test permit 10</span><br><span class="line">  set comm-list del delete</span><br></pre></td></tr></table></figure><h3 id="配置community-list"><a href="#配置community-list" class="headerlink" title="配置community-list"></a>配置community-list</h3><p><code>lp community-list 1-99 permit|deny value [value...]</code></p><p>定义标准的community-list，使用internet关键字匹配任何community</p><p><code>lp community-list 100-199 permit|deny regexp</code></p><p>定义扩展的community-list，可使用正则表达式匹配community</p><p><code>show ip community-list</code></p><p>查看配置的community-list</p><p><code>show ip bgp x.x.x.x</code></p><p>查看BGP路由的详细信息，包括community</p><h2 id="Prefix-list"><a href="#Prefix-list" class="headerlink" title="Prefix-list"></a>Prefix-list</h2><h3 id="配置实例"><a href="#配置实例" class="headerlink" title="配置实例"></a>配置实例</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733125724825-5fc79afd-ba57-4220-a7e3-c07cbc16d21f.png"></p><ul><li>R2上，过滤掉12.12.12.0&#x2F;24路由，其他放行</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">R2(config)# ip prefix-list 12 deny 12.12.12.0/24</span><br><span class="line">R2(config)# ip prefix-list 12 permit 0.0.0.0/0 le 32</span><br><span class="line">R2(config)# router bgp 12</span><br><span class="line">R2(config-router)# neighbor 10.1.23.3 prefix-list 12 out</span><br></pre></td></tr></table></figure><h2 id="distribute-list"><a href="#distribute-list" class="headerlink" title="distribute-list"></a>distribute-list</h2><h3 id="配置实例-1"><a href="#配置实例-1" class="headerlink" title="配置实例"></a>配置实例</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733125796770-bb717766-917b-4aca-9dce-e03e43310a11.png"></p><ul><li>R2上，过滤掉12.12.12.0&#x2F;24路由，其他放行</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">R2(config)# access-ist 1 deny 12.12.12.0</span><br><span class="line">R2(config)# access-list 1 permit any</span><br><span class="line">R2(config)# router bgp 12</span><br><span class="line">R2(config-router)# neighbor 10.1.23.3 distribute-list 1 out</span><br></pre></td></tr></table></figure><h2 id="Route-map"><a href="#Route-map" class="headerlink" title="Route-map"></a>Route-map</h2><h3 id="可以在以下的BGP命令中使用route-map关键字"><a href="#可以在以下的BGP命令中使用route-map关键字" class="headerlink" title="可以在以下的BGP命令中使用route-map关键字"></a>可以在以下的BGP命令中使用route-map关键字</h3><ul><li>neighbor</li><li>bgp dampening</li><li>network</li><li>redistribute</li></ul><h3 id="可以为特定的目的在不同的命令中调用定义好的route-map"><a href="#可以为特定的目的在不同的命令中调用定义好的route-map" class="headerlink" title="可以为特定的目的在不同的命令中调用定义好的route-map"></a>可以为特定的目的在不同的命令中调用定义好的route-map</h3><ul><li>suppress-map</li><li>unsuppress-map</li><li>advertise-map</li><li>inject-map</li><li>exist-map</li><li>non-exist-map</li><li>tabel-map</li></ul><h3 id="match语句能匹配"><a href="#match语句能匹配" class="headerlink" title="match语句能匹配"></a>match语句能匹配</h3><ul><li>Access-list</li><li>Ip prefix-list</li><li>Ip next-hop</li><li>local-preference</li><li>metric</li><li>Tag</li><li>AS PATH</li><li>BGP community</li><li>IGP route-type(internal&#x2F;external)</li></ul><h3 id="set语句能设置"><a href="#set语句能设置" class="headerlink" title="set语句能设置"></a>set语句能设置</h3><ul><li>Origin</li><li>Weight</li><li>BGP community</li><li>LOCAL PREFERENCE</li><li>MED</li></ul><h3 id="配置实例-关联network-执行策略"><a href="#配置实例-关联network-执行策略" class="headerlink" title="配置实例 关联network 执行策略"></a>配置实例 关联network 执行策略</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733126321432-30b4a9e2-5670-4e5c-b28e-b11d6398051b.png"></p><ul><li><em><strong>R1上，network引入路由时设置路径属性</strong></em></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ip prefix-list 11 permit 11.11.11.0/24</span><br><span class="line">ip prefix-ist 12 permit 12.12.12.0/24</span><br><span class="line">route-map RP1 permit 10</span><br><span class="line">  set community 100:11</span><br><span class="line">route-map RP2 permit 20</span><br><span class="line">  set community 100:12</span><br><span class="line">router bgp 100</span><br><span class="line">  network 11.11.11.0 mask 255.255.255.0 route-map RP1</span><br><span class="line">  network 12.12.12.0 mask 255.255.255.0 route-map RP2</span><br><span class="line">  neighbor 10.1.12.2 send-community</span><br></pre></td></tr></table></figure><ul><li><strong>该策略对所有BGP邻居有效</strong></li></ul><h3 id="关联neighbor，针对特定邻居执行策略"><a href="#关联neighbor，针对特定邻居执行策略" class="headerlink" title="关联neighbor，针对特定邻居执行策略"></a>关联neighbor，针对特定邻居执行策略</h3><p><strong>R1上，对R2传递路由时，设定MED属性值</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733126749376-550e409c-c6c6-419c-8ca7-fa6ec14c3a1d.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ip prefix-list 11 permit 11.11.11.0/24</span><br><span class="line">ip prefix-list 12 permit 12.12.12.0/24</span><br><span class="line">route-map RP permit 10</span><br><span class="line">  match ip address 11</span><br><span class="line">  set metric 1000</span><br><span class="line">route-map RP permit 20</span><br><span class="line">  match ip address 12</span><br><span class="line">  set metric 2000</span><br><span class="line">router bgp 100</span><br><span class="line">  neighbor 10.1.12.2 route-map RP out</span><br></pre></td></tr></table></figure><h3 id="配置实例-重发布关联route-map"><a href="#配置实例-重发布关联route-map" class="headerlink" title="配置实例 重发布关联route-map"></a>配置实例 重发布关联route-map</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733126794524-8909f174-b61c-467b-9e8e-4a56528ab197.png"></p><p><strong>R2上，将OSPF路由重发布进BGP</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">router bgp 200</span><br><span class="line">redistribute ospf 1 route-map RP match ?</span><br><span class="line">neighbor 10.1.12.1 remote-as 100</span><br><span class="line">no auto-summary</span><br></pre></td></tr></table></figure><p><strong>redistribute ospf 1</strong></p><ul><li>默认只重发布Intra-Area及Inter-Area路由</li><li>match extemnal只重发布E1及E2</li><li>match external 1只重发布E1;external 2只重发布E2</li><li>match nssa-external 只重发布NSSA外部路由</li></ul><h3 id="Policy-list"><a href="#Policy-list" class="headerlink" title="Policy-list"></a>Policy-list</h3><ul><li>可预先将包含一组match语句的route-map定义成一个命令列表，这个列表称为policy-list</li><li>这些policy-list可以在route-map中被调用</li><li>一个policy-list就像个只包含match语句的route-map当route-map被执行，被其调用的policy-list中所包含的match语句将一并被遍历且执行match动作</li><li>这是一种在大中型网络中运用、使得配置“模块化”的特性</li></ul><h4 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h4><ul><li>Ipv6不支持</li><li>12.0(22)S 和12.2(15)T之前的CISCOIOS版本不支持该特性，另外更老的IOS版本的路由器重启存在路由策略配置丢失的风险</li><li>Policy-list中不能包含set语句，但是它被route-map调用后，该route-map中可以包含set语句</li><li>Policy-list只在BGP中支持，其他的IP路由协议并不支持这个特性</li></ul><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ip policy-list as100 permit</span><br><span class="line">  match as-path 1</span><br><span class="line">  match community 1</span><br></pre></td></tr></table></figure><ul><li>上述命令创建一个policy-list</li><li>Policy-list只能包含match语句</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">route-map RP permit 10</span><br><span class="line">  match policy-list as100</span><br><span class="line">  match ip address prefix-list 100</span><br><span class="line">  set local-preference 300</span><br></pre></td></tr></table></figure><ul><li>上述命令在route-map中调用定义好的policy-list</li><li>一个route-map中可调用多个policy-list</li></ul><h2 id="ORF"><a href="#ORF" class="headerlink" title="ORF"></a>ORF</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733127261820-c5da6b86-80e8-429d-bc1a-2a6100b878e4.png"></p><h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733127420812-f87e5d92-541e-4e91-91ee-8da2c7342e7e.png"></p><ul><li>R2的配置（sender）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">router bgp 12</span><br><span class="line">  address-family ipv4 unicast</span><br><span class="line">  neighbor 10.1.12.1 capability orf prefix-ist send</span><br><span class="line">  neighbor 10.1.12.1 prefix-list FILTER in</span><br><span class="line"></span><br><span class="line">ip prefix-ist FlLTER deny 1.1.1.0/24</span><br><span class="line">ip prefix-list FlLTER permit</span><br></pre></td></tr></table></figure><ul><li>R1的配置（receiver）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">router bgp 12</span><br><span class="line">  address-family ipv4 unicast</span><br><span class="line">  neighbor 10.1.12.2 capability orf prefix-list receive</span><br></pre></td></tr></table></figure><ul><li>注意：省去基本配置，如手工指定BGP邻居</li></ul><h3 id="一些"><a href="#一些" class="headerlink" title="一些"></a>一些</h3><ul><li>ORF消息包含以下内容<ul><li>AFl&#x2F;SAFlipv4 unicast</li><li>ORF TYPE</li><li>When to refresh</li><li>List of ORF entries</li></ul></li><li>ORF类型不同，ORFentries也不尽相同</li><li>每种ORF类型都需要进行ORF能力的协商</li></ul><h2 id="路由拆分-BGP-Deaggregation"><a href="#路由拆分-BGP-Deaggregation" class="headerlink" title="路由拆分 BGP Deaggregation"></a>路由拆分 BGP Deaggregation</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733127855820-e4b03bc3-1426-46bb-b770-6e35ac5f0b46.png"></p><h3 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h3><ul><li>Conditional inject的配置如下(BGP路由选择进程模式下)</li></ul><p><code>bgp inject-map map1 exist-map map2 [copy attributes]</code></p><ul><li>上述命令的意思是当map2所匹配的汇总路由正常时，在本地BGP RIB中注入map1中定义的明细路由。</li><li>当汇总路由挂掉，这条明细也就跟着消失，这就是所谓的条件注入-conditional injection。</li><li>下面我们在看来一下这两个route-map的详细内容，这些是需要格外注意的。</li><li>exist-map使用的route-map最少具有以下两个match语句</li></ul><p><code>match ip address prefix-list</code></p><ul><li>上面这条match语句用来匹配汇总路由</li></ul><p><code>match ip route-source</code></p><ul><li>上面这条match语句用来匹配发送该汇总路由的邻居IP。如果指定了copyattributes选项，那么被inject的明细路由会继承汇总路由的路径属性，否则明细将被当成本地生成的路由。</li><li>Inject-map使用的route-map中</li></ul><p><code>Set ip address prefix-list</code></p><ul><li>上面的这条set命令用来定义将被注入到本地BGPRIB的明细路由。被注入的前缀可以使用</li></ul><p><code>Show ip bgpinjected-path</code></p><ul><li>来显示</li></ul><h2 id="路由反射器"><a href="#路由反射器" class="headerlink" title="路由反射器"></a>路由反射器</h2><h3 id="中转AS中的IBGP问题"><a href="#中转AS中的IBGP问题" class="headerlink" title="中转AS中的IBGP问题"></a>中转AS中的IBGP问题</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733138789405-9509b338-52b2-4cd0-b7b8-716ee84b829a.png"></p><ul><li>AS内要求IBGP全互联（IBGP水平分割）</li><li>BGP routers<ul><li>需维护大量的TCP和BGP链接</li><li>网络中充斥着BGP路由信息</li></ul></li><li>解决方案<ul><li>路由反射器</li><li>BGP联邦</li></ul></li></ul><h3 id="背景-1"><a href="#背景-1" class="headerlink" title="背景"></a>背景</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733138923248-9e3c4eb2-ccea-4481-8feb-28e80a14bd4e.png"></p><ul><li>因为IBGP水平分割原则，导致AS内部需要维护大量的BGP链接（要求IBGP全互联），从而影响网络性能，路由反射器可以“放宽”水平分割原则，缓解该问题</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733139053948-4ababdc6-fc58-4813-a03b-65e6b92fa662.png"></p><ul><li>Route Reflector</li><li>Client</li></ul><h3 id="联邦内的BGP路由路径属性"><a href="#联邦内的BGP路由路径属性" class="headerlink" title="联邦内的BGP路由路径属性"></a>联邦内的BGP路由路径属性</h3><ul><li>在联邦内部保留外部路由的NEXT_HOP属性</li><li>公布给联邦的路由的MED属性在整个联邦范围内予以保留</li><li>路由的LP属性在整个联邦范围内予以保留</li><li>在联邦范围内，将成员AS号压入AS PATH，但不公布到联邦外，并且使用TYPE3、4的AS PATH</li><li>AS PATH中的联邦成员AS号用于在联邦内部避免环路;联邦内成员AS号不参与AS PATH长度计算</li></ul><h3 id="路由反射原则"><a href="#路由反射原则" class="headerlink" title="路由反射原则"></a>路由反射原则</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733139094878-a409c072-6d0f-48f0-8f54-d88dc4810e2a.png"></p><ul><li>如果路由学习自非client IBGP对等体，则反射给所有client</li><li>如果路由学习自—client，则反射给所有非client IBGP邻居和除了该client以外的所有client</li><li>如果路由学习自EBGP邻居，则发送给所有的client和非client IBGP邻居</li></ul><h3 id="实例1"><a href="#实例1" class="headerlink" title="实例1"></a>实例1</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733139249267-49816366-cad0-4367-bc94-0694daae41ae.png"></p><ul><li>如果路由学习自一client，则反射给所有非client IBGP邻居和除了该client以外的所有client</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733139304799-ced25330-ed76-4b30-8385-39709a182131.png"></p><ul><li>如果路由学习至自client IBG对等体，则反射给所有的client</li></ul><h3 id="路由反射器下的防环"><a href="#路由反射器下的防环" class="headerlink" title="路由反射器下的防环"></a>路由反射器下的防环</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733139376642-4f17a413-a0ac-4a12-b60a-b5f67e6af3da.png"></p><ul><li>由于AS PATH属性在AS内部不会发生变化(仅当路由离开本AS才会被更新)，因此AS内才有水平分割的机制用于防止环路，而路由反射器实际上是放宽了水平分割原则，这个就会给环路带来一定的隐患，因此路由反射器需使用以下两个属性防止环路ORIGINATOR ID和CLUSTER LIST是路由反射器使用的可选非传递属性，用来防止环路。</li></ul><h3 id="Originator-ID、Cluster-list"><a href="#Originator-ID、Cluster-list" class="headerlink" title="Originator_ID、Cluster_list"></a>Originator_ID、Cluster_list</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733140109190-57da2edc-e4e2-44dd-859d-498ca74c3909.png"></p><h4 id="Originator-ID"><a href="#Originator-ID" class="headerlink" title="Originator_ID"></a>Originator_ID</h4><ul><li>每当一条路由被路由反射器反射时，该路由的始发IBGP路由器的Router-ID将会被存在路由的originator_ID属性中</li><li>当一台路由器收到IBGP路由且其originatorID与该路由器的RouterID相同，则路由器忽略该条路由</li><li>Originator_ID及Cluster-list属性将会影响BGP路径决策</li></ul><h4 id="Originator-ID的值"><a href="#Originator-ID的值" class="headerlink" title="Originator_ID的值"></a>Originator_ID的值</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733140502948-58450af4-a6d4-4764-b425-43380d718b4b.png"></p><h3 id="路由反射原则-1"><a href="#路由反射原则-1" class="headerlink" title="路由反射原则"></a>路由反射原则</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733140292005-dd4b4b29-9070-492d-9038-64a94ac51f6e.png"></p><ul><li>如果路由学习自非client lBGP对等体，则反射给所有client</li><li>如果路由学习自一client，则反射给所有非ctientIBGP邻居和除了该client以外的所有client</li><li>如果路由学习自EBGP邻居，则发送给所有client和非clientIBGP邻居</li></ul><h3 id="路由反射簇"><a href="#路由反射簇" class="headerlink" title="路由反射簇"></a>路由反射簇</h3><ul><li>路由反射簇包括反射器及其Client</li><li>每一个簇都有唯一的簇ID</li><li>每当一条路由被反射器反射后，该反射器(该簇)的ClusterID就会被添加至路由的Cluster list属性中</li><li>每当反射器收到一条Cluster list属性已经包含该簇的ClusterID的路由时，该路由基于防环的目的将不被反射</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733140660257-05943ad7-9a7c-4dab-af52-05dac354ea2b.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733140718784-4731164f-0b69-4428-b4ff-cbeeaab41843.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733140920126-45d22e04-6ac7-4ea2-b433-4ecf734da20a.png"></p><h3 id="路由反射器冗余"><a href="#路由反射器冗余" class="headerlink" title="路由反射器冗余"></a>路由反射器冗余</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733141230441-a00716c4-3db4-4a6c-9fb7-535cd4ebe1d1.png"></p><ul><li>冗余RR增加了网络的健壮性</li><li>使用Originator IDCluster_list属性来在冗余RR环境中避免路由环路。</li><li>例如将两个RR 的Cluster_ID配置为一样，那么可以起到进一步的防环作用</li><li>所有的RR之间建议采用IBGP全互联</li><li>Client会收到来自两个RR反射的路由，如何决策 ?</li></ul><h3 id="BGP选路规则"><a href="#BGP选路规则" class="headerlink" title="BGP选路规则"></a>BGP选路规则</h3><ol><li>优选具有最大Weight值的路由</li><li>优选具有最大Local Pref值的路由</li><li>优选起源于本地的路由(如本地networkaggregate或redistribute的)即下一跳是0.0.0.0(在BGP 表中,当前路由器通告的路由的下一跳为0.0.0.0)</li><li>优选AS-Path最短的路由</li><li>Origin(IGP &gt;EGP&gt;Incomplete )</li><li>优选MED最小的路由，默认情况下仅有当所有的备选路由来自同一AS才会比较MED</li><li>优选EBGP邻居发来的路由(相对于IBGP邻居学过来的)，在联邦EBGP和IBGP中首选联邦EBGP 路由</li><li>优选到BGP NEXT HOP最近的邻居</li><li>如果有多条来自相同相邻AS的路由并通过Maximum-paths 使多条路径可用,则将所有开销相同的路由放入Loc-RIB</li><li>优选最老的EBGP路由，降低滚翻的影响(此条主要对EBGP路由起效，但是现在基本不用该条，因不确定性太大)</li><li>BGP 邻居的RID越小越优先</li><li>优选Cluster-List 最短的路由</li><li>选择邻居ip地址(BGP的neighbor配置中的那个地址)最小的路由</li></ol><h2 id="优选MED最小的路由"><a href="#优选MED最小的路由" class="headerlink" title="优选MED最小的路由"></a>优选MED最小的路由</h2><h3 id="MED属性设置方法"><a href="#MED属性设置方法" class="headerlink" title="MED属性设置方法"></a>MED属性设置方法</h3><ul><li>将IGP路由引入BGP时关联Route-map进行设置</li><li>对BGP Peer应用IN&#x2F;OUT方向的Route-map进行设置</li><li>非Route-map(自动)方式<ul><li>使用network或redistribute方式将IGP路由引入BGP时,MED将继承IGP路由的Metric(直联路由及静态路由的Metric为0)</li><li>使用aggregate-address方式引入路由，则MED为空</li></ul></li></ul><h3 id="MED注意事项"><a href="#MED注意事项" class="headerlink" title="MED注意事项"></a>MED注意事项</h3><ul><li>默认情况下，只比较来自同一邻居AS的BGP路由的MED值，就是说如果同一个目的地的两条路由来自不同的AS，则不进行MED值的比较。如果仍然希望比较来自不同邻接AS的路由，可使用如下命令</li><li><code>bgp always-compare-med</code></li><li>MED只是在直接相连的自治系统间影响业务量，而不会跨AS传递</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1733208543904-53fea48b-83db-441b-964d-f8c27e92a6ee.png"></p><h2 id="BGP负载均衡"><a href="#BGP负载均衡" class="headerlink" title="BGP负载均衡"></a>BGP负载均衡</h2><ul><li>当前面的8条选路原则都无法优选出最优路由时，并且在BGP进程下面配置了maximum-paths[ibgp]n,n的取值为2-6,那么将执行等价负载均衡，也就是将这些等代价的BGP路径都放进IP路由表使用，但是要注意，虽然这些路径在本地都用了，最终却只有一条BGP路径是best最优的。具备等价负载均衡条件的候选路径需满足如下条件:<ul><li>必须有相同的路径属性，如weight、LP、AS PATH(不仅是长度，整个AS PATH包括AS号都要相同)、origincode、MED及IGP的Distance值</li><li>每一条路径的下一跳都不相同</li></ul></li></ul><p>__</p>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%80%9D%E7%A7%91/">思科</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://www.sumi233.top/tags/CCNP/">CCNP</category>
      
      
      <comments>https://www.sumi233.top/CCNP/CCNP%E8%B7%AF%E7%94%B1%20BGP/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>EIGRP详解</title>
      <link>https://www.sumi233.top/CCNP/CCNP%E8%B7%AF%E7%94%B1%20EIGRP%E9%83%A8%E5%88%86/</link>
      <guid>https://www.sumi233.top/CCNP/CCNP%E8%B7%AF%E7%94%B1%20EIGRP%E9%83%A8%E5%88%86/</guid>
      <pubDate>Thu, 21 Nov 2024 01:01:46 GMT</pubDate>
      
        
        
      <description>&lt;meta name=&quot;referrer&quot; content=&quot;no-referr</description>
        
      
      
      
      <content:encoded><![CDATA[<meta name="referrer" content="no-referrer"><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>思科私有的增强型的矢量路由协议</li><li>快速汇聚：采用DUAL来实现快速汇聚</li><li>触发更新</li><li>部分更新：EIGRP发送部分更新，把更新的部分传递给需要的路由器</li><li>使用多播和单播：使用多播和单播而不是广播，多播地址224.0.0.10</li><li>支持VLSM：支持无类</li><li>精密的度量值：能实现不等价的负载均衡</li></ul><h2 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h2><ul><li>邻居发现协议<ul><li>使用Hello包发现邻居，并动态的获悉其直连的网络中的其他路由器</li></ul></li><li>可靠传输协议（RTP）<ul><li>确保EIGRP分组按顺序以可靠的方式传输给所有邻居</li></ul></li><li>DUAL有限状态机<ul><li>选择最低的度量值和无环的路径到达目的网段</li></ul></li><li>协议无关模块<ul><li>EIGRP支持IP、IPv6、Appletalk和IPX，其都有独立EIGRP模块，负责处理网络层协议而异的需求。</li></ul></li></ul><h2 id="EIGRP的三张表"><a href="#EIGRP的三张表" class="headerlink" title="EIGRP的三张表"></a>EIGRP的三张表</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730161963616-a3e42c29-d0d2-4365-b3d0-f1e5f30550fc.png"></p><ul><li>邻居表</li><li>拓扑表</li><li>路由表</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730162218489-49492311-099f-4492-ab81-1f7292fec172.png"></p><h2 id="EIGRP数据包"><a href="#EIGRP数据包" class="headerlink" title="EIGRP数据包"></a>EIGRP数据包</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730162469491-ef6f6e0d-c93a-43a2-911c-db3f1413fa94.png"></p><h2 id="Metric的计算"><a href="#Metric的计算" class="headerlink" title="Metric的计算"></a>Metric的计算</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730163258199-be43445b-6cd6-40ed-b80c-e8d37f27b360.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730163274887-11941729-c27e-4e74-98e2-ef579f23049b.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730163485100-1b7af06d-b867-41af-a48c-05d2e96f2577.png"></p><p>默认K1&#x3D;1,K2&#x3D;0,K3&#x3D;1,K4&#x3D;0,K5&#x3D;0</p><p>延迟取值沿路所有数据出接口(或路由入口)延迟的累加</p><p>DLY&#x3D; 延迟 (us) &#x2F; 10 x 256</p><p>带宽取值沿路所有数据出接口(或路由入口)带宽的最低值</p><p>BW&#x3D; [ 10000000 &#x2F; 带宽 (Kbps) ] x 256</p><p><strong>EIGRP路由metric默认为延迟+带宽</strong></p><hr><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730163876261-21d8ff7a-5ece-432c-bf72-da5da25f67d7.png"></p><p>A路由器上，看到的3.3.3.0&#x2F;24的路由metric(路径1)?</p><p>BW&#x3D;10^7&#x2F;1544*256&#x3D;6476(去掉小数)*256&#x3D;1657856</p><p>DLY&#x3D;20000&#x2F;10<em>256+5000&#x2F;10</em>256&#x3D;640000</p><p>Metric&#x3D;640000+1657856&#x3D;2297856</p><h2 id="初始路由发现"><a href="#初始路由发现" class="headerlink" title="初始路由发现"></a>初始路由发现</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730164083165-6ad1f436-b29c-4e42-8178-0df9cd83b893.png"></p><p>机翻过程</p><ul><li>Hello包 1.我是路由器A，链接上是谁?</li><li>Hello包 2.你好，我是路由器B。</li><li>Update包 3.下面是我完整的路由信息。</li><li>ACK包 4.感谢提供的信息!</li><li>Update包 5.下面是我完整的路线信息。</li><li>ACK包 6.感谢提供的信息! （凝聚）</li></ul><h2 id="DUAL算法"><a href="#DUAL算法" class="headerlink" title="DUAL算法"></a>DUAL算法</h2><ul><li>Diffusing Update Algorithm 用于计算最佳无环路径和备用路径</li></ul><h3 id="实例1"><a href="#实例1" class="headerlink" title="实例1"></a>实例1</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730165228311-05385374-7357-431e-968e-97b968881d03.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730165266167-e22f9b6a-06d3-4daa-b10a-16b88ae48a9f.png"></p><ul><li>将1.0的metric设置为不可达(-1表示不可达)</li><li>由于没有FS1.0被标记为Active状态</li><li>D向C及E发送查询信息，询问去往1.0的替代路径</li><li>D将C及E标记为未应答查询(q)</li><li>路由器C及E将经由D路由器前往网络1.0的路径标记为不可达</li><li>路由器C发送应答消息给D，指出到达1.0网段的路径没变</li><li>D收到C的应答，将C的查询未应答标记删除</li><li>保持前往1.0路由的active状态，同时等待E的应答</li><li>E由于从C前往1.0网段的AD值&#x3D;3，不小于原来的FD&#x3D;3，所以E将路由标记为active，且向C查询，并将C标记为查询未应答</li><li>D收到E的应答消息</li><li>删除E的查询未应答标记</li><li>计算新的FD将后继路由加入到拓扑表</li><li>将1.0路由切换到passive</li></ul><h2 id="几个术语"><a href="#几个术语" class="headerlink" title="几个术语"></a>几个术语</h2><p>后继路由器</p><p>可行距离(FD)</p><p>可行后继路由器(FS)</p><p>通告距离(AD)</p><p>可行条件，或称可行性条件(FC)</p><h2 id="配置和验证"><a href="#配置和验证" class="headerlink" title="配置和验证"></a>配置和验证</h2><h3 id="Passive-interface配置"><a href="#Passive-interface配置" class="headerlink" title="Passive-interface配置"></a>Passive-interface配置</h3><p><code>Router(config-router)#passive-interface &#123;type number&#125; | default</code></p><ul><li>该命令用于将特定接口设置为被动状态，defaut将所有路由器接白设置为被动状态</li></ul><p>被动接口作用如下</p><ul><li>禁止通过被动接口建立邻接关系</li><li>禁止通过被动接口接收或发送路由更新让EIGRP进程通告被动接口连接的子网查看:</li></ul><p><code>show ip protocols</code></p><p><code>show ip eigrp neighbor</code></p><h2 id="EIGRP路由汇总"><a href="#EIGRP路由汇总" class="headerlink" title="EIGRP路由汇总"></a>EIGRP路由汇总</h2><h3 id="EIGRP自动汇总"><a href="#EIGRP自动汇总" class="headerlink" title="EIGRP自动汇总"></a>EIGRP自动汇总</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730170203332-86774a59-6816-4126-a00b-79a436b93c7e.png"></p><p><strong>关闭自动汇总</strong></p><p><code>Router(config-router)# no auto-summary</code></p><p><strong>配置手工汇总</strong></p><p><code>Router(config-if)# ip summary-address eigrp as-number address mask [admin-distance]</code></p><ul><li>手工配置汇总时，仅当路由选择表中至少有一条该汇总路由的明细路由时，汇总路由才被通告出去。</li><li>ip summary-address eigrp进行汇总的路由AD&#x3D;5</li></ul><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><ul><li>等价负载均衡</li><li>EIGRP在度量值相同的所有路径之间分配数据流量，默认为4条等价路径之间均衡IP负载，最大可为16条</li><li><code>Router(config-router)# Maximum-paths maximum-path</code></li></ul><h3 id="非等价均衡"><a href="#非等价均衡" class="headerlink" title="非等价均衡"></a>非等价均衡</h3><p><strong>EIGRP也能在度量值不同的多条路径之间负载均衡</strong></p><p><code>Router(config-router)# Variance multiplier</code></p><ul><li>multplier默认值为1，范围1~128</li><li>只有可行路径才被用于负载均衡，可行条件为：<ul><li>路由必须是无环的。（即AD&lt;FD min）</li><li>FD&lt;&#x3D; FD min X multiplier</li></ul></li><li>注：variance不指定最大路径，而指定了度量值的范围</li></ul><h3 id="例："><a href="#例：" class="headerlink" title="例："></a>例：</h3><p><code>Router(config-router)# Variance 2</code></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730188848991-445331a1-6714-448c-8a92-04f2e7af5376.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730188866082-9c793dc2-be71-4394-9377-2c39b7231688.png"></p><h2 id="EIGRP认证"><a href="#EIGRP认证" class="headerlink" title="EIGRP认证"></a>EIGRP认证</h2><h3 id="路由器使用两种身份验证方式"><a href="#路由器使用两种身份验证方式" class="headerlink" title="路由器使用两种身份验证方式"></a>路由器使用两种身份验证方式</h3><ul><li>简单密码身份验证<ul><li>IS-IS</li><li>OSPF</li><li>RIPv2</li></ul></li><li>MD5身份验证<ul><li>OSPF</li><li>BGP</li><li>EIGRP</li><li>RIPv2</li></ul></li></ul><h3 id="EIGRP-MD5身份验证配置"><a href="#EIGRP-MD5身份验证配置" class="headerlink" title="EIGRP MD5身份验证配置"></a>EIGRP MD5身份验证配置</h3><ul><li>定义key chain（全局模式）<ul><li><code>Key chain name-of-chain</code></li><li><code>key key-id </code></li><li><code>key-string text</code></li><li><code>accept-lifetime start-time (infinite end-time duration seconds&#125;</code></li><li><code>send-lifetime start-time &#123;infinite | end-time | duration seconds&#125;</code></li></ul></li><li>关联key chain（接口模式）<ul><li><code>ip authentication key-chain eigrp autonomous-system name-of-chain</code></li></ul></li><li>启用认证（接口模式）<ul><li><code>ip authentication mode eigrp autonomous-system md5</code></li></ul></li></ul><h4 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730189387252-e032d95a-10b6-4916-a220-919f6941dd64.png"></p><p><code>show ip eigrp neighbors</code></p><p><code>show ip route</code></p><p><code>show ip eigrp interface detail</code></p><h2 id="大型网络EIGRP的可扩展性"><a href="#大型网络EIGRP的可扩展性" class="headerlink" title="大型网络EIGRP的可扩展性"></a>大型网络EIGRP的可扩展性</h2><p>大型EIGRP网络通常存在以下一些问题</p><ul><li>需要处理的路由表很大</li><li>大量的邻居，要维护庞大的拓扑表</li><li>需要交换大量的路由更新，发送大量的查询和应答</li></ul><p>这使得影响网络的可扩展性的变量变多，如：</p><ul><li>邻居间交换的信息量</li><li>路由器数量</li><li>拓扑深度</li><li>网络中的替代路径数</li></ul><h2 id="陷入主动状态"><a href="#陷入主动状态" class="headerlink" title="陷入主动状态"></a>陷入主动状态</h2><ul><li>路由器陷入主动状态并因此发起查询，仅当收到每个查询的应答后，该路由器才会脱离主动状态进入被动状态</li><li>如果路由器在3分钟肉没有收到查询应答，路由将陷入主动状态(SIA)此时路由器将重置与未应答的邻居之间的邻接关系。</li></ul><p>导致路由进入SIA的常见原因</p><ul><li>路由器太忙无法回答查询</li><li>路由器之间的链路质量低劣</li><li>单向链路</li></ul><h2 id="防范SIA"><a href="#防范SIA" class="headerlink" title="防范SIA"></a>防范SIA</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730249689117-deda2787-45c7-4c17-93c9-5d4919815bb5.png"></p><ul><li>EIGRP分组新增加了SIA-查询和SIA-应答，是由主动过程改进的</li></ul><p><strong>改进前</strong>:主动定时器到期后，A重置与B的邻接关系，但问题出在B和C之间的链路上</p><p><strong>改进后</strong>:主动定时器过半后，A发送SIA-查询，而B确认查询，从而保持邻接关系</p><h2 id="限制查询范围"><a href="#限制查询范围" class="headerlink" title="限制查询范围"></a>限制查询范围</h2><ul><li>确定好路由需求后，可提高EIGRP的可扩展性，使用以下两种方式<ul><li>在合适的路由器上使用路由汇总</li><li>将远程路由器设置有末节EIGRP路由器</li></ul></li><li>将远程路由器设置有末节EIGRP路由器</li><li>中央-分支网络拓扑中，stub路由器将所有非本地数据流转发给hub路由器，而无需保存完整的路由表。</li><li>对于hub路由器来说，不应将stub路由器最为中转路由器，禁止stub路由器将hub路由器通告给其他的hub。</li><li>stub路由器不会收到查询，与stub区域相连的hub路由器将代表末节i由器对查询做出应答。</li><li>未节路由器时指:该路由器与网络核心相连，且不会被用来中转数据未节路由器的EIGRP邻居全部都是中央路由器:</li></ul><h3 id="使用路由汇总"><a href="#使用路由汇总" class="headerlink" title="使用路由汇总"></a>使用路由汇总</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730250750824-bcc81bb9-9bfe-45ec-a6ff-82e841cd2b18.png"></p><ul><li>查询在收到汇总路由的路由器结束</li><li>仅当路由表中有被查询的网络完全匹配的路由时，远程路由器才会进一步传播查询</li></ul><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Router(config)# router eigrp autonomous-system</span><br><span class="line">#EIGRP将autonomous-system参数称为“自治系统”编号。</span><br><span class="line">Router(config-router)# network network-number [wildcard-mask]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Router(config)# lp default-network network-number</span><br><span class="line">#将路由表中某个网络宣告为缺省网络</span><br><span class="line">Router(config-router)# network network-number</span><br><span class="line">#将指定的网络号通告给其他的路由器</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%80%9D%E7%A7%91/">思科</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://www.sumi233.top/tags/CCNP/">CCNP</category>
      
      
      <comments>https://www.sumi233.top/CCNP/CCNP%E8%B7%AF%E7%94%B1%20EIGRP%E9%83%A8%E5%88%86/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>OSPF和LSA详解</title>
      <link>https://www.sumi233.top/CCNP/CCNP%E8%B7%AF%E7%94%B1%20OSPF%E5%92%8CLSA%E9%83%A8%E5%88%86/</link>
      <guid>https://www.sumi233.top/CCNP/CCNP%E8%B7%AF%E7%94%B1%20OSPF%E5%92%8CLSA%E9%83%A8%E5%88%86/</guid>
      <pubDate>Thu, 21 Nov 2024 01:01:46 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;OSPF&quot;&gt;&lt;a href=&quot;#OSPF&quot; class=&quot;hea</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="OSPF"><a href="#OSPF" class="headerlink" title="OSPF"></a>OSPF</h1><h2 id="基础回顾"><a href="#基础回顾" class="headerlink" title="基础回顾"></a>基础回顾</h2><p>OSPF（Open Shortest Path First，开放最短路径优先）是一种链路状态路由协议，无路由循环(全局拓扑)，属于IGP。RFC2328，“开放”意味着非私有的，对公众开放的。</p><ul><li>OSPF协议使用的组播地址<ul><li>所有OSPF路由器224.0.0.5；DR BDR-224.0.0.6</li></ul></li><li>OSPF的报文封装<ul><li>OSPF协议包直接封装于IP，协议号89。</li></ul></li><li>OSPF路由协议的管理距离:110</li></ul><h2 id="网络类型"><a href="#网络类型" class="headerlink" title="网络类型"></a>网络类型</h2><ul><li><strong>点对点</strong></li><li><strong>广播</strong></li><li><strong>非广播</strong><ul><li>非广播又包含了5种运行模式：<ul><li>NBMA（RFC）</li><li>P2MP（RFC）</li><li>P2MP nonbroadcast（CISCO）</li><li>Broadcast（CISCO）</li><li>P2P（CISCO）</li></ul></li></ul></li></ul><h3 id="点对点类型"><a href="#点对点类型" class="headerlink" title="点对点类型"></a>点对点类型</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729597653542-543c407b-5fbf-4a07-addb-ef4a220af580.png"></p><ul><li>如果二层的协议为PPP、HDLC等，则OSPF网络类型为P2P</li><li>如果帧中继子接口类型为P2P的，则OSPF网络类型也为P2P</li><li>不选举DR、BDR</li><li>使用组播地址224.0.0.5</li><li>OSPF能够根据二层封装自动检测到P2P网络类型</li></ul><h3 id="广播型多路访问"><a href="#广播型多路访问" class="headerlink" title="广播型多路访问"></a>广播型多路访问</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729597748803-b40f6f84-0db0-4015-b26a-7db24de3eec2.png"></p><ul><li>通常出现在以太网</li><li>选举DR、BDR</li><li>所有路由器均与DR及BDR建立邻接关系</li><li>使用组播地址224.0.0.5及224.0.0.6</li></ul><h3 id="NBMA网络选择OSPF的模式"><a href="#NBMA网络选择OSPF的模式" class="headerlink" title="NBMA网络选择OSPF的模式"></a>NBMA网络选择OSPF的模式</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729597933313-047b21b5-add8-4100-bfee-794b3879c1ab.png"></p><ul><li>在帧中继主接口上，默认的OSPF模式为非广播</li><li>在点到点帧中继子接口上，默认的OSPF模式为点到点</li><li>在帧中继多点子接口上，默认的OSPF模式为非广播</li></ul><h2 id="链路状态协议"><a href="#链路状态协议" class="headerlink" title="链路状态协议"></a>链路状态协议</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729582503246-0528dc00-6265-464a-a66c-0dbf9991d7f2.png"></p><h2 id="网络优化-Router-ID"><a href="#网络优化-Router-ID" class="headerlink" title="网络优化-Router-ID"></a>网络优化-Router-ID</h2><ul><li>为了提高路由器的RID的稳定性和网络的稳定性建议手动的设置路由器的Router-ID</li><li>在OSPF的进程下修改:router-id &lt;x.x.x.x&gt;</li><li>在项目实施中，一般是建立loopback口，并且手工指定loopback口地址为router-id</li></ul><h2 id="DR、BDR"><a href="#DR、BDR" class="headerlink" title="DR、BDR"></a>DR、BDR</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729583194925-732e5d65-058d-45b9-b919-c1a4e44723d4.png"></p><ul><li>DR的作用：多路访问中为了减少邻接关系（N平方的问题）和LSA的泛洪，采用DR机制，BDR提供了备份</li><li>MA网络上所有的路由器均与DR、BDR建立邻居关系</li></ul><h2 id="DR选举比较顺序"><a href="#DR选举比较顺序" class="headerlink" title="DR选举比较顺序"></a>DR选举比较顺序</h2><ul><li>接口优先级数字越大越优先（优先级为0不能参与DR的选举）、</li><li>RouterID越大越好</li><li>稳定性压倒一切（非抢占）</li><li>通过控制接口优先级是控制DR选举的好办法</li><li>DR的选举是基于接口的，如果说某个路由器是DR，这种说法是错误的</li></ul><h2 id="DR及BDR选举的控制"><a href="#DR及BDR选举的控制" class="headerlink" title="DR及BDR选举的控制"></a>DR及BDR选举的控制</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729597316618-061a5e61-a25e-40b1-885d-8a2d9fbd2000.png"></p><p><code>ip ospf priority 10</code></p><p>比较次序</p><ul><li>优先级</li><li>路由器ID</li><li>优先级为0的不能成为DR或者BDR</li></ul><h2 id="链路的开销"><a href="#链路的开销" class="headerlink" title="链路的开销"></a>链路的开销</h2><ul><li>自动计算:COST&#x3D;参考带宽(10的8次方)&#x2F;出口带宽</li><li>接口带宽为接口逻辑带宽，可以使用bandwith命令调整，主要用于路由计算而不是接口物理带宽，但一般情况:接口逻辑带宽&#x3D;接口物理带宽。</li><li>手工修改开销的方法</li></ul><p><code>Router(config)# int serial 1</code></p><p><code>Router(config-if)# ip ospf cost 100//该命令在收路由的入口</code></p><ul><li>可修改参考带宽,来保障OSPF在现如今的网络中正常运转</li></ul><p><code>auto-cost reference-bandwidth &lt;参考带宽以Mbits为单位&gt;</code></p><h2 id="三张表"><a href="#三张表" class="headerlink" title="三张表"></a>三张表</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729583395100-67ec4bc7-0287-42cc-8d1b-76f7f8ece3b8.png"></p><ul><li>相邻的两台路由器运行OSPF协议</li><li>两台路由器直接连接</li><li>在同一自治系统</li><li>Hello&#x2F;Dead时间一致</li><li>区域ID一致</li><li>认证密码一致</li><li>MTP值一致</li><li>*网络类型一致</li><li>*链路两端接口掩码一致</li></ul><h2 id="报文类型"><a href="#报文类型" class="headerlink" title="报文类型"></a>报文类型</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729583532652-1fe547e6-7e27-4e76-bb58-191ed1d3961e.png"></p><ul><li>Hello建立和维护OSPF邻居关系</li><li>DBD链路状态数据库描述信息(描述LSDB中LSA头部列表)</li><li>LSR链路状态请求,向OSPF邻居请求链路状态信息</li><li>LSU链路状态更新(包含一条或多条LSA)</li><li>LSAck确认报文</li></ul><h2 id="OSPF邻居建立过程"><a href="#OSPF邻居建立过程" class="headerlink" title="OSPF邻居建立过程"></a>OSPF邻居建立过程</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729584652052-d4b95daa-8884-47ae-920e-34ad316f4a3a.png"></p><h3 id="邻居发现"><a href="#邻居发现" class="headerlink" title="邻居发现"></a>邻居发现</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729584326053-0256b458-b096-42dc-a8e0-e285f71dc6cd.png"></p><h3 id="路由发现阶段"><a href="#路由发现阶段" class="headerlink" title="路由发现阶段"></a>路由发现阶段</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729584355522-638bec3d-ff82-4db9-90ba-3579b3a0f3f0.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729584499985-4d227371-bb64-4bbd-ba77-fdbe2784854c.png"></p><h2 id="OSPF路由器建立邻接关系的过程详细描述"><a href="#OSPF路由器建立邻接关系的过程详细描述" class="headerlink" title="OSPF路由器建立邻接关系的过程详细描述"></a>OSPF路由器建立邻接关系的过程详细描述</h2><ul><li>OSPF路由器接口up，发送Hello包(NBMA模式时将进入Attempt状态)。</li><li>OSPF路由器接口收到Hello包，进入Init状态;并将该Hello包的发送者的RouterID添加到Hello包(自己将要从该接口发送出去的Hello包)的邻居列表中。</li><li>OSPF路由器接口收到邻居列表中含有自己RouterID的Hello包，进入Two-way状态形成OSPF邻居关系，并把该路由器的RouterID添加到自己的OSPF邻居表中</li><li>在进入Two-way状态后，广播、非广播网络类型的链路，在DR选举等待时间内进行DR选举。点对点没有这个过程。</li><li>在DR选举完成或跳过DR选举后，建立OSPF邻接关系，进入exstart(准启动)状态并选举DBD交换主从路由器，以及由主路由器定义DBD序列号，RouterID大的为主路由器。目的是为了解决DBD自身的可靠性。</li><li>主从路由器选举完成后，进入Exchange(交换)状态，交换DBD信息。DBD交换完成后，进入Loading状态，对链路状态数据库和收到的DBD的LSA头部进行比较，发现自己数据库中没有的LSA就发送LSR，向邻居请求该LSA;邻居收到LSR后，回应LSU;收到邻居发来的LSU，存储这些LSA到自己的链路状态数据库，并发送LSAck确认。</li><li>LSA交换完成后，进入FULL状态，所有形成邻居的OSPF路由器都拥有相同链路状态数据库。</li><li>定期发送Hello包，维护邻居关系。</li></ul><h2 id="OSPF邻接关系"><a href="#OSPF邻接关系" class="headerlink" title="OSPF邻接关系"></a>OSPF邻接关系</h2><ul><li>路由器之间链路状态信息必须同步，LSA具有以下特征：</li><li>LSA（LSU）是可靠的传输，需要LSAck确认</li><li>LSA有序列号和寿命，以确保是最新的LAS</li><li>LSA被定期的刷新以确保拓扑信息的有效性</li></ul><h2 id="链路状态数据的状态"><a href="#链路状态数据的状态" class="headerlink" title="链路状态数据的状态"></a>链路状态数据的状态</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729585188616-4c4dd0cf-7eae-44df-8df2-4308bf761556.png"></p><h2 id="OSPF多区域概念"><a href="#OSPF多区域概念" class="headerlink" title="OSPF多区域概念"></a>OSPF多区域概念</h2><h3 id="单区域"><a href="#单区域" class="headerlink" title="单区域"></a>单区域</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729585216495-f1b2e4b6-e173-4b2d-9bd3-ec5d0a567d94.png"></p><ul><li>收到的LSA通告太多了，OSPF路由器的负担很大</li><li>内部动荡会引起全网路由器的完全SPF计算</li><li>资源消耗过多，LSDB庞大，设备性能下降，影响数据转发</li><li>每台路由器都需要维护的路由表越来越大，单区域内路由无法汇总</li></ul><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><ul><li>把大型网络分隔为多个较小，可管理的单元-区域 area;</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729585389704-f78a98ae-479f-43ea-882e-53cc2ffca7c3.png"></p><ul><li>划分区域的好处</li><li>减少了LSA洪泛的范围，有效地把拓扑变化控制在区域内，提高了网络的稳定性拓扑的变化影响可以只限制涉及本区域</li><li>多区域提高了网络的扩展性，有利于组建大规模的网络</li><li>在区域边界可以做路由汇总，减小了路由表</li></ul><h3 id="OSPF路由器角色"><a href="#OSPF路由器角色" class="headerlink" title="OSPF路由器角色"></a>OSPF路由器角色</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729585477757-23c7849f-09a3-4fee-b0a7-5e1fdd6742c5.png"></p><h2 id="在帧中继环境下的OSPF"><a href="#在帧中继环境下的OSPF" class="headerlink" title="在帧中继环境下的OSPF"></a>在帧中继环境下的OSPF</h2><h3 id="NBMA网络选择OSPF模式"><a href="#NBMA网络选择OSPF模式" class="headerlink" title="NBMA网络选择OSPF模式"></a>NBMA网络选择OSPF模式</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729816380101-0577bb5b-d702-4859-8ad0-e5b784de728e.png"></p><ul><li>在帧中继的主接口上，默认的OSPF模式为非广播</li><li>在点到点帧中继子接口中，默认的OSPF模式为点对点</li><li>在帧中继多点子接口上，默认的OSPF模式为非广播</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729818741701-a39e2439-6c8e-4b10-9bba-d886484fee5c.png"></p><p>如果是非广播这一 OSPF 网络类型,则 OSPF 也不会主动发送组播包去发现邻居，因此邻居关系建立这</p><p>里也有问题。</p><h3 id="NBMA网络下OSPF的运行"><a href="#NBMA网络下OSPF的运行" class="headerlink" title="NBMA网络下OSPF的运行"></a>NBMA网络下OSPF的运行</h3><h4 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729818282720-8e8c7e7b-6548-41cd-b825-64c10f08f90b.png"></p><ul><li>指定OSPF网络类型为broadcast</li><li>使用OSPF多播hello分组自动来自动发送邻居</li><li>选举DR和BDR</li><li>DR和BDR必须与其他所有路由器直接相连</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Router(config)# interface serial 0/0</span><br><span class="line">Router(config-if)# encapsulation frame-relay</span><br><span class="line">Router(config-if)# ip ospf network broadcast</span><br></pre></td></tr></table></figure><h4 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729818405731-56d45fde-6d9d-4394-b5a6-b9a317b9c04a.png"></p><ul><li>网络类型为non-broadcast（默认）</li><li>手动指定邻居</li><li>选举DR和BDR</li><li>DR和BDR必须与其他所有路由器直接相连</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Router(config)#interface serial 0/0</span><br><span class="line">Router(config)#neighbor ip-address [priority number] [poll-interval number] [cost number] [database-filter all]</span><br><span class="line">Router(config-if)#encapsulation frame-relay</span><br><span class="line">Router(config-if)#ip ospf network non-broadcast</span><br></pre></td></tr></table></figure><h4 id="方式三"><a href="#方式三" class="headerlink" title="方式三"></a>方式三</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729818635272-2362be8e-2382-4c0a-94eb-f1f6c6f9ecca.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">interface serial0/0</span><br><span class="line">encapsulation frame-relay</span><br><span class="line">ip ospf network point-to-multipoint</span><br><span class="line">router ospf 100</span><br><span class="line">network 202.101.100.0 0.0.0.255 area 0</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">interface Serial0/0</span><br><span class="line">encapsulation frame-relay</span><br><span class="line">ip ospf network point-to-multipoint</span><br><span class="line">ip ospf priority 0</span><br></pre></td></tr></table></figure><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Router(config)# router ospf process-id [vrf vpn-name]</span><br><span class="line">Router(config-router)# network ip-address wildcard-mask area area-id</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Router(config-router)# router-id ip-address</span><br><span class="line">Router# clear ip ospf process</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Router(config-if)# ip ospf network [ &#123;broadcast | non-broadcast | point-to-multipoint [non-broadcast] | point-to-point&#125; ]</span><br></pre></td></tr></table></figure><h1 id="LSA"><a href="#LSA" class="headerlink" title="LSA"></a>LSA</h1><h2 id="LSA简介"><a href="#LSA简介" class="headerlink" title="LSA简介"></a>LSA简介</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729819118059-283bca5c-1922-4be5-944a-07aaab2b1e10.png"></p><ul><li><strong>Link State Advertisement</strong>（链路状态通告），这是在网络协议中，尤其是 OSPF（开放最短路径优先）和 IS-IS（中间系统到中间系统）中使用的一种消息类型。</li></ul><h2 id="LSA类型"><a href="#LSA类型" class="headerlink" title="LSA类型"></a>LSA类型</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729819172881-af6ef12d-89f7-42af-9256-e129103f1207.png"></p><h3 id="类型1-路由器LSA-Router-LSA"><a href="#类型1-路由器LSA-Router-LSA" class="headerlink" title="类型1 路由器LSA Router LSA"></a>类型1 路由器LSA Router LSA</h3><ul><li>每个路由器针对它所在的区域产生LSA1，描述区域内部与路由器直连的链路的信息(包括链路类型，Cost等)</li><li>LSA1只允许在本区域内洪泛，不允许跨越ABR</li><li>LSA中会标识路由器是否是ABR(B比特置位),ASBR(E比特置位)或者是Virtual-link(V比特置位)的端点的身份信息</li></ul><h3 id="类型2-网络LSA-Network-LSA"><a href="#类型2-网络LSA-Network-LSA" class="headerlink" title="类型2 网络LSA Network LSA"></a>类型2 网络LSA Network LSA</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729821435220-c6372be2-8ace-40f8-9842-95f87f104bc8.png"></p><h3 id="类型1、2总结"><a href="#类型1、2总结" class="headerlink" title="类型1、2总结"></a>类型1、2总结</h3><ul><li>通过LSA1，LSA2在区域内洪泛,使区域内每个路由器的LSDB达到同步计算生成标识为“O”的路由，解决区域内部的通信问题</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729821481351-2632bc17-429c-4770-aa0a-fcea98417f5c.png"></p><h3 id="类型3-网络汇总LSA-Network-Summary-LSA"><a href="#类型3-网络汇总LSA-Network-Summary-LSA" class="headerlink" title="类型3 网络汇总LSA Network Summary LSA"></a>类型3 网络汇总LSA Network Summary LSA</h3><ul><li>由ABR生成，实际上就是将区域内部的Type1Type2的信息收集起来以路由子网的形式扩散出去，这就是SummayLSA中sunmay的含义(注意这里的summary与路由汇总没有关系)</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729821558294-c0336486-6143-4997-b4c4-c9602d37a3b7.png"></p><p>Type3 的链路状态ID是目的网络地址。</p><ul><li>如果一台ABR路由器在与它本身相连的区域内有多条路由可以到达目的地,那么它将只会始发单一的一条网络汇总LSA到骨干区域,而且这条网络汇总LSA是上述多条路由中代价最低的。</li><li>ABR收到来自同区域其它ABR传来的Type3 LSA后重新生成新的Type3 LSA（Advertising Router 改为自己）然后继续在整个OSPF系统内扩散</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729822506797-293ae502-10d7-49ed-a0ab-b1733b5c626e.png"></p><h3 id="类型4-ASBR-Summary-LSA"><a href="#类型4-ASBR-Summary-LSA" class="headerlink" title="类型4 ASBR Summary LSA"></a>类型4 ASBR Summary LSA</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729822619398-8be5539d-1f33-4d4e-9031-46f359fc9edb.png"></p><ul><li>ASBR Summary LSA由ABR生成，用于描述ABR能够到达的ASBR它的链路状态ID为目的ASBR的RID。</li></ul><h3 id="类型5-自治系统外LSA-AS-external-LSA"><a href="#类型5-自治系统外LSA-AS-external-LSA" class="headerlink" title="类型5 自治系统外LSA AS external LSA"></a>类型5 自治系统外LSA AS external LSA</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729823363172-eff49501-c34f-42fe-a0c6-64d4b5b2b16e.png"></p><ul><li>Autonomous System External LSA由ASBR生成用于描述OSPF自治域系统外的目标网段信息链路状态ID是目的地址的IP网络号</li><li>外部路由通过重发布，引入OSPF路由域，相应信息(路由条目)由ASBR以LSA5的形式生成然后进入OSPF路由域</li><li>缺省情况下，LSA5生成路由用OE2表示，可强行指定为OE1<ul><li>OE2 开销&#x3D;外部开销</li><li>OE1 开销&#x3D;外部开销+内部开销</li></ul></li><li>LSA5不允许进入特殊区域——stub存根区&amp; NSSA区</li></ul><h4 id="OE1、OE2的区别"><a href="#OE1、OE2的区别" class="headerlink" title="OE1、OE2的区别"></a>OE1、OE2的区别</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729823569011-bb805760-c712-4ac8-8c02-a7cb40961599.png"></p><h3 id="类型7-NSSA中的外部LSA-NSSA-External-LSA"><a href="#类型7-NSSA中的外部LSA-NSSA-External-LSA" class="headerlink" title="类型7 NSSA中的外部LSA NSSA External LSA"></a>类型7 NSSA中的外部LSA NSSA External LSA</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729823624411-2bc6ff8e-a565-4ddc-b641-e6f34501a7b2.png"></p><ul><li>在NSSA(非完全存根区域)not-so-stubby area中ASBR针对外部网络产生类似于LSA5的LSA类型7</li><li>LSA类型7只能在NSSA区域中洪泛，到达NSSA区域ABR后，NSSAABR将其转换成LSA类型5外部路由，传播到Area0，从而传播到整个OSPF路由域</li><li>生成路由缺省用ON2表示，也可指定为ON1</li></ul><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="OSPF-LSDB和路由表"><a href="#OSPF-LSDB和路由表" class="headerlink" title="OSPF LSDB和路由表"></a>OSPF LSDB和路由表</h2><ul><li>查看路由表 <code>show ip route ospf</code></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729823720364-54258c69-3cd1-4901-b51f-4a5a1878d36e.png"></p><ul><li>O  &gt; O IA &gt; O E1 &gt; O E2</li></ul><h2 id="特殊区域的配置nssa"><a href="#特殊区域的配置nssa" class="headerlink" title="特殊区域的配置nssa"></a>特殊区域的配置nssa</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730100982306-4a28f112-d02a-4537-be77-83245f365f85.png"></p><ul><li>R1的配置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">router ospf 1</span><br><span class="line">network 192.168.12.0 0.0.0.255 area 1</span><br><span class="line">area 1 nssa</span><br></pre></td></tr></table></figure><ul><li>R2的配置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">router ospf 1</span><br><span class="line">network 192.168.12.0 0.0.0.255 area 1</span><br><span class="line">network 192.168.23.0 0.0.0.255 area 0</span><br><span class="line">area 1 nssa </span><br><span class="line">area 1 nssa default-information-orginate #设置默认区域</span><br></pre></td></tr></table></figure><h2 id="特殊区域的配置-特殊区域在工程中的运用"><a href="#特殊区域的配置-特殊区域在工程中的运用" class="headerlink" title="特殊区域的配置 特殊区域在工程中的运用"></a>特殊区域的配置 特殊区域在工程中的运用</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730101580835-773919f9-0729-4bd0-87b3-657e709babd1.png"></p><ul><li>区域划分（含特殊区域）</li><li>路由汇总</li><li>默认路由传递</li><li>Passive-interface</li></ul><h2 id="OSPF高级功能配置及验证"><a href="#OSPF高级功能配置及验证" class="headerlink" title="OSPF高级功能配置及验证"></a>OSPF高级功能配置及验证</h2><ul><li>Passive-interface<ul><li><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730103668216-946f3d0c-b38a-44c0-b683-614f039a47ee.png"></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">router ospf 1</span><br><span class="line">network 192.168.1.0 0.0.0.255 area 0</span><br><span class="line">network 192.168.12.0 0.0.0.255 area 0</span><br><span class="line">passive-interface fa 0/0</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730104286308-472055dd-f8c1-43d5-882d-bbf2abc09ea6.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">router ospf 1 </span><br><span class="line">network 192.168.1.0 0.0.0.255 area 0</span><br><span class="line">network 192.168.2.0 0.0.0.255 area 0</span><br><span class="line">network 192.168.3.0 0.0.0.255 area 0</span><br><span class="line">network 192.168.12.0 0.0.0.255 area 0</span><br><span class="line">passive-interface default</span><br><span class="line">no passive-interface fa 2/0</span><br></pre></td></tr></table></figure><ul><li>注入默认路由<ul><li><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1730104513770-3af86fb7-7636-46e3-bd19-cc3e78dbdf41.jpeg"></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">router ospf</span><br><span class="line">network 192.168.1.0 0.0.0.255 area 0</span><br><span class="line">network 192.168.2.0 0.0.0.255 area 0 </span><br><span class="line">network 192.168.3.0 0.0.0.255 area 0</span><br><span class="line">default-information originate</span><br></pre></td></tr></table></figure><ul><li>自动汇总<ul><li><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730105593346-f49940e9-7c5d-4a2a-a6f5-a4838f33aa88.png"></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">router ospf 1</span><br><span class="line">summary-address 10.1.0.0 255.255.0.0</span><br></pre></td></tr></table></figure><pre><code>- ![](https://cdn.nlark.com/yuque/0/2024/png/44908083/1730113712965-2913d333-5783-4fa0-b276-eb37021add99.png)</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">router ospf 1</span><br><span class="line">area 2 range 172.16.0.0 255.255.0.0 cost ?</span><br></pre></td></tr></table></figure><ul><li>Virtual-link<ul><li><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730114278625-137e8159-3d3f-440f-a631-622f2624109a.png"></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">router ospf 1</span><br><span class="line">area area-id virtual-link router-id [authentication[message-digest | null]] [hello-interval seconds] [retransmit-interval seconds] [transmit-delay seconds] [dead-interval seconds] [fauthentication-key key] | [message-digest-key key-id md5 key]</span><br></pre></td></tr></table></figure><h2 id="OSPF身份验证"><a href="#OSPF身份验证" class="headerlink" title="OSPF身份验证"></a>OSPF身份验证</h2><ul><li>Null</li><li>简单密码身份验证</li><li>MD5身份验证</li><li>接口认证</li><li>区域认证</li></ul><h3 id="明文"><a href="#明文" class="headerlink" title="明文"></a>明文</h3><p>接口认证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Router(config-if)#ip ospf authentication-key password</span><br><span class="line">Router(config-if)#ip ospf authentication</span><br></pre></td></tr></table></figure><p>区域认证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Router(config-if)#ip ospf authentication-key password</span><br><span class="line">Router(config-router)#area area-id authentication</span><br></pre></td></tr></table></figure><h3 id="密文"><a href="#密文" class="headerlink" title="密文"></a>密文</h3><p>接口认证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Router(config-if)#ip ospf message-digest-key key-id md5 key</span><br><span class="line">Router(config-if)#lp ospf authentication message-digest</span><br></pre></td></tr></table></figure><p>区域认证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Router(config-if)#ip ospf message-digest-key key-id md5 key</span><br><span class="line">Router(config-router)#area 0 authentication messae-digest</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%80%9D%E7%A7%91/">思科</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://www.sumi233.top/tags/CCNP/">CCNP</category>
      
      
      <comments>https://www.sumi233.top/CCNP/CCNP%E8%B7%AF%E7%94%B1%20OSPF%E5%92%8CLSA%E9%83%A8%E5%88%86/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>路由和路径</title>
      <link>https://www.sumi233.top/CCNP/CCNP%E8%B7%AF%E7%94%B1%20%E8%B7%AF%E7%94%B1%E5%92%8C%E8%B7%AF%E5%BE%84/</link>
      <guid>https://www.sumi233.top/CCNP/CCNP%E8%B7%AF%E7%94%B1%20%E8%B7%AF%E7%94%B1%E5%92%8C%E8%B7%AF%E5%BE%84/</guid>
      <pubDate>Thu, 21 Nov 2024 01:01:46 GMT</pubDate>
      
        
        
      <description>&lt;meta name=&quot;referrer&quot; content=&quot;no-referr</description>
        
      
      
      
      <content:encoded><![CDATA[<meta name="referrer" content="no-referrer"><h1 id="路由部分"><a href="#路由部分" class="headerlink" title="路由部分"></a>路由部分</h1><h2 id="网络中使用多种IP路由协议"><a href="#网络中使用多种IP路由协议" class="headerlink" title="网络中使用多种IP路由协议"></a>网络中使用多种IP路由协议</h2><p>需要使用多种IP路由协议的原因-多厂商的路由环境</p><ul><li>网络合并(同一协议或是不同协议)</li><li>从旧的路由协议过渡到新的路由协议</li><li>路由策略的需要(可靠性、冗余性、分流模型等)</li></ul><p>路由重分发(多个重分发点，双向重分发)</p><h2 id="路由重发布"><a href="#路由重发布" class="headerlink" title="路由重发布"></a>路由重发布</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>路由重分发是指连接到不同路由域(自治系统)的边界路由器在他们之间交换和通告路由选择信息的能力。</p><ul><li>从一种协议到另一种协议</li><li>同一种协议的多个实例</li></ul><p>注意</p><ul><li>重分发总是向外的，执行重分发的路由器不会修改其路由表</li><li>路由必须要位于路由表中才能被重分发</li></ul><h3 id="路由重发布-1"><a href="#路由重发布-1" class="headerlink" title="路由重发布"></a>路由重发布</h3><ul><li>重发布要考虑的因素<ul><li>路由回馈</li><li>路由信息不兼容（度量值信息不一致）</li><li>收敛时间不一致（不同路由协议的收敛速度不同）</li></ul></li><li>如果选择最佳路由<ul><li>管理距离</li><li>度量值</li></ul></li></ul><h3 id="路由回馈"><a href="#路由回馈" class="headerlink" title="路由回馈"></a>路由回馈</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730252795715-71f9fcc0-544c-41e7-94a1-cdde5265b108.png"></p><ul><li></li></ul><ul><li>度量值–种子度量值</li><li>路由器通告与其接口直接相连的链路时，使用的初始度量值叫做种子度量值(也叫做默认度量值)，是根据接口的特征得到的。</li><li>种子度量值或默认度量值是在重分发配置期间定义的，并在自治系统内部正常递增，除了OSPF E2路由。</li><li>可使用命令default-metric或是redistribute中使用metric来指定种子度量值</li></ul><h3 id="度量值——默认种子度量值"><a href="#度量值——默认种子度量值" class="headerlink" title="度量值——默认种子度量值"></a>度量值——默认种子度量值</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730253536563-710553ac-ca47-4ce5-9027-a64118280c8e.png"></p><h3 id="单点重分发"><a href="#单点重分发" class="headerlink" title="单点重分发"></a>单点重分发</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730256948062-64555df9-3f06-41ec-b0c2-9c14cd5cc025.png"></p><p>单向重分发</p><p>双向重分发</p><h3 id="多点单向重发布"><a href="#多点单向重发布" class="headerlink" title="多点单向重发布"></a>多点单向重发布</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730257151571-18b8b2e8-3c79-40ea-b97c-d622e5dc20b8.png"></p><h3 id="多点双向重发布"><a href="#多点双向重发布" class="headerlink" title="多点双向重发布"></a>多点双向重发布</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730257180586-f3f245e3-f240-4044-b59e-b2154fde1431.png"></p><h1 id="Passive-interface"><a href="#Passive-interface" class="headerlink" title="Passive-interface"></a>Passive-interface</h1><ul><li>RIP&#x2F;IGRP——在指定接口不向外发送路由更新，但是接收路由更新</li><li>EIGRP——在指定接口不向外发送Hello消息，而且通过这个接口不与其他路由器建立邻接关系，不发送其它EIGRP的数据流</li><li>OSPF——在指定接口不向外发送Hello消息，而且通过这 个接口不与其他路由器建立邻接关系，不发送和接收路由信息。(有些IOS版本中OSPF在被动接口上发送Helo和DBD分组，但是不发送LSU。)</li></ul><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ul><li>汇聚交换机上所有的三层接口都Network进相应的Area</li><li>汇聚交换机将向所有VLAN接口发送HELLO报文，尝试建立邻居关系，而底层的用户也会收到其并不需要的HELLO包</li></ul><h2 id="Passive-interface与单播更新"><a href="#Passive-interface与单播更新" class="headerlink" title="Passive-interface与单播更新"></a>Passive-interface与单播更新</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730339033871-1958274b-9355-4326-a286-f9c3e31efd0e.png"></p><p>配置RIP单播更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Router(config)# router rip</span><br><span class="line">Router(config-router)# passive-interface int-type int-num</span><br><span class="line">Router(config-router)# neighbor 192.168.123.3</span><br></pre></td></tr></table></figure><h2 id="常见路由协议管理距离"><a href="#常见路由协议管理距离" class="headerlink" title="常见路由协议管理距离"></a>常见路由协议管理距离</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730339568655-3eb7af04-e1a6-498c-85a3-f72f55fcd42a.png"></p><h1 id="Route-map"><a href="#Route-map" class="headerlink" title="Route-map"></a>Route-map</h1><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>使用的match命令匹配特定的分组或路由，set修改该分组或路由的相关属性</li><li>Route-map中的语句相当于访问列表中的各行</li><li>Route-map默认为permit，默认序列号为10，序列号不会自动递增，需要指定序列号</li><li>末尾隐含deny any</li><li>单挑match语句包括多个条件时，使用逻辑or运算；多条match语句时，使用逻辑and运算</li></ul><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">match ip address 匹配访问列表或前缀列表</span><br><span class="line">match length 根据分组的第三层长度进行匹配</span><br><span class="line">match interface 匹配下一跳出接口为指定接口之一的路由</span><br><span class="line">match ip next-hop 匹配下一跳地址为特定访问列表中被允许的那些路由</span><br><span class="line">match metric 匹配具有指定度量值的路由</span><br><span class="line">match route-type 匹配指定类型的路由</span><br><span class="line">match community 匹配BGP共同体</span><br><span class="line">match tag 根据路由的标记进行匹配</span><br></pre></td></tr></table></figure><h1 id="distribute-list"><a href="#distribute-list" class="headerlink" title="distribute-list"></a>distribute-list</h1><h2 id="distribute-list-可根据下列因素过滤更新"><a href="#distribute-list-可根据下列因素过滤更新" class="headerlink" title="distribute-list 可根据下列因素过滤更新"></a>distribute-list 可根据下列因素过滤更新</h2><ul><li>入站接口</li><li>出站接口</li><li>从另一种路由协议重分发</li></ul><h2 id="对于距离矢量路由协议"><a href="#对于距离矢量路由协议" class="headerlink" title="对于距离矢量路由协议"></a>对于距离矢量路由协议</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730765382208-5939d7f3-0224-48a4-8bd2-4b38e06c0c22.png"></p><h2 id="对于链路状态路由协议"><a href="#对于链路状态路由协议" class="headerlink" title="对于链路状态路由协议"></a>对于链路状态路由协议</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730765432018-af56c92b-2a62-4a66-8430-79f752fc4a02.png"></p><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730768260182-2e14961d-ad68-4651-ae82-e9eebcc05966.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">R2(config)# access-list 1 permit 192.168.1.0</span><br><span class="line">R2(config)# access-list 1 permit 192.168.2.0</span><br><span class="line">R2(config)# router rip</span><br><span class="line">R2(config-router)# distribute-list 1 out fa 1/0</span><br></pre></td></tr></table></figure><h1 id="prefix-list"><a href="#prefix-list" class="headerlink" title="prefix-list"></a>prefix-list</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730768421821-4f542729-31cd-484e-bd5c-0c7a22b12463.png"></p><ul><li>外部路由172.16.32.0-39.0&#x2F;24，以及汇总路由32.0&#x2F;21被R1引入OSPF现在需在注入过程中，仅将汇总路由32.0&#x2F;21过滤，所有明细放行，使用ACL匹配路由，该如何写?</li></ul><p><code>R1(config)# access-list 1 deny 172.16.32.0#如果加上反掩码呢</code></p><p><code>R1(config)# access-ist 1 permit any</code></p><h2 id="前缀列表"><a href="#前缀列表" class="headerlink" title="前缀列表"></a>前缀列表</h2><ul><li>前缀列表的可控性比访问列表高得多，支持增量修改，更为灵活</li><li>判断路由前缀与前缀列表中的前缀是否匹配</li><li>前缀列表包含序列号，从最小的开始匹配，默认序列为5，以5增加</li><li>如果前缀不与前缀列表中的任何条目匹配，将被拒绝</li></ul><h2 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730771586431-d5907351-8a3b-4875-bb63-9a586ef96637.png"></p><p><code>router(config)# **ip prefix-list** &#123;list-name [**seq** number] &#123;**deny | permit**&#125; _network/length_ [**ge** _ge-value_] [**le** _le-value_]</code></p><p>输入条件：length &lt; ge-value &lt; le-value &lt;&#x3D; 32</p><h3 id="配置示例"><a href="#配置示例" class="headerlink" title="配置示例"></a>配置示例</h3><ul><li>匹配某条特定路由：192.168.1.0&#x2F;24<ul><li><code>ip prefix-list pxlist 192.168.1.0/24</code></li></ul></li><li>匹配默认路由：<ul><li><code>ip prefix-list pxlist permit 0.0.0.0/0</code></li></ul></li><li>匹配所有主机路由：<ul><li><code>ip prefix-list pxlist permit 0.0.0.0/0 ge 32</code></li></ul></li></ul><h1 id="路径控制"><a href="#路径控制" class="headerlink" title="路径控制"></a>路径控制</h1><p>网络实现冗余，还需要考虑以下问题</p><ul><li>弹性：实现链路的主动切换同时备用链路可用于负载均衡</li><li>可用性：从主链路切换到备用链路的时间</li><li>自适应：主链路拥塞时也可以使用冗余路径</li><li>性能：提高带宽的使用率</li></ul><h2 id="路径控制工具"><a href="#路径控制工具" class="headerlink" title="路径控制工具"></a>路径控制工具</h2><ul><li>妥善的编制方案：VLSM和CIDR</li><li>重分发和路由协议的特征</li><li>passive-interface</li><li>distribute-list</li><li>prefix-list</li><li>AD的把控</li><li>route-map</li><li>路由标记</li><li>offset-list</li><li>路由标记</li><li>思科IOS IP SLAs</li><li>PBR</li></ul><h2 id="offset-list的作用"><a href="#offset-list的作用" class="headerlink" title="offset-list的作用"></a>offset-list的作用</h2><ul><li>用于在入站或出站时增大通过EIGRP或RIP获悉的路由度量值</li></ul><p><code>router(config-router)# offset-list &#123;access-list-number| name&#125; &#123;in|out&#125; offset [interface-type interface-number]</code></p><h2 id="offset-list的配置"><a href="#offset-list的配置" class="headerlink" title="offset-list的配置"></a>offset-list的配置</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730773350466-5d587359-93a3-41f8-ae95-2a94868aecb4.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">access-list 1 permit 10.1.1.0</span><br><span class="line">router rip</span><br><span class="line">offset-list 1 out 2 serial 0/0</span><br></pre></td></tr></table></figure><h1 id="PBR策略路由"><a href="#PBR策略路由" class="headerlink" title="PBR策略路由"></a>PBR策略路由</h1><h2 id="PBR"><a href="#PBR" class="headerlink" title="PBR"></a>PBR</h2><ul><li>基于策略的路由比传统路由能力更强，使用更灵活，它使网络管理者不仅能够根据目的地址而且能够根据协议类型、报文大小、应用或IP源地址来选择转发路径。策略可以定义为通过多路由器的负载平衡或根据总流量在各线上进行报文转发的服务质量来定义策略路由。</li><li>策略路由主要对经过路由器的数据流进行分流和过滤以及感兴趣数据流匹配</li></ul><h2 id="传统路由VS策略路由"><a href="#传统路由VS策略路由" class="headerlink" title="传统路由VS策略路由"></a>传统路由VS策略路由</h2><h3 id="传统路由"><a href="#传统路由" class="headerlink" title="传统路由"></a>传统路由</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730775469785-37c97bda-3880-410d-bb4d-3def31028fb9.png"></p><h3 id="策略路由"><a href="#策略路由" class="headerlink" title="策略路由"></a>策略路由</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730775507016-b35087ed-da05-4558-aed6-aafa6e38c85e.png"></p><h2 id="PBR对数据的处理"><a href="#PBR对数据的处理" class="headerlink" title="PBR对数据的处理"></a>PBR对数据的处理</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730775547268-b569e647-03d1-41eb-b6f6-444d7cd1ac02.png"></p><h2 id="配置-3"><a href="#配置-3" class="headerlink" title="配置"></a>配置</h2><ul><li>设定分组的下一跳IP（必须为直连IP）<ul><li><code>set ip next-hop ip-address [...ip-address]</code></li></ul></li><li>设定分组的出接口<ul><li><code>set interface type number [...type number]</code></li></ul></li></ul><h3 id="场景1"><a href="#场景1" class="headerlink" title="场景1"></a>场景1</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1730788273052-453973f9-cb0f-4d85-a1a5-2ed89d2b898b.png"></p><ul><li>当网络正常时，PC访问外网数据走ISP1</li><li>当ISP1宕机时(GW感知到)，数据切换至ISP2</li><li>当ISP1容机时(GW无感知)，数据仍然走ISP1</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">access-list 1 permit any</span><br><span class="line">route-map PBR permit 10</span><br><span class="line">match ip address 1</span><br><span class="line">set ip next-hop 10.1.1.2 10.2.2.2</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%80%9D%E7%A7%91/">思科</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://www.sumi233.top/tags/CCNP/">CCNP</category>
      
      
      <comments>https://www.sumi233.top/CCNP/CCNP%E8%B7%AF%E7%94%B1%20%E8%B7%AF%E7%94%B1%E5%92%8C%E8%B7%AF%E5%BE%84/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>路由选择原理</title>
      <link>https://www.sumi233.top/CCNP/CCNP%E8%B7%AF%E7%94%B1%20%E8%B7%AF%E7%94%B1%E9%80%89%E6%8B%A9%E5%8E%9F%E7%90%86/</link>
      <guid>https://www.sumi233.top/CCNP/CCNP%E8%B7%AF%E7%94%B1%20%E8%B7%AF%E7%94%B1%E9%80%89%E6%8B%A9%E5%8E%9F%E7%90%86/</guid>
      <pubDate>Thu, 21 Nov 2024 01:01:46 GMT</pubDate>
      
        
        
      <description>&lt;meta name=&quot;referrer&quot; content=&quot;no-referr</description>
        
      
      
      
      <content:encoded><![CDATA[<meta name="referrer" content="no-referrer"><h2 id="路由选择原理"><a href="#路由选择原理" class="headerlink" title="路由选择原理"></a>路由选择原理</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729556630961-3d015d9f-3ae5-4c13-80fd-44414035a0ed.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729556639379-05e1075f-512e-4609-9792-e21fcde11d20.png"></p><ul><li>路由信息来源</li><li>管理距离（AD值）</li><li>有类及无类路由查找</li><li>最长匹配原则</li><li>递归查询</li></ul><h2 id="路由信息的来源"><a href="#路由信息的来源" class="headerlink" title="路由信息的来源"></a>路由信息的来源</h2><ul><li>直连路由<ul><li>接口配置IP，该接口的物理层和数据链路层UP</li><li>通过接口感知到的直连网络</li></ul></li><li>静态路由<ul><li>使用静态路由命令手工配置的路由</li></ul></li><li>动态路由<ul><li>通过动态路由协议学习</li><li>常见路由协议：RIP、OSPF、IS-IS、EIGRP、BGP</li></ul></li></ul><h2 id="管理距离（AD值）"><a href="#管理距离（AD值）" class="headerlink" title="管理距离（AD值）"></a>管理距离（AD值）</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729557010043-46b3011e-6b27-48c8-9f06-c8b053d29574.png"></p><h2 id="有类及无类路由查找"><a href="#有类及无类路由查找" class="headerlink" title="有类及无类路由查找"></a>有类及无类路由查找</h2><ul><li><strong>无类路由查找</strong>：路由器不会注意目的地址的类别，它会在目的地址和所有己知的路由之间逐位(bit by bit)执行最长匹配</li><li><strong>有类路由查找</strong>（no ip classless）：路由器收到一个数据包时，先查找目的地址所属主类网络，如果路由表中存在该主类网络的路由，则继续找子网，如果没有子网路由则丢弃数据包（即使本地有默认路由，也同样丢弃），如果有则正常转发;而如果本地路由表里没有该目的地址所属主类网络的路由，则看是否有默认路由，如果有，则转发，如果没有，则丢弃。</li></ul><h2 id="最长匹配原则"><a href="#最长匹配原则" class="headerlink" title="最长匹配原则"></a>最长匹配原则</h2><ul><li>主机地址（主机路径）</li><li>子网</li><li>一组子网（汇总路由）</li><li>主网号</li><li>超网（CIDR）</li><li>缺省地址</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729557446146-ebde076d-6d67-4744-b602-f3af3c202b25.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729558543372-6f0ce184-42bb-46e0-b9de-9f3f89514936.png"></p><h2 id="路由表的查找"><a href="#路由表的查找" class="headerlink" title="路由表的查找"></a>路由表的查找</h2><ul><li>不同的前缀，在路由表中属于不同的路由</li><li>相同的前缀，先比AD，后比metric</li><li>匹配，转发；不匹配，丢弃</li><li>路由器的行为是逐跳的，到目标网络的沿路径每个路由器都必须有关于目标的路由</li><li>数据是双向的，考虑流量的时候，要关注流量的往返</li></ul><h2 id="路由表的递归查询"><a href="#路由表的递归查询" class="headerlink" title="路由表的递归查询"></a>路由表的递归查询</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729558770399-0145f42d-3b34-47d4-8415-b50b98eeaf42.png"></p><h2 id="协议分类"><a href="#协议分类" class="headerlink" title="协议分类"></a>协议分类</h2><ul><li>有类路由选择协议：RIPv1、IGRP<ul><li><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729565436293-0236dbc1-1d8c-4bd1-a0c3-df14ecd55870.png"></li></ul></li><li>无类路由选择协议：OSPF、EIGRP、ISIS、BGP等</li><li>根本区别在于：更新消息中是否含有网络掩码</li></ul><h2 id="浮动的静态路由"><a href="#浮动的静态路由" class="headerlink" title="浮动的静态路由"></a>浮动的静态路由</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729566091093-7800b4ae-dc55-4da4-b7c4-0c96f54807fc.png"></p><ul><li>通过修改缺省的管理具体实现路由冗余</li></ul><h3 id="静态路由汇总"><a href="#静态路由汇总" class="headerlink" title="静态路由汇总"></a>静态路由汇总</h3><ul><li>改变子网掩码，通过汇总路由匹配明细，从而简化路由表</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729578966077-6f787972-1326-45fc-b640-0408a427dc5e.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729580677499-e739e627-2e8e-4eb7-9a22-19a2caf8e673.png"></p><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44908083/1729565692870-f2f68474-85ac-4f44-b6ff-8ff47e689483.png"></p><p><code>Ip route 192.168.10.0 255.255.255.0 192.168.1.1</code></p><p>使用指向下一跳的静态路由</p><p><code>Ip route 192.168.10.0 255.255.255.0 fa 0/0</code></p><p>使用指向出接口的静态路由该条目将作为直连网络输入到路由表中如果出接口为广播型接口，可能会给接口下的节点造成额外的负担(ARP)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Router# show ip route</span><br><span class="line">Gateway of last resort is not set </span><br><span class="line">9.0.0.0/2 4 is subnetted,2 subnets</span><br><span class="line">C9.9.12.0 is directly connected, FastEthernet0/0</span><br><span class="line">S9.9.23.0 is directly connected, FastEthernet0/0</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%80%9D%E7%A7%91/">思科</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://www.sumi233.top/tags/CCNP/">CCNP</category>
      
      
      <comments>https://www.sumi233.top/CCNP/CCNP%E8%B7%AF%E7%94%B1%20%E8%B7%AF%E7%94%B1%E9%80%89%E6%8B%A9%E5%8E%9F%E7%90%86/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Lay2 Switching and VLAN</title>
      <link>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20Lay2%20Switching%20and%20VLAN/</link>
      <guid>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20Lay2%20Switching%20and%20VLAN/</guid>
      <pubDate>Thu, 17 Oct 2024 07:01:46 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Lay2-Switching&quot;&gt;&lt;a href=&quot;#Lay2-S</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Lay2-Switching"><a href="#Lay2-Switching" class="headerlink" title="Lay2 Switching"></a>Lay2 Switching</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><ul><li>基于硬件的交换</li><li>线速转发性能</li><li>低延迟</li><li>定义MAC地址</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/Lay2sw%26vlan%20(10).png"></p><h3 id="Lay2-Frame"><a href="#Lay2-Frame" class="headerlink" title="Lay2 Frame"></a>Lay2 Frame</h3><ul><li>类型字段取值为0800的帧代表IP协议</li><li>类型字段取值为0806的帧代表ARP协议帧</li><li>类型字段取值为0835的帧代表RARP协议帧</li><li>类型字段取值为8137的帧代表IPX和SPX传输协议帧</li></ul><p>Ethernet II帧</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/Lay2sw%26vlan%20(9).png"></p><p>802.3帧</p><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/Lay2sw%26vlan%20(8).png"></p><p>MAC<br><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/Lay2sw%26vlan%20(7).png"></p><ul><li>MAC地址有48位，通常被表示为点分十六进制数</li><li>MAC地址全球唯一，由IEEE对这些地址进行管理和分配</li><li>每个地址由两部分组成，分别是供应商代码和序列号。其中前24位二进制代表该供应商代码。剩下的24位由厂商自己分配</li></ul><h2 id="VLAN概率回顾"><a href="#VLAN概率回顾" class="headerlink" title="VLAN概率回顾"></a>VLAN概率回顾</h2><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/Lay2sw%26vlan%20(6).png"></p><ul><li>形成逻辑的广播域，不同之间的VLAN互相隔离</li><li>一个VLAN中所有设备都是在同一广播域内，不同的VLAN为不同的广播域VLAN之间互相隔离，广播不能跨越VLAN传播，因此不同VLAN之间的设备一般无法互访，不同VLAN间需通过三层设备实现相互通信</li><li>一个VLAN一般为一个逻辑子网，由被配置为此VLAN成员的设备组成VLAN中成员多基于交换机的端口分配，划分VLAN就是对交换机的接口划分</li><li>VLAN工作于OSI参考模型的第二层</li><li>VLAN是二层交换机的一个非常根本的工作机制</li></ul><h2 id="Trunk概念回顾"><a href="#Trunk概念回顾" class="headerlink" title="Trunk概念回顾"></a>Trunk概念回顾</h2><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/Lay2sw%26vlan%20(5).png"></p><ul><li>当一条链路，需要承载多VLAN信息的时候，需使用trunk来实现</li><li>Trunk两端的交换机需擦用相同的干道协议</li><li>一般见于交换机之间或交换机与路由器、服务器之间</li></ul><h2 id="ISL与802-1Q"><a href="#ISL与802-1Q" class="headerlink" title="ISL与802.1Q"></a>ISL与802.1Q</h2><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/Lay2sw%26vlan%20(4).png"></p><h3 id="ISL"><a href="#ISL" class="headerlink" title="ISL"></a>ISL</h3><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/Lay2sw%26vlan%20(3).png"></p><ul><li>思科私有协议</li><li>支持PVST</li><li>在原始数据帧基础上封装ISL头及新的FCS</li><li>没有修改原始的数据帧，因此处理效率比802.1Q高</li><li>VLAN字段，15分比特目前用了十个，那么最多支持2的10次方&#x3D;1024个VLAN</li></ul><h3 id="802-1Q"><a href="#802-1Q" class="headerlink" title="802.1Q"></a>802.1Q</h3><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/Lay2sw%26vlan%20(2).png"></p><ul><li>IEEE共有协议</li><li>插入Tag字段，同时重新计算FCS</li></ul><h2 id="Native-VLAN"><a href="#Native-VLAN" class="headerlink" title="Native VLAN"></a>Native VLAN</h2><ul><li>Native VLAN所属的帧在经过trunk时不打标签</li><li>Native VLAN在Trunk两端必须匹配，否则会出现VLAN流量互串</li><li>默认native vlan是vlan1</li><li>建议将一个生僻的VLAN配置成Native VLAN</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/Lay2sw%26vlan%20(1).png"></p><h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Router(config-if)# switchport trunk native vlan ? #在trunk设置native vlan</span><br><span class="line">Router(config)# vlan dot1q tag native #也对native vlan打标签</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%80%9D%E7%A7%91/">思科</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://www.sumi233.top/tags/CCNP/">CCNP</category>
      
      
      <comments>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20Lay2%20Switching%20and%20VLAN/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Trunk VTP and pVLAN</title>
      <link>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20Trunk%20VTP%20and%20pVLAN/</link>
      <guid>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20Trunk%20VTP%20and%20pVLAN/</guid>
      <pubDate>Thu, 17 Oct 2024 07:01:46 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;VLAN范围（Dot1Q）&quot;&gt;&lt;a href=&quot;#VLAN范围（</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="VLAN范围（Dot1Q）"><a href="#VLAN范围（Dot1Q）" class="headerlink" title="VLAN范围（Dot1Q）"></a>VLAN范围（Dot1Q）</h2><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/vtppvlan%20(4).png"></p><ul><li>0，4095保留，系统使用</li><li>1思科默认vlan</li><li>2-1001For Ethernet VLANs</li><li>1002-1005思科默认为FDDI及TokenRing</li><li>1006-4094只能为Ethernet使用，在一些特殊平台使用</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/vtppvlan%20(2).png"></p><h2 id="Trunking配置"><a href="#Trunking配置" class="headerlink" title="Trunking配置"></a>Trunking配置</h2><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/vtppvlan%20(3).png"></p><ul><li>Trunk可以手工静态配置或者通过DTP进行协商</li><li>DTP是的交换机之间能够进行trunk协商</li></ul><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/vtppvlan%20(5).png"></p><h2 id="Trunk相关配置"><a href="#Trunk相关配置" class="headerlink" title="Trunk相关配置"></a>Trunk相关配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)# switchport mode access#接口设置access模式</span><br><span class="line">Switch(config)# switchport mode encapsulation &#123;dot1q | ISL&#125;#如果接口是trunk，设置干道协议类型</span><br><span class="line">Switch(config)# switchport mode dynamic &#123;auto | desirable&#125;#将接口设置为DTP动态协商，可选auto或者desirable</span><br><span class="line">Switch(config)# switchport nonegotiate#将接口设置为nonegotiate，不发送DTP帧，如果配置非协商，那么就必须手工配置接口模式，为access或者trunk</span><br></pre></td></tr></table></figure><h2 id="VTP（VLAN-Trunking-Protocol）"><a href="#VTP（VLAN-Trunking-Protocol）" class="headerlink" title="VTP（VLAN Trunking Protocol）"></a>VTP（VLAN Trunking Protocol）</h2><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/vtppvlan%20(7).png"></p><ul><li>思科的私有协议</li><li>只能传递VLAN信息</li><li>简化大型园区网中VLAN信息库同步的问题（同一个VTP管理域中）</li><li>只同步VLAN信息</li><li>需要交换机之间的trunk链路支持</li></ul><h2 id="VTP模式"><a href="#VTP模式" class="headerlink" title="VTP模式"></a>VTP模式</h2><h3 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h3><ul><li>可创建修改删除VLAN</li><li>发送&#x2F;转发信息宣告</li><li>同步</li><li>VLAN信息存储于NVRAM</li><li>Catalyst交换机默认是server模式</li></ul><h3 id="Client"><a href="#Client" class="headerlink" title="Client"></a>Client</h3><ul><li>不能创建修改删除VLAN</li><li>发送&#x2F;转发信息宣告</li><li>同步</li><li>VLAN信息不会存贮于NVRAM</li></ul><h3 id="Transparent"><a href="#Transparent" class="headerlink" title="Transparent"></a>Transparent</h3><ul><li>可创建修改删除VLAN </li><li>转发信息宣告</li><li>不同步 不始发</li><li>VLAN信息存贮于NVRAM</li></ul><h3 id="Tips："><a href="#Tips：" class="headerlink" title="Tips："></a>Tips：</h3><ul><li>删除VLAN配置请使用<code>delete flash:config.text</code>，切勿使用<code>delete flash:</code>，这将会清除flash中的IOS固件</li></ul><h2 id="VTP的运作"><a href="#VTP的运作" class="headerlink" title="VTP的运作"></a>VTP的运作</h2><ul><li>VTP协议通过组播地址0100-0CCC-CCCC在trunk链路上发送VTP通告</li><li>VTP Server和clients通过最高的修订号来同步数据部</li><li>VTP协议每隔5分钟发送一次VTP通告或者有变化时发生</li></ul><p><img src="https://img.picgo.net/2024/11/19/image-5b89cbafacef6088c.png"></p><h2 id="VTP的配置"><a href="#VTP的配置" class="headerlink" title="VTP的配置"></a>VTP的配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)# vtp domain cisco#配置VTP域名</span><br><span class="line">Switch(config)# vtp mode &#123; server | client | transparent &#125;#配置本机VTP模式</span><br><span class="line">Switch(config)# vtp password x#（可选）配置密码</span><br></pre></td></tr></table></figure><h2 id="私有VLAN（PVLAN）"><a href="#私有VLAN（PVLAN）" class="headerlink" title="私有VLAN（PVLAN）"></a>私有VLAN（PVLAN）</h2><p><img src="https://cdn.sumi233.top/gh/huang233893/blog-image-bed/top/huang233893/imgs/blog/vtppvlan%20(1).png"></p><ul><li>主VLAN</li><li>辅助VLAN</li><li>团体VLANs</li><li>混杂端口</li></ul><h2 id="PVLANs"><a href="#PVLANs" class="headerlink" title="PVLANs"></a>PVLANs</h2><ul><li>将一个VLAN划分成几个单独的VLAN，这些VLAN都使用同一个IP网段</li><li>可以提高安全性，降低子网数目，提高IP利用率</li><li>尽管网络设备处于同一个子网中，但是他们属于不同的pVlan，pVlans之间的通信还是必须通过默认网关来实现。 </li><li>每个pVLAN包括一个主VLAN以及多个辅助VLAN。</li><li>所有的辅助VLAN都映射到主VLAN。辅助VLAN分为团体VLAN和隔离VLAN。</li><li>相同团体VLAN能够互相通信(lay2)，但是团体VLAN之间必须通过设置SV或者路由器接口才能通信。</li><li>相同隔离VLAN内部(端口之间)以及隔离VLAN之间都是不能够互相通信的，只能与混杂接口通信。</li><li>一个主VLAN只能有一个Isolate vlan</li><li>混杂端口能够与PVLAN中的任何设备通信，不管对方是处于主VLAN，还是辅助VLAN.</li></ul><h2 id="VLAN-port-types"><a href="#VLAN-port-types" class="headerlink" title="VLAN port types"></a>VLAN port types</h2><ul><li>独立（Isolated）<ul><li>仅与混杂端口通信</li></ul></li><li>混杂（Promiscuous）<ul><li>与所有其他端口通信</li></ul></li><li>团体模式（Community）<ul><li>与团体其他接口和所有混杂接口进行沟通</li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://www.sumi233.top/categories/%E6%80%9D%E7%A7%91/">思科</category>
      
      
      <category domain="https://www.sumi233.top/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://www.sumi233.top/tags/CCNP/">CCNP</category>
      
      
      <comments>https://www.sumi233.top/CCNP/CCNP%E4%BA%A4%E6%8D%A2%20Trunk%20VTP%20and%20pVLAN/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
