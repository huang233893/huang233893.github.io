{"title":"STP高级","slug":"CCNA/Spanning Tree And More","date":"2024-10-17T07:01:46.000Z","updated":"2025-08-01T15:12:53.845Z","comments":true,"path":"api/articles/CCNA/Spanning Tree And More.json","excerpt":null,"covers":["https://cdn.nlark.com/yuque/0/2024/png/44908083/1728646455824-e63f2ae6-4209-407f-9b5d-2350fc785fc8.png","https://cdn.nlark.com/yuque/0/2024/png/44908083/1728991853223-aeb82855-6fc2-4071-a881-6ef8cea0a009.png","https://cdn.nlark.com/yuque/0/2024/png/44908083/1728992604910-8b3f979a-e693-4e7e-9bf2-931a2daaa69c.png","https://cdn.nlark.com/yuque/0/2024/png/44908083/1728992769109-d61b90f4-6537-495c-b1bf-23419d750677.png?x-oss-process=image/format,webp/resize,w_404,limit_0","https://cdn.nlark.com/yuque/0/2024/png/44908083/1728993147373-c6c3f19e-038f-4f1b-a1b7-a3c112d6141f.png?x-oss-process=image/format,webp","https://cdn.nlark.com/yuque/0/2024/png/44908083/1728993578313-21b82a1c-9151-47a9-b82f-ff5f9eb9e944.png","https://cdn.nlark.com/yuque/0/2024/png/44908083/1728993852668-c4c616b2-00e0-47a0-b0ee-a1affc05056a.png","https://cdn.nlark.com/yuque/0/2024/png/44908083/1728994204949-b55797be-552d-4227-9276-c7fbaea939b4.png","https://cdn.nlark.com/yuque/0/2024/png/44908083/1728994221639-299017dc-8cba-42b7-badd-7c7c28a0e771.png","https://cdn.nlark.com/yuque/0/2024/png/44908083/1728994621909-130e73a6-de80-47ad-ac46-64d0b5b29a38.png","https://cdn.nlark.com/yuque/0/2024/png/44908083/1728994870216-a6eb1a0d-74e6-4cab-ad8c-b2e3003d0e4b.png","https://cdn.nlark.com/yuque/0/2024/png/44908083/1729039809369-9c40389d-88da-496d-bca9-25a6d6234403.png","https://cdn.nlark.com/yuque/0/2024/png/44908083/1729044484996-3b6cd7be-f733-4168-9777-129aea9b5f10.png","https://cdn.nlark.com/yuque/0/2024/png/44908083/1728992801739-4802c0b8-889f-443f-829d-086fd6a3fd90.png?x-oss-process=image/format,webp/resize,w_750,limit_0","https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1729045900649-8fc37524-c7fb-439f-b6ab-d3c728338bb8.jpeg","https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1729046055735-49f106e1-3921-4aa5-a6a3-a057c15dee87.jpeg","https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1729123357180-16fc75cb-fb7f-4044-a7d7-c22dc6304f23.jpeg","https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1729124004050-d0224907-d9d7-40ae-adfa-a6b2fd9994e7.jpeg","https://cdn.nlark.com/yuque/0/2024/png/44908083/1729124300768-b593c142-1bfe-4859-a852-dbc976dad390.png","https://cdn.nlark.com/yuque/0/2024/png/44908083/1729124922667-c1a64149-b6c9-4514-9853-820ffa2b3a3e.png","https://cdn.nlark.com/yuque/0/2024/png/44908083/1729124961966-9914c0a0-fd55-4c36-aa6f-36f73a56c1c3.png","https://cdn.nlark.com/yuque/0/2024/png/44908083/1729125063559-0f3a0c30-32df-4e60-a446-c1f2a3ca47dd.png","https://cdn.nlark.com/yuque/0/2024/png/44908083/1729125279663-95c22911-ebd8-44ab-b706-67c5fab68886.png","https://cdn.nlark.com/yuque/0/2024/png/44908083/1729125689365-ecd8155a-fb87-4009-82a9-c104aafbd310.png","https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1729126908014-9ffda30f-cba3-4c31-8607-345dbd34c1e9.jpeg","https://cdn.nlark.com/yuque/0/2024/png/44908083/1729127237066-9878cdaa-4a0b-46a8-b820-0687f9cb411e.png"],"content":"<meta name=\"referrer\" content=\"no-referrer\">\n\n<h2 id=\"STP基础部分\"><a href=\"#STP基础部分\" class=\"headerlink\" title=\"STP基础部分\"></a>STP基础部分</h2><h3 id=\"技术背景\"><a href=\"#技术背景\" class=\"headerlink\" title=\"技术背景\"></a>技术背景</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728646455824-e63f2ae6-4209-407f-9b5d-2350fc785fc8.png\"></p>\n<ul>\n<li>接入层交换机单链路上联，存在单链路故障</li>\n<li>物理链路冗余，解决了单链路故障问题，但是二层环境存在环路</li>\n<li>另一个问题的单点故障，如果任意一个汇聚设备宕机，将直接导致下联的接入网络挂掉</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728991853223-aeb82855-6fc2-4071-a881-6ef8cea0a009.png\"></p>\n<ul>\n<li>生成树可以有效的解决这个问题</li>\n<li>通过生成树协议，在逻辑上将特定端口进行block，从而实现物理上存在冗余环境，而二层又阻止环路的产生</li>\n<li>当拓扑发生变更的时候，生成树协议能够探测这些变化，并且及时自动的调整接口状态，从而适应网络拓扑的变化，实现链路冗余</li>\n</ul>\n<h3 id=\"生成树的标准\"><a href=\"#生成树的标准\" class=\"headerlink\" title=\"生成树的标准\"></a>生成树的标准</h3><ul>\n<li>802.1D</li>\n<li><strong><font style=\"color:#DF2A3F;\">PVST+ 思科Cisco私有协议，每个VLAN拥有一颗单独的生成树实例</font></strong></li>\n<li><strong><font style=\"color:#DF2A3F;\">802.1W RSTP</font></strong></li>\n<li><strong><font style=\"color:#DF2A3F;\">802.1S MSTP</font></strong></li>\n<li>PVRST+ Cisco私有，对RSTP的增强版</li>\n</ul>\n<h3 id=\"STP的操作\"><a href=\"#STP的操作\" class=\"headerlink\" title=\"STP的操作\"></a>STP的操作</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728992604910-8b3f979a-e693-4e7e-9bf2-931a2daaa69c.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728992769109-d61b90f4-6537-495c-b1bf-23419d750677.png?x-oss-process=image/format,webp/resize,w_404,limit_0\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728993147373-c6c3f19e-038f-4f1b-a1b7-a3c112d6141f.png?x-oss-process=image/format,webp\"></p>\n<ul>\n<li>每个广播域选择一个根桥</li>\n<li>每个非根桥上选择一个根端口</li>\n<li>每个段选择一个指定端口</li>\n<li>选择一个非指定端口<ul>\n<li>根端口：具有最低根路径的接口要考虑的因素：</li>\n<li>1.最低根桥ID</li>\n<li>2.到根桥的最低路径成本</li>\n<li>3.最低的发送者网桥ID</li>\n<li>4.最低的发送者端口ID</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"端口的状态\"><a href=\"#端口的状态\" class=\"headerlink\" title=\"端口的状态\"></a>端口的状态</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728993578313-21b82a1c-9151-47a9-b82f-ff5f9eb9e944.png\"></p>\n<ul>\n<li>Disable\t\t不收发任何报文</li>\n<li>Blocking\t\t不接受也不转发帧，接收但不发送BPDU，不学习MAC地址</li>\n<li>Listening\t\t不接受也不转发帧，接收并且发送BPDU，不学习MAC地址</li>\n<li>Learning\t\t不接受也不转发帧，接受并且发送BPDU，学习MAC地址</li>\n<li>Forwarding\t接受并转发帧，接受并且发送BPDU，学习MAC地址</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728993852668-c4c616b2-00e0-47a0-b0ee-a1affc05056a.png\"></p>\n<h3 id=\"STP-拓扑变更\"><a href=\"#STP-拓扑变更\" class=\"headerlink\" title=\"STP 拓扑变更\"></a>STP 拓扑变更</h3><ul>\n<li>TCN BPDU概述</li>\n<li>当网络拓扑出现变更的时候，最先意识到变化的交换机将发送TCN BPDU</li>\n<li>在发生以下时间时，交换机将发送TCN：<ul>\n<li>对于正在处于转发和监听状态的接口，过渡到Block状态（链路故障的情况）</li>\n<li>端口进入转发状态，并且网桥已经拥有指定端口</li>\n<li>非root网桥在它指定的端口收到TCN</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728994204949-b55797be-552d-4227-9276-c7fbaea939b4.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728994221639-299017dc-8cba-42b7-badd-7c7c28a0e771.png\"></p>\n<ul>\n<li><ol>\n<li>SwitchA挂掉</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>SwitchB最先检测到拓扑变化，于是产生TCNBPDU并从根端口发送出去(因为根端口是朝着根桥的方向)，B将连续发送TCN BPDU直到指定交换机C发送TCNACK进行确认</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>SwitchB收到这个TCN BPDU，回送一个TCN ACK进行确认，同时向自己的根端口转发这个TCN BPDU</li>\n</ol>\n</li>\n<li><ol start=\"4\">\n<li>Root收到这个TCN，回送一个TCN ACK给C</li>\n</ol>\n</li>\n<li><ol start=\"5\">\n<li>Root修改自己的配置BPDU，以此来通告整个交换网络关于拓扑变更的情况。Root在配置BPDU中设置一段时间的拓扑变更(TC标志)，这段时间等于转发延迟+Max.Age，默认35S</li>\n</ol>\n</li>\n<li><ol start=\"6\">\n<li>当交换机收到Root发出的这个TC标志置位的配置BPDU，它们使用转发延迟计时器(默认15S)来更新其MAC地址表中的条目。也就是说条目的寿命由原来的300S的默认值变成15S，这样能保证MAC地址条目更快速的刷新。交换机将持续这个过程，直到不再从Root收到TC BPDU消息为止。</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"PVST\"><a href=\"#PVST\" class=\"headerlink\" title=\"PVST+\"></a>PVST+</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728994621909-130e73a6-de80-47ad-ac46-64d0b5b29a38.png\"></p>\n<h3 id=\"扩展的SystemID\"><a href=\"#扩展的SystemID\" class=\"headerlink\" title=\"扩展的SystemID\"></a>扩展的SystemID</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728994870216-a6eb1a0d-74e6-4cab-ad8c-b2e3003d0e4b.png\"></p>\n<ul>\n<li>CISCO CATALYST交换机的MAC地址池最多可以容纳1024个地址，交换机的型号决定了可用MAC的数目，并不是所有catalyst交换机都能支持到这么多个MAC</li>\n<li>这些MAC地址作为VLAN生成树中的网桥ID的MAC地址部分。不同的交换机型号支持不同的可用MAC地址数目。交换机依照次序分配MAC地址</li>\n<li><code>Show run int | include bia</code>能看到所有的MAC，其中第一个MAC将被生成树使用，也就是CPU的MAC。接下去就是每个以太网接口的MAC。</li>\n<li>我们知道交换机能够支持的VLAN的数据是很庞大的，如果开启PVST+，每个VLAN-棵生成树，而没棵生成树都要有一个独立的标识，都需要耗费一个MAC的话，那么MAC地址池肯定是无法承受的。</li>\n<li>因此需要使用到MAC地址缩减方案</li>\n</ul>\n<h3 id=\"Portfast\"><a href=\"#Portfast\" class=\"headerlink\" title=\"Portfast\"></a>Portfast</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729039809369-9c40389d-88da-496d-bca9-25a6d6234403.png\"></p>\n<ul>\n<li>在交换机上，将连接主机的接口配置为portfast</li>\n<li>Portfast接口可以绕过listening和learning状态直接进入forwarding状态</li>\n</ul>\n<h2 id=\"RSTP\"><a href=\"#RSTP\" class=\"headerlink\" title=\"RSTP\"></a>RSTP</h2><h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><ul>\n<li>802.1w</li>\n<li>端口角色：根端口、指定端口、替代端口、备份端口</li>\n<li>端口状态：转发、丢弃、学习</li>\n<li>在思科catalyst交换机上，pvst+（pvrst+）是基于RSTP实现的perVLAN版本</li>\n</ul>\n<h3 id=\"BPDU\"><a href=\"#BPDU\" class=\"headerlink\" title=\"BPDU\"></a>BPDU</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729044484996-3b6cd7be-f733-4168-9777-129aea9b5f10.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728992801739-4802c0b8-889f-443f-829d-086fd6a3fd90.png?x-oss-process=image/format,webp/resize,w_750,limit_0\"></p>\n<ul>\n<li>00\t未知</li>\n<li>01\t替代&#x2F;备份</li>\n<li>10\t根端口</li>\n<li>11\t指定端口</li>\n</ul>\n<h3 id=\"BPDUs检测过程\"><a href=\"#BPDUs检测过程\" class=\"headerlink\" title=\"BPDUs检测过程\"></a>BPDUs检测过程</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1729045900649-8fc37524-c7fb-439f-b6ab-d3c728338bb8.jpeg\"></p>\n<ul>\n<li>B丢失了到Root的路径</li>\n<li>认为自己是Root</li>\n<li>于是发送“我就是Root”的次优BPDU</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1729046055735-49f106e1-3921-4aa5-a6a3-a057c15dee87.jpeg\"></p>\n<ul>\n<li>C知道Root还活着</li>\n<li>立即发送包含Root信息的BPDU给B</li>\n<li>B接受BPDU，并且把连接C的接口设定为根端口</li>\n</ul>\n<h3 id=\"BPDUGuard\"><a href=\"#BPDUGuard\" class=\"headerlink\" title=\"BPDUGuard\"></a>BPDUGuard</h3><ul>\n<li>该接口收到BPDU报文后，会立即切换到err-disable状态</li>\n<li>常搭配portfast特性在接口上一起使用，用于连接主机</li>\n<li>可在接口上激活，也可在全局模式上配置，两者有所不同</li>\n</ul>\n<h3 id=\"边缘端口edge-ports\"><a href=\"#边缘端口edge-ports\" class=\"headerlink\" title=\"边缘端口edge-ports\"></a>边缘端口edge-ports</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1729123357180-16fc75cb-fb7f-4044-a7d7-c22dc6304f23.jpeg\"></p>\n<ul>\n<li>RSTP定义的端口类型与postfast十分类似</li>\n<li>因为这些接口用于连接主机，所以一般不会产生环路。这写端口可以跳过LST或LRN直接过渡到转发状态</li>\n<li>而且当这这些接口up down的时候不会引起拓扑变更</li>\n<li>另外，边缘端口收到BPDU，则立即丢失边缘端口的特征，变成一个普通的Spanning Tree接口</li>\n<li>在catalyst交换机上，可以用postfast关键字来进行手工配置</li>\n</ul>\n<h3 id=\"Rapid-Transition-to-Fowarding-State\"><a href=\"#Rapid-Transition-to-Fowarding-State\" class=\"headerlink\" title=\"Rapid Transition to Fowarding State\"></a>Rapid Transition to Fowarding State</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1729124004050-d0224907-d9d7-40ae-adfa-a6b2fd9994e7.jpeg\"></p>\n<ul>\n<li>RSTP能够在边缘端口及P2P链路上快速过度。</li>\n<li>RSTP的链路类型是通过接口的双工状态自动获取到的，如果接口时半双工，那么链路类型是shared port，如果是全双工那么就是p2p。</li>\n<li>当然，接口的链路类型可以通过命令修改，接口模式下：<code>spanning-tree link-type ？</code></li>\n</ul>\n<h4 id=\"链路类型\"><a href=\"#链路类型\" class=\"headerlink\" title=\"链路类型\"></a>链路类型</h4><ul>\n<li>P2P（点对点）</li>\n<li>shared port（共享端口）</li>\n</ul>\n<p>收敛对比：802.1D<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729124300768-b593c142-1bfe-4859-a852-dbc976dad390.png\"></p>\n<ul>\n<li>A及Root之间新增链路Link1</li>\n<li>A及root在link1两端的接口都进入Listening状态，A将收到Root发出来的BPDU</li>\n<li>A将BPDU从自己的指定端口发送出去，BPDU被泛洪到网络中</li>\n<li>B和C收到这个更优的BPDU，继续向网络中泛洪</li>\n<li>数秒后，D收到这个BPDU，Block掉端口P1</li>\n</ul>\n<p>Tips：**<font style=\"color:#DF2A3F;\">由于缺乏feednack机制，A连接root的接口从listening到Forwarding，需要经历15<em>2s的延迟。此时A、B、C下联的用户流量就出现了问题（因为D收到更优的BPDU后，将P1口block了，这时候ABC相当于在A的根端口过渡到forwarding之前都处于网络的“隔离地带”）</em></font>*</p>\n<h3 id=\"收敛对比：RSTP\"><a href=\"#收敛对比：RSTP\" class=\"headerlink\" title=\"收敛对比：RSTP\"></a>收敛对比：RSTP</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729124922667-c1a64149-b6c9-4514-9853-820ffa2b3a3e.png\"></p>\n<ul>\n<li>A及Root之前新增链路Link1</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729124961966-9914c0a0-fd55-4c36-aa6f-36f73a56c1c3.png\"></p>\n<ul>\n<li>A及Root在Link1两端的接口在up之后进入designated blocking。然后双方交互BPDU消息。这个过程实际上是一个协商的过程</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729125063559-0f3a0c30-32df-4e60-a446-c1f2a3ca47dd.png\"></p>\n<ul>\n<li>A在收到Root发送的BPDU后，将自己的所有非边缘端口Block（这个过程称为同步sync），并且回送一个agreement消息给Root</li>\n<li>在此之后，Root及A在link1上的端口立即都过渡到转发状态。而网路目前是没有环路的，A往下的网路目前是切断的</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729125279663-95c22911-ebd8-44ab-b706-67c5fab68886.png\"></p>\n<ul>\n<li>A与B和C之间，开始一轮新的协商，BC收到A发送的bPDU后，完成同步Sync过程，将自己的非边缘端口Block掉，然后都向A回送agreement信息。同时ABC互联的接口进入转发状态。在BC同步操作的过程中，B下联全是主机，因此没有端口被Blcok（已经完成同步）；而C要block掉连接D的端口</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729125689365-ecd8155a-fb87-4009-82a9-c104aafbd310.png\"></p>\n<ul>\n<li>完成上一步后，生成树状态如图</li>\n<li>最终BPDU到达D，D将P1口Block掉</li>\n</ul>\n<p>Tips：</p>\n<p><strong><font style=\"color:#DF2A3F;\">在RSTP收敛过程中，耗费是时间仅仅是BPDU从Root泛洪到网络末端的时间，不用受到任何Timer的限制，直接绕过两个转发延迟时间。因此收敛速度更快。</font></strong></p>\n<ul>\n<li>有两点需注意:<ul>\n<li>交换机之间的这种协商机制只在P2P链路上被执行</li>\n<li>边缘端口的配置非常重要，如果配置不当有可能会在同步过程中被BLOCK。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Proposal-Agreement-Squence\"><a href=\"#Proposal-Agreement-Squence\" class=\"headerlink\" title=\"Proposal&#x2F;Agreement Squence\"></a>Proposal&#x2F;Agreement Squence</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1729126908014-9ffda30f-cba3-4c31-8607-345dbd34c1e9.jpeg\"><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729126942017-56bd8d43-41d8-457f-a4c2-18f7ec77ea7c.png\"></p>\n<p><strong><font style=\"color:#DF2A3F;\">Root和A之间新增了一条链路，链路两端的接口在收到对方发送的BPDU前是designated blocking状态</font></strong></p>\n<ul>\n<li>当一个被选举为指定端口的接口在discarding或learning状态(目只在这个状态)，它在其发送的BPDU中进行proposalbit置位。这就是步骤1的P0的情况</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729127237066-9878cdaa-4a0b-46a8-b820-0687f9cb411e.png\"></p>\n<ul>\n<li>在A完成同步后，A就可以将新选出的根端口unblock并且发送一个agreement消息给Root。这个agreement消息是A的proposal消息的拷贝，但是agreement bit置位了。</li>\n<li>如此一来，P0就收到了应答，立即转为forwarding。注意这时候P3接口仍处于designateddiscarding状态，于是它向它的邻居网桥去发送proposal，而且也在积极等待回传的agreement以便进入forwarding状态</li>\n</ul>\n<h2 id=\"Cisco-STP-toolkit\"><a href=\"#Cisco-STP-toolkit\" class=\"headerlink\" title=\"Cisco STP toolkit\"></a>Cisco STP toolkit</h2><ul>\n<li>Portfast</li>\n<li>BPDUGuard</li>\n<li>BPDUFilter</li>\n<li>UplinkFast</li>\n<li>BackboneFast</li>\n<li>RootGuard</li>\n<li>LoopGuard</li>\n<li>UDLD</li>\n</ul>\n<h2 id=\"基础配置\"><a href=\"#基础配置\" class=\"headerlink\" title=\"基础配置\"></a>基础配置</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Switch(config)# spanning-tree vlan-id\t\t#激活特定VLAN的stp</span><br><span class=\"line\">Switch(config)# spanning-tree vlan vlan-id priorty pri\t\t#配置桥优先级，这里注意是perVLAN的，优先级默认3</span><br><span class=\"line\">Switch(config)# spanning-tree vlan vlan-id root &#123;primary | secondary&#125; [diameter diameter] #设置主根次根，该交换机在默认优先级的状态下vlan优先级为24576，如果是secondary，则为28672</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Switch(config-if)# spanning-tree [vlan vlan-id] cost cost</span><br><span class=\"line\">Switch(config-if)# spanning-tree [vlan vlan-id] post-priority pri</span><br><span class=\"line\">Switch(config)# spanning-tree [vlan vlan-id] hello-time sec</span><br><span class=\"line\">Switch(config)# spanning-tree [vlan vlan-id] forward-time sec</span><br><span class=\"line\">Switch(config)# spanning-tree [vlan vlan-id] max-time sec</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Switch(config)# spanning-tree postfast default</span><br><span class=\"line\">Switch(config-if)# spanning-tree portfast [trunk]</span><br></pre></td></tr></table></figure>","more":"<meta name=\"referrer\" content=\"no-referrer\">\n\n<h2 id=\"STP基础部分\"><a href=\"#STP基础部分\" class=\"headerlink\" title=\"STP基础部分\"></a>STP基础部分</h2><h3 id=\"技术背景\"><a href=\"#技术背景\" class=\"headerlink\" title=\"技术背景\"></a>技术背景</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728646455824-e63f2ae6-4209-407f-9b5d-2350fc785fc8.png\"></p>\n<ul>\n<li>接入层交换机单链路上联，存在单链路故障</li>\n<li>物理链路冗余，解决了单链路故障问题，但是二层环境存在环路</li>\n<li>另一个问题的单点故障，如果任意一个汇聚设备宕机，将直接导致下联的接入网络挂掉</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728991853223-aeb82855-6fc2-4071-a881-6ef8cea0a009.png\"></p>\n<ul>\n<li>生成树可以有效的解决这个问题</li>\n<li>通过生成树协议，在逻辑上将特定端口进行block，从而实现物理上存在冗余环境，而二层又阻止环路的产生</li>\n<li>当拓扑发生变更的时候，生成树协议能够探测这些变化，并且及时自动的调整接口状态，从而适应网络拓扑的变化，实现链路冗余</li>\n</ul>\n<h3 id=\"生成树的标准\"><a href=\"#生成树的标准\" class=\"headerlink\" title=\"生成树的标准\"></a>生成树的标准</h3><ul>\n<li>802.1D</li>\n<li><strong><font style=\"color:#DF2A3F;\">PVST+ 思科Cisco私有协议，每个VLAN拥有一颗单独的生成树实例</font></strong></li>\n<li><strong><font style=\"color:#DF2A3F;\">802.1W RSTP</font></strong></li>\n<li><strong><font style=\"color:#DF2A3F;\">802.1S MSTP</font></strong></li>\n<li>PVRST+ Cisco私有，对RSTP的增强版</li>\n</ul>\n<h3 id=\"STP的操作\"><a href=\"#STP的操作\" class=\"headerlink\" title=\"STP的操作\"></a>STP的操作</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728992604910-8b3f979a-e693-4e7e-9bf2-931a2daaa69c.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728992769109-d61b90f4-6537-495c-b1bf-23419d750677.png?x-oss-process=image/format,webp/resize,w_404,limit_0\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728993147373-c6c3f19e-038f-4f1b-a1b7-a3c112d6141f.png?x-oss-process=image/format,webp\"></p>\n<ul>\n<li>每个广播域选择一个根桥</li>\n<li>每个非根桥上选择一个根端口</li>\n<li>每个段选择一个指定端口</li>\n<li>选择一个非指定端口<ul>\n<li>根端口：具有最低根路径的接口要考虑的因素：</li>\n<li>1.最低根桥ID</li>\n<li>2.到根桥的最低路径成本</li>\n<li>3.最低的发送者网桥ID</li>\n<li>4.最低的发送者端口ID</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"端口的状态\"><a href=\"#端口的状态\" class=\"headerlink\" title=\"端口的状态\"></a>端口的状态</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728993578313-21b82a1c-9151-47a9-b82f-ff5f9eb9e944.png\"></p>\n<ul>\n<li>Disable\t\t不收发任何报文</li>\n<li>Blocking\t\t不接受也不转发帧，接收但不发送BPDU，不学习MAC地址</li>\n<li>Listening\t\t不接受也不转发帧，接收并且发送BPDU，不学习MAC地址</li>\n<li>Learning\t\t不接受也不转发帧，接受并且发送BPDU，学习MAC地址</li>\n<li>Forwarding\t接受并转发帧，接受并且发送BPDU，学习MAC地址</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728993852668-c4c616b2-00e0-47a0-b0ee-a1affc05056a.png\"></p>\n<h3 id=\"STP-拓扑变更\"><a href=\"#STP-拓扑变更\" class=\"headerlink\" title=\"STP 拓扑变更\"></a>STP 拓扑变更</h3><ul>\n<li>TCN BPDU概述</li>\n<li>当网络拓扑出现变更的时候，最先意识到变化的交换机将发送TCN BPDU</li>\n<li>在发生以下时间时，交换机将发送TCN：<ul>\n<li>对于正在处于转发和监听状态的接口，过渡到Block状态（链路故障的情况）</li>\n<li>端口进入转发状态，并且网桥已经拥有指定端口</li>\n<li>非root网桥在它指定的端口收到TCN</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728994204949-b55797be-552d-4227-9276-c7fbaea939b4.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728994221639-299017dc-8cba-42b7-badd-7c7c28a0e771.png\"></p>\n<ul>\n<li><ol>\n<li>SwitchA挂掉</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>SwitchB最先检测到拓扑变化，于是产生TCNBPDU并从根端口发送出去(因为根端口是朝着根桥的方向)，B将连续发送TCN BPDU直到指定交换机C发送TCNACK进行确认</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>SwitchB收到这个TCN BPDU，回送一个TCN ACK进行确认，同时向自己的根端口转发这个TCN BPDU</li>\n</ol>\n</li>\n<li><ol start=\"4\">\n<li>Root收到这个TCN，回送一个TCN ACK给C</li>\n</ol>\n</li>\n<li><ol start=\"5\">\n<li>Root修改自己的配置BPDU，以此来通告整个交换网络关于拓扑变更的情况。Root在配置BPDU中设置一段时间的拓扑变更(TC标志)，这段时间等于转发延迟+Max.Age，默认35S</li>\n</ol>\n</li>\n<li><ol start=\"6\">\n<li>当交换机收到Root发出的这个TC标志置位的配置BPDU，它们使用转发延迟计时器(默认15S)来更新其MAC地址表中的条目。也就是说条目的寿命由原来的300S的默认值变成15S，这样能保证MAC地址条目更快速的刷新。交换机将持续这个过程，直到不再从Root收到TC BPDU消息为止。</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"PVST\"><a href=\"#PVST\" class=\"headerlink\" title=\"PVST+\"></a>PVST+</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728994621909-130e73a6-de80-47ad-ac46-64d0b5b29a38.png\"></p>\n<h3 id=\"扩展的SystemID\"><a href=\"#扩展的SystemID\" class=\"headerlink\" title=\"扩展的SystemID\"></a>扩展的SystemID</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728994870216-a6eb1a0d-74e6-4cab-ad8c-b2e3003d0e4b.png\"></p>\n<ul>\n<li>CISCO CATALYST交换机的MAC地址池最多可以容纳1024个地址，交换机的型号决定了可用MAC的数目，并不是所有catalyst交换机都能支持到这么多个MAC</li>\n<li>这些MAC地址作为VLAN生成树中的网桥ID的MAC地址部分。不同的交换机型号支持不同的可用MAC地址数目。交换机依照次序分配MAC地址</li>\n<li><code>Show run int | include bia</code>能看到所有的MAC，其中第一个MAC将被生成树使用，也就是CPU的MAC。接下去就是每个以太网接口的MAC。</li>\n<li>我们知道交换机能够支持的VLAN的数据是很庞大的，如果开启PVST+，每个VLAN-棵生成树，而没棵生成树都要有一个独立的标识，都需要耗费一个MAC的话，那么MAC地址池肯定是无法承受的。</li>\n<li>因此需要使用到MAC地址缩减方案</li>\n</ul>\n<h3 id=\"Portfast\"><a href=\"#Portfast\" class=\"headerlink\" title=\"Portfast\"></a>Portfast</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729039809369-9c40389d-88da-496d-bca9-25a6d6234403.png\"></p>\n<ul>\n<li>在交换机上，将连接主机的接口配置为portfast</li>\n<li>Portfast接口可以绕过listening和learning状态直接进入forwarding状态</li>\n</ul>\n<h2 id=\"RSTP\"><a href=\"#RSTP\" class=\"headerlink\" title=\"RSTP\"></a>RSTP</h2><h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><ul>\n<li>802.1w</li>\n<li>端口角色：根端口、指定端口、替代端口、备份端口</li>\n<li>端口状态：转发、丢弃、学习</li>\n<li>在思科catalyst交换机上，pvst+（pvrst+）是基于RSTP实现的perVLAN版本</li>\n</ul>\n<h3 id=\"BPDU\"><a href=\"#BPDU\" class=\"headerlink\" title=\"BPDU\"></a>BPDU</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729044484996-3b6cd7be-f733-4168-9777-129aea9b5f10.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1728992801739-4802c0b8-889f-443f-829d-086fd6a3fd90.png?x-oss-process=image/format,webp/resize,w_750,limit_0\"></p>\n<ul>\n<li>00\t未知</li>\n<li>01\t替代&#x2F;备份</li>\n<li>10\t根端口</li>\n<li>11\t指定端口</li>\n</ul>\n<h3 id=\"BPDUs检测过程\"><a href=\"#BPDUs检测过程\" class=\"headerlink\" title=\"BPDUs检测过程\"></a>BPDUs检测过程</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1729045900649-8fc37524-c7fb-439f-b6ab-d3c728338bb8.jpeg\"></p>\n<ul>\n<li>B丢失了到Root的路径</li>\n<li>认为自己是Root</li>\n<li>于是发送“我就是Root”的次优BPDU</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1729046055735-49f106e1-3921-4aa5-a6a3-a057c15dee87.jpeg\"></p>\n<ul>\n<li>C知道Root还活着</li>\n<li>立即发送包含Root信息的BPDU给B</li>\n<li>B接受BPDU，并且把连接C的接口设定为根端口</li>\n</ul>\n<h3 id=\"BPDUGuard\"><a href=\"#BPDUGuard\" class=\"headerlink\" title=\"BPDUGuard\"></a>BPDUGuard</h3><ul>\n<li>该接口收到BPDU报文后，会立即切换到err-disable状态</li>\n<li>常搭配portfast特性在接口上一起使用，用于连接主机</li>\n<li>可在接口上激活，也可在全局模式上配置，两者有所不同</li>\n</ul>\n<h3 id=\"边缘端口edge-ports\"><a href=\"#边缘端口edge-ports\" class=\"headerlink\" title=\"边缘端口edge-ports\"></a>边缘端口edge-ports</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1729123357180-16fc75cb-fb7f-4044-a7d7-c22dc6304f23.jpeg\"></p>\n<ul>\n<li>RSTP定义的端口类型与postfast十分类似</li>\n<li>因为这些接口用于连接主机，所以一般不会产生环路。这写端口可以跳过LST或LRN直接过渡到转发状态</li>\n<li>而且当这这些接口up down的时候不会引起拓扑变更</li>\n<li>另外，边缘端口收到BPDU，则立即丢失边缘端口的特征，变成一个普通的Spanning Tree接口</li>\n<li>在catalyst交换机上，可以用postfast关键字来进行手工配置</li>\n</ul>\n<h3 id=\"Rapid-Transition-to-Fowarding-State\"><a href=\"#Rapid-Transition-to-Fowarding-State\" class=\"headerlink\" title=\"Rapid Transition to Fowarding State\"></a>Rapid Transition to Fowarding State</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1729124004050-d0224907-d9d7-40ae-adfa-a6b2fd9994e7.jpeg\"></p>\n<ul>\n<li>RSTP能够在边缘端口及P2P链路上快速过度。</li>\n<li>RSTP的链路类型是通过接口的双工状态自动获取到的，如果接口时半双工，那么链路类型是shared port，如果是全双工那么就是p2p。</li>\n<li>当然，接口的链路类型可以通过命令修改，接口模式下：<code>spanning-tree link-type ？</code></li>\n</ul>\n<h4 id=\"链路类型\"><a href=\"#链路类型\" class=\"headerlink\" title=\"链路类型\"></a>链路类型</h4><ul>\n<li>P2P（点对点）</li>\n<li>shared port（共享端口）</li>\n</ul>\n<p>收敛对比：802.1D<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729124300768-b593c142-1bfe-4859-a852-dbc976dad390.png\"></p>\n<ul>\n<li>A及Root之间新增链路Link1</li>\n<li>A及root在link1两端的接口都进入Listening状态，A将收到Root发出来的BPDU</li>\n<li>A将BPDU从自己的指定端口发送出去，BPDU被泛洪到网络中</li>\n<li>B和C收到这个更优的BPDU，继续向网络中泛洪</li>\n<li>数秒后，D收到这个BPDU，Block掉端口P1</li>\n</ul>\n<p>Tips：**<font style=\"color:#DF2A3F;\">由于缺乏feednack机制，A连接root的接口从listening到Forwarding，需要经历15<em>2s的延迟。此时A、B、C下联的用户流量就出现了问题（因为D收到更优的BPDU后，将P1口block了，这时候ABC相当于在A的根端口过渡到forwarding之前都处于网络的“隔离地带”）</em></font>*</p>\n<h3 id=\"收敛对比：RSTP\"><a href=\"#收敛对比：RSTP\" class=\"headerlink\" title=\"收敛对比：RSTP\"></a>收敛对比：RSTP</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729124922667-c1a64149-b6c9-4514-9853-820ffa2b3a3e.png\"></p>\n<ul>\n<li>A及Root之前新增链路Link1</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729124961966-9914c0a0-fd55-4c36-aa6f-36f73a56c1c3.png\"></p>\n<ul>\n<li>A及Root在Link1两端的接口在up之后进入designated blocking。然后双方交互BPDU消息。这个过程实际上是一个协商的过程</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729125063559-0f3a0c30-32df-4e60-a446-c1f2a3ca47dd.png\"></p>\n<ul>\n<li>A在收到Root发送的BPDU后，将自己的所有非边缘端口Block（这个过程称为同步sync），并且回送一个agreement消息给Root</li>\n<li>在此之后，Root及A在link1上的端口立即都过渡到转发状态。而网路目前是没有环路的，A往下的网路目前是切断的</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729125279663-95c22911-ebd8-44ab-b706-67c5fab68886.png\"></p>\n<ul>\n<li>A与B和C之间，开始一轮新的协商，BC收到A发送的bPDU后，完成同步Sync过程，将自己的非边缘端口Block掉，然后都向A回送agreement信息。同时ABC互联的接口进入转发状态。在BC同步操作的过程中，B下联全是主机，因此没有端口被Blcok（已经完成同步）；而C要block掉连接D的端口</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729125689365-ecd8155a-fb87-4009-82a9-c104aafbd310.png\"></p>\n<ul>\n<li>完成上一步后，生成树状态如图</li>\n<li>最终BPDU到达D，D将P1口Block掉</li>\n</ul>\n<p>Tips：</p>\n<p><strong><font style=\"color:#DF2A3F;\">在RSTP收敛过程中，耗费是时间仅仅是BPDU从Root泛洪到网络末端的时间，不用受到任何Timer的限制，直接绕过两个转发延迟时间。因此收敛速度更快。</font></strong></p>\n<ul>\n<li>有两点需注意:<ul>\n<li>交换机之间的这种协商机制只在P2P链路上被执行</li>\n<li>边缘端口的配置非常重要，如果配置不当有可能会在同步过程中被BLOCK。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Proposal-Agreement-Squence\"><a href=\"#Proposal-Agreement-Squence\" class=\"headerlink\" title=\"Proposal&#x2F;Agreement Squence\"></a>Proposal&#x2F;Agreement Squence</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/jpeg/44908083/1729126908014-9ffda30f-cba3-4c31-8607-345dbd34c1e9.jpeg\"><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729126942017-56bd8d43-41d8-457f-a4c2-18f7ec77ea7c.png\"></p>\n<p><strong><font style=\"color:#DF2A3F;\">Root和A之间新增了一条链路，链路两端的接口在收到对方发送的BPDU前是designated blocking状态</font></strong></p>\n<ul>\n<li>当一个被选举为指定端口的接口在discarding或learning状态(目只在这个状态)，它在其发送的BPDU中进行proposalbit置位。这就是步骤1的P0的情况</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/44908083/1729127237066-9878cdaa-4a0b-46a8-b820-0687f9cb411e.png\"></p>\n<ul>\n<li>在A完成同步后，A就可以将新选出的根端口unblock并且发送一个agreement消息给Root。这个agreement消息是A的proposal消息的拷贝，但是agreement bit置位了。</li>\n<li>如此一来，P0就收到了应答，立即转为forwarding。注意这时候P3接口仍处于designateddiscarding状态，于是它向它的邻居网桥去发送proposal，而且也在积极等待回传的agreement以便进入forwarding状态</li>\n</ul>\n<h2 id=\"Cisco-STP-toolkit\"><a href=\"#Cisco-STP-toolkit\" class=\"headerlink\" title=\"Cisco STP toolkit\"></a>Cisco STP toolkit</h2><ul>\n<li>Portfast</li>\n<li>BPDUGuard</li>\n<li>BPDUFilter</li>\n<li>UplinkFast</li>\n<li>BackboneFast</li>\n<li>RootGuard</li>\n<li>LoopGuard</li>\n<li>UDLD</li>\n</ul>\n<h2 id=\"基础配置\"><a href=\"#基础配置\" class=\"headerlink\" title=\"基础配置\"></a>基础配置</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Switch(config)# spanning-tree vlan-id\t\t#激活特定VLAN的stp</span><br><span class=\"line\">Switch(config)# spanning-tree vlan vlan-id priorty pri\t\t#配置桥优先级，这里注意是perVLAN的，优先级默认3</span><br><span class=\"line\">Switch(config)# spanning-tree vlan vlan-id root &#123;primary | secondary&#125; [diameter diameter] #设置主根次根，该交换机在默认优先级的状态下vlan优先级为24576，如果是secondary，则为28672</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Switch(config-if)# spanning-tree [vlan vlan-id] cost cost</span><br><span class=\"line\">Switch(config-if)# spanning-tree [vlan vlan-id] post-priority pri</span><br><span class=\"line\">Switch(config)# spanning-tree [vlan vlan-id] hello-time sec</span><br><span class=\"line\">Switch(config)# spanning-tree [vlan vlan-id] forward-time sec</span><br><span class=\"line\">Switch(config)# spanning-tree [vlan vlan-id] max-time sec</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Switch(config)# spanning-tree postfast default</span><br><span class=\"line\">Switch(config-if)# spanning-tree portfast [trunk]</span><br></pre></td></tr></table></figure>","categories":[{"name":"思科","path":"api/categories/思科.json"}],"tags":[{"name":"网络","path":"api/tags/网络.json"},{"name":"CCNP","path":"api/tags/CCNP.json"}]}