{"title":"Project Treble | Android系统更新的革新之道","slug":"刷机/projecttreble","date":"2022-04-29T07:21:46.000Z","updated":"2025-09-21T10:36:34.532Z","comments":true,"path":"api/articles/刷机/projecttreble.json","excerpt":null,"covers":null,"content":"<blockquote>\n<p>每次Android新版本发布后，那种漫长等待却迟迟收不到OTA更新的焦虑，Project Treble正是为了解决这一痛点而生。</p>\n</blockquote>\n<h2 id=\"前话\"><a href=\"#前话\" class=\"headerlink\" title=\"前话\"></a>前话</h2><p>多年来，Android系统更新缓慢问题一直困扰着用户和制造商。每当Google发布新版本，设备制造商和芯片供应商都需要进行漫长而复杂的适配过程。</p>\n<p>这导致<strong>Android设备升级率长期低迷</strong>，甚至2025年仍有17%的设备无法及时获取安全补丁。</p>\n<p>2017年，Google在Android 8.0中引入了名为Project Treble的模块化架构设计，这是Android系统架构自诞生以来最重大的变革之一，旨在从根本上解决系统更新缓慢的问题。</p>\n<hr>\n<h2 id=\"01-传统Android更新的复杂流程\"><a href=\"#01-传统Android更新的复杂流程\" class=\"headerlink\" title=\"01 传统Android更新的复杂流程\"></a>01 传统Android更新的复杂流程</h2><p>在Project Treble之前，Android系统更新是一个复杂且耗时的过程。首先，Google将新系统源码发布至AOSP（Android开放源代码项目）。</p>\n<p>接着，芯片制造商（如高通、三星、联发科等）需要对源码进行针对性修改，以让自家芯片能够在新版本Android系统上正常启动和运行。</p>\n<p>然后，芯片制造商将修改后的源码交给OEM厂商，厂商根据自己的需求进一步定制新系统，加入特色功能和预装应用。</p>\n<p>最后，经过一系列测试后，新版系统才能通过OTA方式推送给用户。这个过程涉及多方协作，<strong>任何一环出现延迟</strong>都会导致更新推送缓慢。</p>\n<h2 id=\"02-Project-Treble的核心革新\"><a href=\"#02-Project-Treble的核心革新\" class=\"headerlink\" title=\"02 Project Treble的核心革新\"></a>02 Project Treble的核心革新</h2><p>Project Treble最关键的变化是引入了<strong>vendor interface（供应商接口）</strong> 的概念，将Vender Implementation（由芯片制造商编写的设备专属底层软件）从Android系统框架中剥离出来。</p>\n<p>这种架构重组创建了一个稳定的接口，位于Android操作系统框架和设备的特定硬件组件之间。通过这个接口，Android框架可以独立于设备特定的底层软件进行更新。</p>\n<p>为了保证兼容性，Google还引入了<strong>Vendor Test Suite（VTS）测试套件</strong>，类似于兼容性测试套件（CTS），用于对vendor interface的合理性和兼容性进行检验。</p>\n<h2 id=\"03-Treble架构的关键技术\"><a href=\"#03-Treble架构的关键技术\" class=\"headerlink\" title=\"03 Treble架构的关键技术\"></a>03 Treble架构的关键技术</h2><p>Project Treble引入了几项重要技术创新：HIDL（HAL接口定义语言）用于指定HAL和其他组件之间的接口；设备树叠加层（DTO）将设备树分割为主DT和叠加DT，使设备树更容易更新和修改；供应商原生开发套件（VNDK）提供了一组让供应商实现其HAL的专用库；供应商接口对象（VINTF）用于汇总设备相关信息并通过可查询的API提供这些信息。</p>\n<p>HIDL分为两种模式：Passthrough（直通式）和Binderized（绑定式）。直通式HAL主要用于兼容旧版HAL，而绑定式HAL则运行在独立的进程中，通过Binder机制与框架通信。</p>\n<h2 id=\"04-对系统更新的实际影响\"><a href=\"#04-对系统更新的实际影响\" class=\"headerlink\" title=\"04 对系统更新的实际影响\"></a>04 对系统更新的实际影响</h2><p>Project Treble极大地简化了Android更新流程。在新架构下，Google发布新版本AOSP后，OEM厂商可以直接基于A源码进行定制，无需等待芯片制造商适配。</p>\n<p>芯片制造商编写的设备专属底层部分则由Google和芯片厂商共同维护，并被设计为不再面向特定版本的Android系统。</p>\n<p>这意味着<strong>OEM厂商可以更快地适配和发布</strong>新版本Android系统，显著降低开发成本和复杂度，同时延长了设备生命周期。</p>\n<p>Google Android软件工程部门副总理David Burke表示，Project Treble将“让制造商以更低的成本更轻松、更快速地将设备更新到新版Android系统”。</p>\n<h2 id=\"05-对第三方ROM开发的影响\"><a href=\"#05-对第三方ROM开发的影响\" class=\"headerlink\" title=\"05 对第三方ROM开发的影响\"></a>05 对第三方ROM开发的影响</h2><p>Project Treble不仅对官方更新有益，也为第三方ROM开发带来了革命性变化。支持Treble的设备如果想要预装或升级Android 8.0，都必须先经过Project Treble认证。</p>\n<p>这意味着设备在OEM厂商对AOSP源码进行定制前，就已经能够运行AOSP系统并通过CDD、CTS、VTS等一系列测试。</p>\n<p>开发者通过AOSP代码编译的ROM几乎可以在任何支持Project Treble的新手机上运行，<strong>第三方ROM适配工作变得异常简单</strong>。</p>\n<p>像Lineage OS这样的自定义ROM可以更容易地适配各种设备，极大地丰富了Android生态系统的多样性。</p>\n<h2 id=\"06-现实挑战与局限性\"><a href=\"#06-现实挑战与局限性\" class=\"headerlink\" title=\"06 现实挑战与局限性\"></a>06 现实挑战与局限性</h2><p>尽管Project Treble带来了巨大改进，但Android碎片化问题并未完全解决。David Burke曾坦言，像中国、印度等新兴市场最好的手机并不一定采用最新版系统，而是选择相对稳定、成熟的版本。</p>\n<p>这种市场策略差异意味着<strong>主要流通版本仍可能存在差异</strong>。2025年的数据显示，仍有17%的Android设备无法及时获取安全补丁，碎片化问题依然存在。</p>\n<p>某些地区和市场环境下，厂商可能仍然基于商业考量选择不提供更新，尽管技术障碍已经大大降低。</p>\n<hr>\n<p>Pixel系列手机作为首批支持Project Treble的设备，率先体验到了这一技术带来的优势。</p>\n<p>随着时间推移，众多Android厂商也跟随谷歌步伐，将Project Treble应用到自己的设备中。</p>\n<p><strong>三星手机以往很少提供Android更新</strong>，但现在获得的更新比谷歌手机更多。第三方ROM开发者也不再需要为每一款设备进行专门适配，只需要编译一个通用的系统镜像（GSI）就能在所有支持Treble的设备上运行。</p>\n<p>Project Treble的价值不仅体现在技术架构上，更是Android生态系统成熟的重要标志。它平衡了开放性与碎片化之间的矛盾，为Android的持续进化奠定了坚实基础。</p>\n<h2 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\"Tips\"></a>Tips</h2><p>本文章使用Deepseek V3润色而成，如有错误，请指出，酥米将会及时更改。</p>\n","more":"<blockquote>\n<p>每次Android新版本发布后，那种漫长等待却迟迟收不到OTA更新的焦虑，Project Treble正是为了解决这一痛点而生。</p>\n</blockquote>\n<h2 id=\"前话\"><a href=\"#前话\" class=\"headerlink\" title=\"前话\"></a>前话</h2><p>多年来，Android系统更新缓慢问题一直困扰着用户和制造商。每当Google发布新版本，设备制造商和芯片供应商都需要进行漫长而复杂的适配过程。</p>\n<p>这导致<strong>Android设备升级率长期低迷</strong>，甚至2025年仍有17%的设备无法及时获取安全补丁。</p>\n<p>2017年，Google在Android 8.0中引入了名为Project Treble的模块化架构设计，这是Android系统架构自诞生以来最重大的变革之一，旨在从根本上解决系统更新缓慢的问题。</p>\n<hr>\n<h2 id=\"01-传统Android更新的复杂流程\"><a href=\"#01-传统Android更新的复杂流程\" class=\"headerlink\" title=\"01 传统Android更新的复杂流程\"></a>01 传统Android更新的复杂流程</h2><p>在Project Treble之前，Android系统更新是一个复杂且耗时的过程。首先，Google将新系统源码发布至AOSP（Android开放源代码项目）。</p>\n<p>接着，芯片制造商（如高通、三星、联发科等）需要对源码进行针对性修改，以让自家芯片能够在新版本Android系统上正常启动和运行。</p>\n<p>然后，芯片制造商将修改后的源码交给OEM厂商，厂商根据自己的需求进一步定制新系统，加入特色功能和预装应用。</p>\n<p>最后，经过一系列测试后，新版系统才能通过OTA方式推送给用户。这个过程涉及多方协作，<strong>任何一环出现延迟</strong>都会导致更新推送缓慢。</p>\n<h2 id=\"02-Project-Treble的核心革新\"><a href=\"#02-Project-Treble的核心革新\" class=\"headerlink\" title=\"02 Project Treble的核心革新\"></a>02 Project Treble的核心革新</h2><p>Project Treble最关键的变化是引入了<strong>vendor interface（供应商接口）</strong> 的概念，将Vender Implementation（由芯片制造商编写的设备专属底层软件）从Android系统框架中剥离出来。</p>\n<p>这种架构重组创建了一个稳定的接口，位于Android操作系统框架和设备的特定硬件组件之间。通过这个接口，Android框架可以独立于设备特定的底层软件进行更新。</p>\n<p>为了保证兼容性，Google还引入了<strong>Vendor Test Suite（VTS）测试套件</strong>，类似于兼容性测试套件（CTS），用于对vendor interface的合理性和兼容性进行检验。</p>\n<h2 id=\"03-Treble架构的关键技术\"><a href=\"#03-Treble架构的关键技术\" class=\"headerlink\" title=\"03 Treble架构的关键技术\"></a>03 Treble架构的关键技术</h2><p>Project Treble引入了几项重要技术创新：HIDL（HAL接口定义语言）用于指定HAL和其他组件之间的接口；设备树叠加层（DTO）将设备树分割为主DT和叠加DT，使设备树更容易更新和修改；供应商原生开发套件（VNDK）提供了一组让供应商实现其HAL的专用库；供应商接口对象（VINTF）用于汇总设备相关信息并通过可查询的API提供这些信息。</p>\n<p>HIDL分为两种模式：Passthrough（直通式）和Binderized（绑定式）。直通式HAL主要用于兼容旧版HAL，而绑定式HAL则运行在独立的进程中，通过Binder机制与框架通信。</p>\n<h2 id=\"04-对系统更新的实际影响\"><a href=\"#04-对系统更新的实际影响\" class=\"headerlink\" title=\"04 对系统更新的实际影响\"></a>04 对系统更新的实际影响</h2><p>Project Treble极大地简化了Android更新流程。在新架构下，Google发布新版本AOSP后，OEM厂商可以直接基于A源码进行定制，无需等待芯片制造商适配。</p>\n<p>芯片制造商编写的设备专属底层部分则由Google和芯片厂商共同维护，并被设计为不再面向特定版本的Android系统。</p>\n<p>这意味着<strong>OEM厂商可以更快地适配和发布</strong>新版本Android系统，显著降低开发成本和复杂度，同时延长了设备生命周期。</p>\n<p>Google Android软件工程部门副总理David Burke表示，Project Treble将“让制造商以更低的成本更轻松、更快速地将设备更新到新版Android系统”。</p>\n<h2 id=\"05-对第三方ROM开发的影响\"><a href=\"#05-对第三方ROM开发的影响\" class=\"headerlink\" title=\"05 对第三方ROM开发的影响\"></a>05 对第三方ROM开发的影响</h2><p>Project Treble不仅对官方更新有益，也为第三方ROM开发带来了革命性变化。支持Treble的设备如果想要预装或升级Android 8.0，都必须先经过Project Treble认证。</p>\n<p>这意味着设备在OEM厂商对AOSP源码进行定制前，就已经能够运行AOSP系统并通过CDD、CTS、VTS等一系列测试。</p>\n<p>开发者通过AOSP代码编译的ROM几乎可以在任何支持Project Treble的新手机上运行，<strong>第三方ROM适配工作变得异常简单</strong>。</p>\n<p>像Lineage OS这样的自定义ROM可以更容易地适配各种设备，极大地丰富了Android生态系统的多样性。</p>\n<h2 id=\"06-现实挑战与局限性\"><a href=\"#06-现实挑战与局限性\" class=\"headerlink\" title=\"06 现实挑战与局限性\"></a>06 现实挑战与局限性</h2><p>尽管Project Treble带来了巨大改进，但Android碎片化问题并未完全解决。David Burke曾坦言，像中国、印度等新兴市场最好的手机并不一定采用最新版系统，而是选择相对稳定、成熟的版本。</p>\n<p>这种市场策略差异意味着<strong>主要流通版本仍可能存在差异</strong>。2025年的数据显示，仍有17%的Android设备无法及时获取安全补丁，碎片化问题依然存在。</p>\n<p>某些地区和市场环境下，厂商可能仍然基于商业考量选择不提供更新，尽管技术障碍已经大大降低。</p>\n<hr>\n<p>Pixel系列手机作为首批支持Project Treble的设备，率先体验到了这一技术带来的优势。</p>\n<p>随着时间推移，众多Android厂商也跟随谷歌步伐，将Project Treble应用到自己的设备中。</p>\n<p><strong>三星手机以往很少提供Android更新</strong>，但现在获得的更新比谷歌手机更多。第三方ROM开发者也不再需要为每一款设备进行专门适配，只需要编译一个通用的系统镜像（GSI）就能在所有支持Treble的设备上运行。</p>\n<p>Project Treble的价值不仅体现在技术架构上，更是Android生态系统成熟的重要标志。它平衡了开放性与碎片化之间的矛盾，为Android的持续进化奠定了坚实基础。</p>\n<h2 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\"Tips\"></a>Tips</h2><p>本文章使用Deepseek V3润色而成，如有错误，请指出，酥米将会及时更改。</p>\n","categories":[{"name":"搞机类","path":"api/categories/搞机类.json"}],"tags":[{"name":"系统","path":"api/tags/系统.json"},{"name":"Linux","path":"api/tags/Linux.json"},{"name":"刷机","path":"api/tags/刷机.json"},{"name":"玩机","path":"api/tags/玩机.json"}]}